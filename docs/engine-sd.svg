<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="1200" height="1400" viewBox="0 0 1200 1400">
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="10" refX="10" refY="5" orient="auto">
      <polygon points="0 0, 10 5, 0 10" fill="#333"/>
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="600" y="30" text-anchor="middle" font-size="20" font-weight="bold">Sharpee Engine Sequence Diagram</text>
  
  <!-- Actors/Components -->
  <g id="actors">
    <!-- User -->
    <rect x="50" y="60" width="80" height="40" fill="#E8F4FD" stroke="#333"/>
    <text x="90" y="85" text-anchor="middle" font-size="14">User</text>
    <line x1="90" y1="100" x2="90" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
    
    <!-- CLI/Runner -->
    <rect x="180" y="60" width="100" height="40" fill="#E8F4FD" stroke="#333"/>
    <text x="230" y="85" text-anchor="middle" font-size="14">CLI/Runner</text>
    <line x1="230" y1="100" x2="230" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
    
    <!-- GameEngine -->
    <rect x="330" y="60" width="100" height="40" fill="#FFE8CC" stroke="#333"/>
    <text x="380" y="85" text-anchor="middle" font-size="14">GameEngine</text>
    <line x1="380" y1="100" x2="380" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
    
    <!-- Story -->
    <rect x="480" y="60" width="80" height="40" fill="#D4E8D4" stroke="#333"/>
    <text x="520" y="85" text-anchor="middle" font-size="14">Story</text>
    <line x1="520" y1="100" x2="520" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
    
    <!-- Parser -->
    <rect x="610" y="60" width="80" height="40" fill="#F4D4E8" stroke="#333"/>
    <text x="650" y="85" text-anchor="middle" font-size="14">Parser</text>
    <line x1="650" y1="100" x2="650" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
    
    <!-- WorldModel -->
    <rect x="740" y="60" width="100" height="40" fill="#E8E4F4" stroke="#333"/>
    <text x="790" y="85" text-anchor="middle" font-size="14">WorldModel</text>
    <line x1="790" y1="100" x2="790" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
    
    <!-- ActionHandler -->
    <rect x="890" y="60" width="120" height="40" fill="#FFE8E8" stroke="#333"/>
    <text x="950" y="85" text-anchor="middle" font-size="14">ActionHandler</text>
    <line x1="950" y1="100" x2="950" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
    
    <!-- TextService -->
    <rect x="1060" y="60" width="100" height="40" fill="#E8FFE8" stroke="#333"/>
    <text x="1110" y="85" text-anchor="middle" font-size="14">TextService</text>
    <line x1="1110" y1="100" x2="1110" y2="1350" stroke="#333" stroke-dasharray="5,5"/>
  </g>
  
  <!-- Sequence -->
  <g id="sequence">
    <!-- Initialization Phase -->
    <text x="50" y="130" font-size="16" font-weight="bold" fill="#666">Initialization</text>
    
    <!-- 1. Create Engine with Story -->
    <line x1="230" y1="150" x2="380" y2="150" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="305" y="145" text-anchor="middle" font-size="12">createEngineWithStory(story)</text>
    
    <!-- 2. Set Story -->
    <line x1="380" y1="180" x2="520" y2="180" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="450" y="175" text-anchor="middle" font-size="12">setStory()</text>
    
    <!-- 3. Get Config -->
    <line x1="520" y1="200" x2="380" y2="200" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="450" y="195" text-anchor="middle" font-size="12">config</text>
    
    <!-- 4. Load Text Service -->
    <line x1="380" y1="220" x2="1110" y2="220" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="745" y="215" text-anchor="middle" font-size="12">loadTextService(config)</text>
    
    <!-- 5. Initialize World -->
    <line x1="380" y1="250" x2="520" y2="250" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="450" y="245" text-anchor="middle" font-size="12">initializeWorld(world)</text>
    
    <line x1="520" y1="270" x2="790" y2="270" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="655" y="265" text-anchor="middle" font-size="12">setup entities</text>
    
    <!-- 6. Register Custom Actions -->
    <line x1="380" y1="300" x2="520" y2="300" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="450" y="295" text-anchor="middle" font-size="12">getCustomActions()</text>
    
    <line x1="520" y1="320" x2="380" y2="320" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="450" y="315" text-anchor="middle" font-size="12">actions[]</text>
    
    <line x1="380" y1="340" x2="950" y2="340" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="665" y="335" text-anchor="middle" font-size="12">registerActions()</text>
    
    <!-- 7. Register Custom Vocabulary -->
    <line x1="380" y1="370" x2="520" y2="370" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="450" y="365" text-anchor="middle" font-size="12">getCustomVocabulary()</text>
    
    <line x1="520" y1="390" x2="380" y2="390" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="450" y="385" text-anchor="middle" font-size="12">vocabulary</text>
    
    <line x1="380" y1="410" x2="650" y2="410" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="515" y="405" text-anchor="middle" font-size="12">registerVerbs()</text>
    
    <!-- 8. Start Engine -->
    <line x1="230" y1="440" x2="380" y2="440" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="305" y="435" text-anchor="middle" font-size="12">start()</text>
    
    <rect x="370" y="450" width="20" height="30" fill="#FFE8CC"/>
    <text x="400" y="470" font-size="12">emit('game:start')</text>
    
    <!-- Command Processing Phase -->
    <text x="50" y="520" font-size="16" font-weight="bold" fill="#666">Command Processing</text>
    
    <!-- 1. User Input -->
    <line x1="90" y1="540" x2="230" y2="540" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="160" y="535" text-anchor="middle" font-size="12">command</text>
    
    <!-- 2. Execute Turn -->
    <line x1="230" y1="560" x2="380" y2="560" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="305" y="555" text-anchor="middle" font-size="12">executeTurn(command)</text>
    
    <rect x="370" y="570" width="20" height="30" fill="#FFE8CC"/>
    <text x="400" y="590" font-size="12">emit('turn:start')</text>
    
    <!-- 3. Parse Command -->
    <line x1="380" y1="610" x2="650" y2="610" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="515" y="605" text-anchor="middle" font-size="12">parse(command, context)</text>
    
    <rect x="640" y="620" width="20" height="50" fill="#F4D4E8"/>
    <text x="670" y="635" font-size="11">tokenize</text>
    <text x="670" y="650" font-size="11">match patterns</text>
    <text x="670" y="665" font-size="11">resolve entities</text>
    
    <line x1="650" y1="680" x2="380" y2="680" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="515" y="675" text-anchor="middle" font-size="12">parsed command</text>
    
    <!-- 4. Execute Action -->
    <line x1="380" y1="710" x2="950" y2="710" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="665" y="705" text-anchor="middle" font-size="12">execute(parsedCommand)</text>
    
    <!-- 5. Action modifies world -->
    <line x1="950" y1="740" x2="790" y2="740" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="870" y="735" text-anchor="middle" font-size="12">updateWorld()</text>
    
    <rect x="780" y="750" width="20" height="30" fill="#E8E4F4"/>
    <text x="810" y="770" font-size="12">emit events</text>
    
    <!-- 6. Get action result -->
    <line x1="950" y1="790" x2="380" y2="790" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="665" y="785" text-anchor="middle" font-size="12">events[]</text>
    
    <!-- 7. Process events -->
    <rect x="370" y="800" width="20" height="50" fill="#FFE8CC"/>
    <text x="400" y="815" font-size="11">process</text>
    <text x="400" y="830" font-size="11">events</text>
    <text x="400" y="845" font-size="11">emit results</text>
    
    <!-- 8. Format output -->
    <line x1="380" y1="870" x2="1110" y2="870" stroke="#333" marker-end="url(#arrowhead)"/>
    <text x="745" y="865" text-anchor="middle" font-size="12">formatOutput(events)</text>
    
    <line x1="1110" y1="890" x2="380" y2="890" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="745" y="885" text-anchor="middle" font-size="12">formatted text</text>
    
    <!-- 9. Emit output -->
    <rect x="370" y="900" width="20" height="30" fill="#FFE8CC"/>
    <text x="400" y="920" font-size="12">emit('text:output', text)</text>
    
    <!-- 10. Display to user -->
    <line x1="380" y1="940" x2="230" y2="940" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="305" y="935" text-anchor="middle" font-size="12">output text</text>
    
    <line x1="230" y1="960" x2="90" y2="960" stroke="#333" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="160" y="955" text-anchor="middle" font-size="12">display</text>
    
    <!-- Turn complete -->
    <rect x="370" y="980" width="20" height="30" fill="#FFE8CC"/>
    <text x="400" y="1000" font-size="12">emit('turn:complete')</text>
    
    <!-- Error Handling -->
    <text x="50" y="1050" font-size="16" font-weight="bold" fill="#666">Error Handling</text>
    
    <!-- Parse error -->
    <line x1="650" y1="1080" x2="380" y2="1080" stroke="red" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="515" y="1075" text-anchor="middle" font-size="12" fill="red">parse error</text>
    
    <rect x="370" y="1090" width="20" height="30" fill="#FFE8CC"/>
    <text x="400" y="1110" font-size="12" fill="red">emit('turn:failed')</text>
    
    <!-- Action error -->
    <line x1="950" y1="1140" x2="380" y2="1140" stroke="red" stroke-dasharray="3,3" marker-end="url(#arrowhead)"/>
    <text x="665" y="1135" text-anchor="middle" font-size="12" fill="red">action error</text>
    
    <rect x="370" y="1150" width="20" height="30" fill="#FFE8CC"/>
    <text x="400" y="1170" font-size="12" fill="red">emit('action:error')</text>
    
    <!-- Notes -->
    <text x="50" y="1250" font-size="14" font-weight="bold" fill="#666">Key Points:</text>
    <text x="70" y="1270" font-size="12">• Story is initialized once at startup</text>
    <text x="70" y="1290" font-size="12">• Custom actions and vocabulary are registered during initialization</text>
    <text x="70" y="1310" font-size="12">• Each command goes through parse → execute → format cycle</text>
    <text x="70" y="1330" font-size="12">• Events are used for communication between components</text>
  </g>
</svg>