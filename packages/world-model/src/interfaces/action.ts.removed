/**
 * Action interface for IF command handlers
 * Actions execute validated commands and produce semantic events
 */

import type { SemanticEvent } from '@sharpee/core';
import type { ValidatedCommand } from '../commands';

/**
 * Context provided to actions during execution
 */
export interface ActionContext {
  /**
   * Read-only access to world state
   */
  world: {
    /**
     * Get an entity by ID
     */
    getEntity(id: string): any; // Will be IFEntity when available
    
    /**
     * Query entities
     */
    query(criteria: any): any[]; // Will be IFEntity[] when available
  };
  
  /**
   * Additional context data
   */
  [key: string]: any;
}

/**
 * Action interface - executes validated commands
 */
export interface Action {
  /**
   * Unique identifier for the action
   */
  id: string;
  
  /**
   * Execute the validated command
   * @param command The validated command with resolved entities
   * @param context Read-only context for the action
   * @returns Semantic events representing what happened
   */
  execute(command: ValidatedCommand, context: ActionContext): SemanticEvent[];
  
  /**
   * Optional metadata about the action
   */
  metadata?: {
    /**
     * Human-readable name
     */
    name?: string;
    
    /**
     * Description of what the action does
     */
    description?: string;
    
    /**
     * Tags for categorization
     */
    tags?: string[];
    
    /**
     * Any other metadata
     */
    [key: string]: any;
  };
}

/**
 * Registry for actions
 */
export interface ActionRegistry {
  /**
   * Register an action
   */
  register(action: Action): void;
  
  /**
   * Get an action by ID
   */
  get(id: string): Action | undefined;
  
  /**
   * Get all registered actions
   */
  getAll(): Action[];
  
  /**
   * Check if an action is registered
   */
  has(id: string): boolean;
}
