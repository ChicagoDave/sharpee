{"numTotalTestSuites":468,"numPassedTestSuites":468,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":1137,"numPassedTests":1124,"numFailedTests":0,"numPendingTests":13,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755574223361,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Debug Worn Visibility"],"fullName":"Debug Worn Visibility should debug worn item visibility","status":"passed","title":"should debug worn item visibility","duration":4.572957999998835,"failureMessages":[],"meta":{}}],"startTime":1755574266680,"endTime":1755574266684.573,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/debug-worn-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Minimal Visibility Test"],"fullName":"Minimal Visibility Test should see items in the same room","status":"passed","title":"should see items in the same room","duration":3.931305999999495,"failureMessages":[],"meta":{}}],"startTime":1755574272146,"endTime":1755574272149.9314,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/minimal-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":6.289033999999447,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should enforce maximum nesting depth","status":"passed","title":"should enforce maximum nesting depth","duration":0.5880190000007133,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should prevent circular containment","status":"passed","title":"should prevent circular containment","duration":0.7702210000006744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should calculate total weight including contents","status":"passed","title":"should calculate total weight including contents","duration":0.31806700000015553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should handle container capacity limits","status":"passed","title":"should handle container capacity limits","duration":0.6999180000002525,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle supporter and container combinations","status":"passed","title":"should handle supporter and container combinations","duration":0.7257250000002387,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle furniture with both surfaces and storage","status":"passed","title":"should handle furniture with both surfaces and storage","duration":0.5383619999993243,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should handle moving containers with contents","status":"passed","title":"should handle moving containers with contents","duration":0.33732099999906495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should update visibility when opening/closing containers","status":"passed","title":"should update visibility when opening/closing containers","duration":0.8488899999993009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find all containers of a specific type","status":"passed","title":"should find all containers of a specific type","duration":0.47407600000042294,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find containers matching complex criteria","status":"passed","title":"should find containers matching complex criteria","duration":0.808257999999114,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should handle large numbers of containers efficiently","status":"passed","title":"should handle large numbers of containers efficiently","duration":4.01680800000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should efficiently check containment loops in complex hierarchies","status":"passed","title":"should efficiently check containment loops in complex hierarchies","duration":0.3903390000014042,"failureMessages":[],"meta":{}}],"startTime":1755574235473,"endTime":1755574235490.3904,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/container-hierarchies.test.ts"},{"assertionResults":[{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should create doors connecting two rooms","status":"passed","title":"should create doors connecting two rooms","duration":2.148873000000094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should synchronize door state between rooms","status":"passed","title":"should synchronize door state between rooms","duration":1.0034599999999045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should prevent opening locked doors","status":"passed","title":"should prevent opening locked doors","duration":0.5754010000000562,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should unlock doors with correct key","status":"passed","title":"should unlock doors with correct key","duration":0.9305060000006051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should handle multiple locked doors","status":"passed","title":"should handle multiple locked doors","duration":0.5549609999998211,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle secret doors","status":"passed","title":"should handle secret doors","duration":0.912438999999722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle one-way doors","status":"passed","title":"should handle one-way doors","duration":0.26710300000013376,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle automatic closing doors","status":"passed","title":"should handle automatic closing doors","duration":0.2547709999998915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should affect visibility through doors","status":"passed","title":"should affect visibility through doors","duration":0.5319420000014361,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should handle doors with windows","status":"passed","title":"should handle doors with windows","duration":0.20478300000104355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle rooms with multiple doors","status":"passed","title":"should handle rooms with multiple doors","duration":1.130578999998761,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle double doors","status":"passed","title":"should handle double doors","duration":0.24245999999948253,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should track door usage","status":"passed","title":"should track door usage","duration":0.18774699999994482,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should handle door with special requirements","status":"passed","title":"should handle door with special requirements","duration":0.19120599999951082,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Performance with Many Doors"],"fullName":"Door Mechanics Integration Tests Performance with Many Doors should handle buildings with many doors efficiently","status":"passed","title":"should handle buildings with many doors efficiently","duration":0.5755480000007083,"failureMessages":[],"meta":{}}],"startTime":1755574235755,"endTime":1755574235765.5754,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/door-mechanics.test.ts"},{"assertionResults":[{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should allow items to be placed in rooms without ContainerTrait","status":"passed","title":"should allow items to be placed in rooms without ContainerTrait","duration":3.818427000000156,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should respect room capacity limits","status":"passed","title":"should respect room capacity limits","duration":0.39426499999990483,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should handle nested containers in rooms","status":"passed","title":"should handle nested containers in rooms","duration":0.8671350000004168,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should allow actors to carry items without ContainerTrait","status":"passed","title":"should allow actors to carry items without ContainerTrait","duration":0.8323069999996733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should handle actor inventory limits","status":"passed","title":"should handle actor inventory limits","duration":0.4101119999995717,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should prevent actors from being placed inside other actors","status":"passed","title":"should prevent actors from being placed inside other actors","duration":0.7440980000001218,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Container type detection"],"fullName":"Room and Actor as Containers Container type detection should correctly identify all container-capable entities","status":"passed","title":"should correctly identify all container-capable entities","duration":0.4004500000000917,"failureMessages":[],"meta":{}}],"startTime":1755574250748,"endTime":1755574250756.4004,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-actor-containers.test.ts"},{"assertionResults":[{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should connect rooms with simple exits","status":"passed","title":"should connect rooms with simple exits","duration":2.333204999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should find paths between connected rooms","status":"passed","title":"should find paths between connected rooms","duration":1.3562990000000354,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should navigate through open doors","status":"passed","title":"should navigate through open doors","duration":1.1273009999995338,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle closed doors","status":"passed","title":"should handle closed doors","duration":0.4007820000006177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle locked doors","status":"passed","title":"should handle locked doors","duration":0.6455800000003364,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should find alternative paths when doors are blocked","status":"passed","title":"should find alternative paths when doors are blocked","duration":0.47777099999984785,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle buildings with multiple floors","status":"passed","title":"should handle buildings with multiple floors","duration":0.36054500000045664,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle one-way passages","status":"passed","title":"should handle one-way passages","duration":0.22314300000016374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should track first visits to rooms","status":"passed","title":"should track first visits to rooms","duration":0.46628899999996065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should handle dark rooms and navigation","status":"passed","title":"should handle dark rooms and navigation","duration":0.5666499999997541,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle exit entities","status":"passed","title":"should handle exit entities","duration":0.23351700000057463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle entry points","status":"passed","title":"should handle entry points","duration":0.2011160000001837,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle large mazes efficiently","status":"passed","title":"should handle large mazes efficiently","duration":1.1519820000003165,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle disconnected room groups","status":"passed","title":"should handle disconnected room groups","duration":0.3757319999995161,"failureMessages":[],"meta":{}}],"startTime":1755574257532,"endTime":1755574257542.3757,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-navigation.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not see contents of locked closed container","status":"passed","title":"should not see contents of locked closed container","duration":4.085008000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not open locked container","status":"passed","title":"should not open locked container","duration":0.498978999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should see contents after unlocking and opening","status":"passed","title":"should see contents after unlocking and opening","duration":0.7395990000004531,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should handle nested locked containers","status":"passed","title":"should handle nested locked containers","duration":0.6009770000000572,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should see items on supporter but not in closed container","status":"passed","title":"should see items on supporter but not in closed container","duration":0.9260429999994813,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should handle complex containment hierarchy","status":"passed","title":"should handle complex containment hierarchy","duration":1.3945279999988998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should include all scenery regardless of visibility","status":"passed","title":"should include all scenery regardless of visibility","duration":0.6002500000013242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should handle wearing items with containers","status":"passed","title":"should handle wearing items with containers","duration":0.592953999999736,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should exclude worn items when specified","status":"passed","title":"should exclude worn items when specified","duration":0.6214839999993274,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should track complex worn item hierarchies","status":"passed","title":"should track complex worn item hierarchies","duration":0.5452390000009473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should navigate through doors between rooms","status":"passed","title":"should navigate through doors between rooms","duration":1.040288000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should see in lit rooms but not dark rooms","status":"passed","title":"should see in lit rooms but not dark rooms","duration":0.3696440000003349,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should handle door state synchronization","status":"passed","title":"should handle door state synchronization","duration":0.18247100000007777,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should track edible items in containers","status":"passed","title":"should track edible items in containers","duration":0.37955800000054296,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should handle consuming items from container","status":"passed","title":"should handle consuming items from container","duration":0.19932499999958964,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle readable items in locked containers on supporters","status":"passed","title":"should handle readable items in locked containers on supporters","duration":0.48473100000046543,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle switchable light sources affecting room visibility","status":"passed","title":"should handle switchable light sources affecting room visibility","duration":1.1145909999995638,"failureMessages":[],"meta":{}}],"startTime":1755574236035,"endTime":1755574236050.1145,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should see through open containers","status":"passed","title":"should see through open containers","duration":3.91674200000125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should not see into closed containers","status":"passed","title":"should not see into closed containers","duration":1.4309219999995548,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should handle mixed open/closed container chains","status":"passed","title":"should handle mixed open/closed container chains","duration":0.8428969999986293,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see items on supporters","status":"passed","title":"should see items on supporters","duration":0.9834979999995994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see through containers on supporters","status":"passed","title":"should see through containers on supporters","duration":0.7617210000007617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should not see in dark rooms","status":"passed","title":"should not see in dark rooms","duration":1.2602870000009716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with carried light source","status":"passed","title":"should see with carried light source","duration":1.495257999999012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with light source in room","status":"passed","title":"should see with light source in room","duration":0.25622699999985343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should handle light in containers","status":"passed","title":"should handle light in containers","duration":0.77237199999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see items carried by actors","status":"passed","title":"should see items carried by actors","duration":0.42827000000033877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see worn items on actors","status":"passed","title":"should see worn items on actors","duration":0.8324630000006437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should not see items in closed containers carried by actors","status":"passed","title":"should not see items in closed containers carried by actors","duration":0.31342099999892525,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see visible scenery","status":"passed","title":"should see visible scenery","duration":0.23679400000037276,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should not see invisible scenery","status":"passed","title":"should not see invisible scenery","duration":0.13482400000066264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see contents of visible scenery containers","status":"passed","title":"should see contents of visible scenery containers","duration":0.1434319999989384,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle deep visibility chains","status":"passed","title":"should handle deep visibility chains","duration":0.24520899999879475,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle multiple visibility blockers","status":"passed","title":"should handle multiple visibility blockers","duration":0.4180390000001353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle visibility with movement","status":"passed","title":"should handle visibility with movement","duration":0.1828590000004624,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should get all items in scope","status":"passed","title":"should get all items in scope","duration":0.6574579999996786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should handle scope in dark rooms with light","status":"passed","title":"should handle scope in dark rooms with light","duration":0.27569100000073377,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should handle large visibility calculations efficiently","status":"passed","title":"should handle large visibility calculations efficiently","duration":3.1056420000004437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should cache visibility calculations","status":"passed","title":"should cache visibility calculations","duration":1.26587599999948,"failureMessages":[],"meta":{}}],"startTime":1755574235696,"endTime":1755574235717.2659,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/visibility-chains.test.ts"},{"assertionResults":[{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should wear and remove simple items","status":"passed","title":"should wear and remove simple items","duration":2.512942999999723,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should prevent wearing already worn items","status":"passed","title":"should prevent wearing already worn items","duration":0.646534999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should track multiple worn items","status":"passed","title":"should track multiple worn items","duration":0.49413300000014715,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should create functional clothing with pockets","status":"passed","title":"should create functional clothing with pockets","duration":3.933467999999266,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should maintain pocket contents when wearing clothing","status":"passed","title":"should maintain pocket contents when wearing clothing","duration":1.2374669999990147,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","status":"skipped","title":"should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should support multiple layers of clothing","status":"passed","title":"should support multiple layers of clothing","duration":0.47650400000020454,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should handle mixed clothing and accessories","status":"passed","title":"should handle mixed clothing and accessories","duration":0.7764619999998104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle nested containers in pockets","status":"passed","title":"should handle nested containers in pockets","duration":1.3702650000013818,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle pocket access when clothing is in container","status":"passed","title":"should handle pocket access when clothing is in container","duration":0.9625309999992169,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle clothing that blocks slots","status":"passed","title":"should handle clothing that blocks slots","duration":0.5013089999993099,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.19492499999978463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should track clothing condition","status":"passed","title":"should track clothing condition","duration":0.16200199999912002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should handle actors with many worn items efficiently","status":"passed","title":"should handle actors with many worn items efficiently","duration":0.35965700000087963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should efficiently filter worn vs carried items","status":"passed","title":"should efficiently filter worn vs carried items","duration":1.9568409999992582,"failureMessages":[],"meta":{}}],"startTime":1755574235462,"endTime":1755574235477.9568,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/wearable-clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see objects in dark room without light","status":"passed","title":"should not see objects in dark room without light","duration":5.502141000000847,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see objects when carrying lit light source","status":"passed","title":"should see objects when carrying lit light source","duration":1.047563000000082,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see when light source is off","status":"passed","title":"should not see when light source is off","duration":1.7785380000004807,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when light source is turned on","status":"passed","title":"should see when light source is turned on","duration":0.40807499999937136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when room has light source","status":"passed","title":"should see when room has light source","duration":1.4537899999995716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should work normally in lit rooms","status":"passed","title":"should work normally in lit rooms","duration":0.3599739999990561,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","status":"skipped","title":"should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should handle underground darkness differently","status":"passed","title":"should handle underground darkness differently","duration":0.32912900000155787,"failureMessages":[],"meta":{}}],"startTime":1755574240534,"endTime":1755574240544.4539,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/darkness-light.test.ts"},{"assertionResults":[{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","status":"skipped","title":"should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should reveal concealed objects with detect magic","status":"passed","title":"should reveal concealed objects with detect magic","duration":4.327321000000666,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","status":"skipped","title":"should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should have remote viewing through crystal orb","status":"passed","title":"should have remote viewing through crystal orb","duration":0.8111009999993257,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should limit magical sight by power level","status":"passed","title":"should limit magical sight by power level","duration":1.2586670000000595,"failureMessages":[],"meta":{}}],"startTime":1755574272090,"endTime":1755574272096.2588,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/magic-sight.test.ts"},{"assertionResults":[{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear sounds from adjacent rooms","status":"passed","title":"should hear sounds from adjacent rooms","duration":3.4920869999996285,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear loud sounds from further away","status":"passed","title":"should hear loud sounds from further away","duration":0.7226940000000468,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should not hear sounds through solid barriers","status":"passed","title":"should not hear sounds through solid barriers","duration":0.9717270000001008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should support directional sound","status":"passed","title":"should support directional sound","duration":0.39115900000069814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should combine multiple sound rules","status":"passed","title":"should combine multiple sound rules","duration":0.49058700000023236,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should filter sounds by action type","status":"passed","title":"should filter sounds by action type","duration":1.1485800000000381,"failureMessages":[],"meta":{}}],"startTime":1755574251005,"endTime":1755574251012.1487,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/sound-traveling.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden entities when window is closed","status":"passed","title":"should not see garden entities when window is closed","duration":4.317743999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":1.3424699999995937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.852985000001354,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":1.0876330000010057,"failureMessages":[],"meta":{}}],"startTime":1755574272651,"endTime":1755574272659.0876,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility-fixed.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":4.431919999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.2369130000006407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should respect rule priorities when rules conflict","status":"passed","title":"should respect rule priorities when rules conflict","duration":1.0863319999998566,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support scope rule removal","status":"passed","title":"should support scope rule removal","duration":1.4831219999996392,"failureMessages":[],"meta":{}}],"startTime":1755574251000,"endTime":1755574251008.4832,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share entities between WorldModel and AuthorModel","status":"passed","title":"should share entities between WorldModel and AuthorModel","duration":1.6667340000003605,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share spatial relationships between models","status":"passed","title":"should share spatial relationships between models","duration":1.376100999999835,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share state between models","status":"passed","title":"should share state between models","duration":0.34801899999911257,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":0.68199900000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.40312399999857007,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should bypass container trait requirement","status":"passed","title":"should bypass container trait requirement","duration":0.2756390000013198,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should not check for loops","status":"passed","title":"should not check for loops","duration":0.20656600000074832,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.5702849999997852,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.6724470000008296,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should use author: prefix for events","status":"passed","title":"should use author: prefix for events","duration":0.4558770000003278,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.9431569999997009,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":1.499377000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers from specs","status":"passed","title":"should fill containers from specs","duration":0.43728200000077777,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup container properties","status":"passed","title":"should setup container properties","duration":1.8639730000013515,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":0.29975200000080804,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should remove entities completely","status":"passed","title":"should remove entities completely","duration":0.41741600000023027,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.669517000000269,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player without validation","status":"passed","title":"should set player without validation","duration":0.18490100000053644,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear all world data","status":"passed","title":"should clear all world data","duration":0.25678399999924295,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Real-World Usage Patterns"],"fullName":"AuthorModel Real-World Usage Patterns should handle complex world setup","status":"passed","title":"should handle complex world setup","duration":0.6058920000014041,"failureMessages":[],"meta":{}}],"startTime":1755574235365,"endTime":1755574235380.606,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should store entity type in attributes","status":"passed","title":"should store entity type in attributes","duration":1.5962339999987307,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should handle name property correctly","status":"passed","title":"should handle name property correctly","duration":0.27210999999988417,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should serialize with version number","status":"passed","title":"should serialize with version number","duration":0.28732099999979255,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should deserialize both old and new formats","status":"passed","title":"should deserialize both old and new formats","duration":0.3621029999994789,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in room exits","status":"passed","title":"should use IDs in room exits","duration":0.4701600000007602,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in door connections","status":"passed","title":"should use IDs in door connections","duration":0.6916049999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in exit traits","status":"passed","title":"should use IDs in exit traits","duration":0.5607230000005075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","WorldModel persistence with entities"],"fullName":"Entity System with ID Refactor WorldModel persistence with entities should save and restore entities with proper IDs","status":"passed","title":"should save and restore entities with proper IDs","duration":0.9912019999992481,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Entity relationships with IDs"],"fullName":"Entity System with ID Refactor Entity relationships with IDs should use IDs for all entity relationships","status":"passed","title":"should use IDs for all entity relationships","duration":1.5913560000008147,"failureMessages":[],"meta":{}}],"startTime":1755574249136,"endTime":1755574249143.5913,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entity-system-updates.test.ts"},{"assertionResults":[{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should generate sequential IDs with type prefixes","status":"passed","title":"should generate sequential IDs with type prefixes","duration":1.951495999999679,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should throw error for unknown types","status":"passed","title":"should throw error for unknown types","duration":0.7444569999997839,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should use object type as default","status":"passed","title":"should use object type as default","duration":0.19751999999971304,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should handle base36 conversion correctly","status":"passed","title":"should handle base36 conversion correctly","duration":0.3326869999991686,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should store entity name in attributes","status":"passed","title":"should store entity name in attributes","duration":0.3543310000004567,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should allow duplicate names","status":"passed","title":"should allow duplicate names","duration":0.20458899999994173,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should remove entities by ID","status":"passed","title":"should remove entities by ID","duration":0.4147210000000996,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","persistence"],"fullName":"ID Generation System persistence should save and restore ID system state","status":"passed","title":"should save and restore ID system state","duration":0.6110630000002857,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity attributes"],"fullName":"ID Generation System entity attributes should set displayName in entity attributes","status":"passed","title":"should set displayName in entity attributes","duration":0.21526300000004994,"failureMessages":[],"meta":{}}],"startTime":1755574264488,"endTime":1755574264494.2153,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/id-generation.test.ts"},{"assertionResults":[{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support language-agnostic token representation","status":"passed","title":"should support language-agnostic token representation","duration":2.1084380000002056,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support multiple parts of speech for a token","status":"passed","title":"should support multiple parts of speech for a token","duration":0.4878119999993942,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should handle unknown words","status":"passed","title":"should handle unknown words","duration":0.23050299999977142,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent simple verbs","status":"passed","title":"should represent simple verbs","duration":0.5807620000005045,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent phrasal verbs with particles","status":"passed","title":"should represent phrasal verbs with particles","duration":0.22474899999997433,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent multi-word verbs","status":"passed","title":"should represent multi-word verbs","duration":0.19157799999993586,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent simple nouns","status":"passed","title":"should represent simple nouns","duration":0.4267840000002252,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent nouns with articles","status":"passed","title":"should represent nouns with articles","duration":0.13913699999920937,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent complex noun phrases","status":"passed","title":"should represent complex noun phrases","duration":0.2726839999995718,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should support multiple candidates","status":"passed","title":"should support multiple candidates","duration":0.2677219999995941,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should represent preposition phrases","status":"passed","title":"should represent preposition phrases","duration":0.1557570000004489,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should support multi-word prepositions","status":"passed","title":"should support multi-word prepositions","duration":0.07924300000013318,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a simple command","status":"passed","title":"should represent a simple command","duration":0.2560849999999846,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a transitive command","status":"passed","title":"should represent a transitive command","duration":0.17527100000006612,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a ditransitive command","status":"passed","title":"should represent a ditransitive command","duration":0.1302510000004986,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should support extras field for additional data","status":"passed","title":"should support extras field for additional data","duration":0.10168900000007852,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent unknown command errors","status":"passed","title":"should represent unknown command errors","duration":0.09232700000029581,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent syntax errors with position","status":"passed","title":"should represent syntax errors with position","duration":0.05621599999994942,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent ambiguous input errors","status":"passed","title":"should represent ambiguous input errors","duration":0.0875450000003184,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support legacy ParsedCommandV1 structure","status":"passed","title":"should support legacy ParsedCommandV1 structure","duration":0.1460349999997561,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support ParsedObjectReference","status":"passed","title":"should support ParsedObjectReference","duration":0.24525199999970937,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should still have PartOfSpeech enum during migration","status":"passed","title":"should still have PartOfSpeech enum during migration","duration":0.153798000000279,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should not have language-specific parts of speech","status":"passed","title":"should not have language-specific parts of speech","duration":0.38018300000021554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design ParsedCommand should not have language-specific fields at top level","status":"passed","title":"ParsedCommand should not have language-specific fields at top level","duration":0.6289310000001933,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Token structure should support language data extension","status":"passed","title":"Token structure should support language data extension","duration":0.2217400000008638,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Pattern names should be opaque strings","status":"passed","title":"Pattern names should be opaque strings","duration":0.20264700000006997,"failureMessages":[],"meta":{}}],"startTime":1755574229787,"endTime":1755574229797.2217,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/parsed-command.test.ts"},{"assertionResults":[{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should add and retrieve entities","status":"passed","title":"should add and retrieve entities","duration":2.6245609999996304,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should return undefined for non-existent entities","status":"passed","title":"should return undefined for non-existent entities","duration":0.3446540000004461,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should remove entities and clear traits","status":"passed","title":"should remove entities and clear traits","duration":1.1505630000001474,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should clear all entities","status":"passed","title":"should clear all entities","duration":0.5250969999997324,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get all entities","status":"passed","title":"should get all entities","duration":1.4633890000004612,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get entities by type","status":"passed","title":"should get entities by type","duration":0.665685000000849,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with specific trait","status":"passed","title":"should find entities with specific trait","duration":1.330655000000661,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with all specified traits","status":"passed","title":"should find entities with all specified traits","duration":1.0486590000000433,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with any specified traits","status":"passed","title":"should find entities with any specified traits","duration":0.7777710000000297,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","iteration"],"fullName":"EntityStore iteration should be iterable","status":"passed","title":"should be iterable","duration":0.47595499999988533,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":1.0664129999995566,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.34748899999976857,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","size property"],"fullName":"EntityStore size property should reflect number of entities","status":"passed","title":"should reflect number of entities","duration":1.1881069999999454,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle removing non-existent entity","status":"passed","title":"should handle removing non-existent entity","duration":0.18127199999980803,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle duplicate adds gracefully","status":"passed","title":"should handle duplicate adds gracefully","duration":0.11923999999999069,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should work with empty store","status":"passed","title":"should work with empty store","duration":0.3563430000003791,"failureMessages":[],"meta":{}}],"startTime":1755574243027,"endTime":1755574243041.3564,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/entity-store.test.ts"},{"assertionResults":[{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should create entity with id and type","status":"passed","title":"should create entity with id and type","duration":1.9015389999995023,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should accept creation params","status":"passed","title":"should accept creation params","duration":0.35507199999938166,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should add trait","status":"passed","title":"should add trait","duration":0.2814250000001266,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should remove trait","status":"passed","title":"should remove trait","duration":0.21947399999953632,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should replace existing trait of same type","status":"passed","title":"should replace existing trait of same type","duration":0.7627940000002127,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAll","status":"passed","title":"should check multiple traits with hasAll","duration":0.2612600000002203,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAny","status":"passed","title":"should check multiple traits with hasAny","duration":0.16520299999956478,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all traits","status":"passed","title":"should get all traits","duration":0.9121879999993325,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all trait types","status":"passed","title":"should get all trait types","duration":0.47945700000036595,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should clear all traits","status":"passed","title":"should clear all traits","duration":0.2443860000003042,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should support trait aliases (getTrait, hasTrait)","status":"passed","title":"should support trait aliases (getTrait, hasTrait)","duration":0.39147400000001653,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify rooms","status":"passed","title":"should identify rooms","duration":0.18002900000010413,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify containers","status":"passed","title":"should identify containers","duration":0.13981200000034733,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify takeable items","status":"passed","title":"should identify takeable items","duration":0.0841679999994085,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get name from displayName attribute first","status":"passed","title":"should get name from displayName attribute first","duration":0.1454940000003262,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get weight from attributes","status":"passed","title":"should get weight from attributes","duration":0.0671039999997447,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","cloning"],"fullName":"IFEntity cloning should create deep copy with new ID","status":"passed","title":"should create deep copy with new ID","duration":0.46267900000020745,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":1.6460099999994782,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.31608700000015233,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect openable trait","status":"passed","title":"should detect openable trait","duration":0.12740299999950366,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect lockable trait","status":"passed","title":"should detect lockable trait","duration":0.11087899999984074,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","light source properties"],"fullName":"IFEntity light source properties should detect light provision","status":"passed","title":"should detect light provision","duration":0.10821300000043266,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","switchable properties"],"fullName":"IFEntity switchable properties should detect switchable state","status":"passed","title":"should detect switchable state","duration":0.1405880000002071,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","actor properties"],"fullName":"IFEntity actor properties should detect actors and players","status":"passed","title":"should detect actors and players","duration":0.12115800000083254,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","error handling"],"fullName":"IFEntity error handling should throw error for invalid traits","status":"passed","title":"should throw error for invalid traits","duration":0.48702999999932217,"failureMessages":[],"meta":{}}],"startTime":1755574230376,"endTime":1755574230387.487,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/if-entity.test.ts"},{"assertionResults":[{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should validate entity has required traits","status":"passed","title":"should validate entity has required traits","duration":1.7080189999996946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should get list of missing traits","status":"passed","title":"should get list of missing traits","duration":0.8866119999993316,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should work with behaviors having no requirements","status":"passed","title":"should work with behaviors having no requirements","duration":0.2092720000000554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.8501450000003388,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should throw error when required trait is missing","status":"passed","title":"should throw error when required trait is missing","duration":0.2989500000003318,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.2727070000000822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return undefined when trait is missing","status":"passed","title":"should return undefined when trait is missing","duration":0.22915199999988545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors that check state","status":"passed","title":"should support behaviors that check state","duration":0.2328029999998762,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors with no requirements","status":"passed","title":"should support behaviors with no requirements","duration":0.49899900000036723,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","inheritance"],"fullName":"Behavior inheritance should support behavior inheritance","status":"passed","title":"should support behavior inheritance","duration":0.6246090000004187,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","error messages"],"fullName":"Behavior error messages should provide clear error messages for missing traits","status":"passed","title":"should provide clear error messages for missing traits","duration":0.36935799999992014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","static nature"],"fullName":"Behavior static nature should not require instantiation","status":"passed","title":"should not require instantiation","duration":0.3558240000002115,"failureMessages":[],"meta":{}}],"startTime":1755574264059,"endTime":1755574264066.3557,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/behaviors/behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.0310300000001007,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4742920000007871,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should merge pronouns when partially provided","status":"passed","title":"should merge pronouns when partially provided","duration":0.15413400000034017,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should handle partial inventory limits","status":"passed","title":"should handle partial inventory limits","duration":0.09749100000044564,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should set pronouns using setPronouns method","status":"passed","title":"should set pronouns using setPronouns method","duration":0.28686500000003434,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should partially update pronouns","status":"passed","title":"should partially update pronouns","duration":0.16631000000052154,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should set inventory limits using setInventoryLimit method","status":"passed","title":"should set inventory limits using setInventoryLimit method","duration":0.13050099999964004,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should partially update inventory limits","status":"passed","title":"should partially update inventory limits","duration":0.11074999999982538,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should create inventory limit if not exists","status":"passed","title":"should create inventory limit if not exists","duration":0.26996300000064366,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should make actor a player using makePlayer method","status":"passed","title":"should make actor a player using makePlayer method","duration":0.2632069999999658,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should ensure player is always playable","status":"passed","title":"should ensure player is always playable","duration":0.08994700000039302,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should set custom properties using setCustomProperty","status":"passed","title":"should set custom properties using setCustomProperty","duration":0.09655100000054517,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should get custom properties using getCustomProperty","status":"passed","title":"should get custom properties using getCustomProperty","duration":0.09447700000055193,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should create customProperties object if not exists","status":"passed","title":"should create customProperties object if not exists","duration":0.09435500000108732,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should overwrite existing custom properties","status":"passed","title":"should overwrite existing custom properties","duration":0.07339499999943655,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should handle various data types in custom properties","status":"passed","title":"should handle various data types in custom properties","duration":0.154566999999588,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should handle state changes","status":"passed","title":"should handle state changes","duration":0.09982400000080816,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should maintain state through other property changes","status":"passed","title":"should maintain state through other property changes","duration":0.06855199999881734,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.2631949999995413,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should work with container trait for inventory","status":"passed","title":"should work with container trait for inventory","duration":0.1338869999999588,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create NPCs with custom properties","status":"passed","title":"should create NPCs with custom properties","duration":0.20081699999900593,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create player with inventory limits","status":"passed","title":"should create player with inventory limits","duration":0.13714200000140409,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.11640600000100676,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09006500000032247,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07581699999900593,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle pronoun edge cases","status":"passed","title":"should handle pronoun edge cases","duration":0.11739299999862851,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should preserve existing data during construction","status":"passed","title":"should preserve existing data during construction","duration":0.09386000000085915,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should handle multiple actors in a world","status":"passed","title":"should handle multiple actors in a world","duration":0.141977000001134,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should support actor transformation","status":"passed","title":"should support actor transformation","duration":0.150697000000946,"failureMessages":[],"meta":{}}],"startTime":1755574243517,"endTime":1755574243524.1506,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/actor.test.ts"},{"assertionResults":[{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.765132999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3762609999994311,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should handle all attachment types","status":"passed","title":"should handle all attachment types","duration":0.1937260000004244,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track what object is attached to","status":"passed","title":"should track what object is attached to","duration":0.1538829999999507,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle detachable attachments","status":"passed","title":"should handle detachable attachments","duration":0.22043200000007346,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle permanent attachments","status":"passed","title":"should handle permanent attachments","duration":0.1759910000000673,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track loose state","status":"passed","title":"should track loose state","duration":0.09763000000020838,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.3974930000003951,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should handle various attached objects","status":"passed","title":"should handle various attached objects","duration":0.32665999999971973,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle object breaking on detach","status":"passed","title":"should handle object breaking on detach","duration":0.1622219999999288,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle attachment point breaking","status":"passed","title":"should handle attachment point breaking","duration":0.09079599999950005,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle clean detachment","status":"passed","title":"should handle clean detachment","duration":0.07770199999959004,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should store detach sound","status":"passed","title":"should store detach sound","duration":0.06575599999996484,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should have appropriate sounds for attachment types","status":"passed","title":"should have appropriate sounds for attachment types","duration":0.1435620000002018,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.0896099999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.18960400000014488,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08974099999977625,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle very strong attachment","status":"passed","title":"should handle very strong attachment","duration":0.0681139999996958,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle attachment without target","status":"passed","title":"should handle attachment without target","duration":0.06951299999946059,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle partial detach effects","status":"passed","title":"should handle partial detach effects","duration":0.08391000000028725,"failureMessages":[],"meta":{}}],"startTime":1755574257149,"endTime":1755574257155.0898,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/attached.test.ts"},{"assertionResults":[{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9675289999995584,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.430449000000408,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should handle all ring patterns","status":"passed","title":"should handle all ring patterns","duration":0.21457100000043283,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should track bell association","status":"passed","title":"should track bell association","duration":0.22730800000044837,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle broken state","status":"passed","title":"should handle broken state","duration":0.28336900000067544,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should define audible distance","status":"passed","title":"should define audible distance","duration":0.20352900000034424,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle ring count variations","status":"passed","title":"should handle ring count variations","duration":0.15959699999984878,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should work with pullable and cord traits","status":"passed","title":"should work with pullable and cord traits","duration":0.4826499999999214,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should handle multiple bell pulls","status":"passed","title":"should handle multiple bell pulls","duration":0.40452100000038627,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should support different bell sounds","status":"passed","title":"should support different bell sounds","duration":0.4793499999996129,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should handle custom ring patterns","status":"passed","title":"should handle custom ring patterns","duration":0.1571620000004259,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should handle broken state","status":"passed","title":"should handle broken state","duration":0.19600199999968027,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should track previously working bell","status":"passed","title":"should track previously working bell","duration":0.13874399999986053,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.16495299999951385,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1722010000003138,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.23404500000015105,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle silent bell (audibleDistance 0)","status":"passed","title":"should handle silent bell (audibleDistance 0)","duration":0.09369299999980285,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle very loud bell","status":"passed","title":"should handle very loud bell","duration":0.10246100000040315,"failureMessages":[],"meta":{}}],"startTime":1755574264674,"endTime":1755574264681.2341,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/bell-pull.test.ts"},{"assertionResults":[{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.5332500000004075,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.3545829999993657,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should handle all break methods","status":"passed","title":"should handle all break methods","duration":0.38232700000025943,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track hits taken","status":"passed","title":"should track hits taken","duration":0.4999310000002879,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track partial breaking","status":"passed","title":"should track partial breaking","duration":0.600202999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle tool requirements","status":"passed","title":"should handle tool requirements","duration":1.177588000000469,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":1.8049279999995633,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":1.1680749999995896,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should work with multiple breakable objects","status":"passed","title":"should work with multiple breakable objects","duration":2.7008280000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle breaking into pieces","status":"passed","title":"should handle breaking into pieces","duration":3.1172280000000683,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle revealing contents","status":"passed","title":"should handle revealing contents","duration":0.2555709999996907,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle no break products","status":"passed","title":"should handle no break products","duration":0.20356799999990471,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.274185999999645,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.20861299999978655,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.26225200000044424,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.3656470000005356,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.18210200000066834,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a breakable wooden door","status":"passed","title":"should create a breakable wooden door","duration":0.28274099999998725,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a cuttable rope","status":"passed","title":"should create a cuttable rope","duration":0.19937499999923602,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a meltable ice barrier","status":"passed","title":"should create a meltable ice barrier","duration":0.24103699999977835,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a container that reveals contents","status":"passed","title":"should create a container that reveals contents","duration":0.2201199999999517,"failureMessages":[],"meta":{}}],"startTime":1755574250750,"endTime":1755574250771.2202,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/breakable.test.ts"},{"assertionResults":[{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.0300740000002406,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.46425099999942177,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button sizes","status":"passed","title":"should handle all button sizes","duration":0.2683580000011716,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button shapes","status":"passed","title":"should handle all button shapes","duration":0.2739110000002256,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.8446210000001884,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.7093600000007427,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle momentary button","status":"passed","title":"should handle momentary button","duration":0.4064670000007027,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle latching button","status":"passed","title":"should handle latching button","duration":0.283886999999595,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should store button appearance","status":"passed","title":"should store button appearance","duration":0.5545590000001539,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle labeled buttons","status":"passed","title":"should handle labeled buttons","duration":0.41894500000125845,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle various button materials","status":"passed","title":"should handle various button materials","duration":0.39693199999965145,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should track pressed state","status":"passed","title":"should track pressed state","duration":0.2472990000005666,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should initialize with pressed state","status":"passed","title":"should initialize with pressed state","duration":0.3668530000013561,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.6826780000010331,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1962279999988823,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.11507999999957974,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle complex button configurations","status":"passed","title":"should handle complex button configurations","duration":0.1940230000000156,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create emergency stop button","status":"passed","title":"should create emergency stop button","duration":0.21189700000104494,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create elevator call button","status":"passed","title":"should create elevator call button","duration":0.12758100000064587,"failureMessages":[],"meta":{}}],"startTime":1755574271826,"endTime":1755574271836.212,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/button.test.ts"},{"assertionResults":[{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1867829999991955,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4711200000001554,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should have all wearable properties","status":"passed","title":"should have all wearable properties","duration":0.9742260000002716,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support various materials","status":"passed","title":"should support various materials","duration":0.341511000000537,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support composite materials","status":"passed","title":"should support composite materials","duration":0.7091770000006363,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should track condition states","status":"passed","title":"should track condition states","duration":0.7416149999990012,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle condition degradation","status":"passed","title":"should handle condition degradation","duration":0.6666879999993398,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle non-damageable items","status":"passed","title":"should handle non-damageable items","duration":0.3199979999990319,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support various styles","status":"passed","title":"should support various styles","duration":1.347034000000349,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support custom style descriptions","status":"passed","title":"should support custom style descriptions","duration":0.5874120000007679,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should create clothing that can contain pockets","status":"passed","title":"should create clothing that can contain pockets","duration":1.3704649999999674,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should attach pockets to clothing","status":"passed","title":"should attach pockets to clothing","duration":2.6692220000004454,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should maintain pocket contents when clothing is worn","status":"passed","title":"should maintain pocket contents when clothing is worn","duration":1.194336000000476,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support standard clothing slots","status":"passed","title":"should support standard clothing slots","duration":0.6014340000001539,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support layered clothing","status":"passed","title":"should support layered clothing","duration":0.3157790000004752,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle clothing that blocks other slots","status":"passed","title":"should handle clothing that blocks other slots","duration":1.198526000000129,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.47043899999880523,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle custom wear/remove messages","status":"passed","title":"should handle custom wear/remove messages","duration":0.5170300000008865,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should create various clothing items","status":"passed","title":"should create various clothing items","duration":2.026065000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should distinguish between clothing and simple wearables","status":"passed","title":"should distinguish between clothing and simple wearables","duration":0.636967000000368,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle multi-pocket utility clothing","status":"passed","title":"should handle multi-pocket utility clothing","duration":2.9597710000016377,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle outfit sets with matching properties","status":"passed","title":"should handle outfit sets with matching properties","duration":0.7894360000009328,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle damaged clothing states","status":"passed","title":"should handle damaged clothing states","duration":0.4962680000007822,"failureMessages":[],"meta":{}}],"startTime":1755574243918,"endTime":1755574243943.4963,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should have container properties","status":"passed","title":"should have container properties","duration":2.308469999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.19320200000038312,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.19504700000015873,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should have container properties","status":"passed","title":"should have container properties","duration":0.35716299999967305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.16052100000069913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.11889099999916652,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should update capacity through setInventoryLimit","status":"passed","title":"should update capacity through setInventoryLimit","duration":0.10951699999986886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from room","status":"passed","title":"should get container trait from room","duration":0.15724599999975908,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from actor","status":"passed","title":"should get container trait from actor","duration":0.1920749999999316,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get explicit container trait first","status":"passed","title":"should get explicit container trait first","duration":0.16740699999991193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should return undefined for non-container entities","status":"passed","title":"should return undefined for non-container entities","duration":0.11698400000022957,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow moving items into rooms without explicit ContainerTrait","status":"passed","title":"should allow moving items into rooms without explicit ContainerTrait","duration":0.15317899999990914,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow actors to carry items without explicit ContainerTrait","status":"passed","title":"should allow actors to carry items without explicit ContainerTrait","duration":0.1206079999992653,"failureMessages":[],"meta":{}}],"startTime":1755574271581,"endTime":1755574271585.1921,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container-capability.test.ts"},{"assertionResults":[{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9730749999998807,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9365470000011555,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle weight limit","status":"passed","title":"should handle weight limit","duration":0.8550129999985074,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle volume limit","status":"passed","title":"should handle volume limit","duration":0.46454199999971024,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle item count limit","status":"passed","title":"should handle item count limit","duration":0.8094760000003589,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle multiple constraints","status":"passed","title":"should handle multiple constraints","duration":0.31893399999898975,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.18596100000104343,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should default to opaque","status":"passed","title":"should default to opaque","duration":0.1037849999993341,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should handle transparent containers","status":"passed","title":"should handle transparent containers","duration":0.4605919999994512,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should default to not enterable","status":"passed","title":"should default to not enterable","duration":0.21208699999988312,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should handle enterable containers","status":"passed","title":"should handle enterable containers","duration":0.26891499999874213,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.23775799999930314,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.26670200000080513,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.26882300000033865,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle no type restrictions","status":"passed","title":"should handle no type restrictions","duration":0.26159700000062003,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.1529690000006667,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should replace existing container trait","status":"passed","title":"should replace existing container trait","duration":0.13138299999991432,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle transparent container setup","status":"passed","title":"should handle transparent container setup","duration":0.9299620000001596,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle secure container setup","status":"passed","title":"should handle secure container setup","duration":0.3648320000011154,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle nested container setup","status":"passed","title":"should handle nested container setup","duration":0.13989499999843247,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty capacity object","status":"passed","title":"should handle empty capacity object","duration":0.13672500000029686,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty arrays for type restrictions","status":"passed","title":"should handle empty arrays for type restrictions","duration":0.10510400000021036,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle zero capacity values","status":"passed","title":"should handle zero capacity values","duration":0.09321300000010524,"failureMessages":[],"meta":{}}],"startTime":1755574240286,"endTime":1755574240298.0933,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container.test.ts"},{"assertionResults":[{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.6162530000001425,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6327340000007098,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should handle all cord types","status":"passed","title":"should handle all cord types","duration":0.40485400000034133,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should track tension state","status":"passed","title":"should track tension state","duration":0.2940359999993234,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle length properties","status":"passed","title":"should handle length properties","duration":0.33099399999991874,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle breakable cords","status":"passed","title":"should handle breakable cords","duration":0.21068100000047707,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle unbreakable cords","status":"passed","title":"should handle unbreakable cords","duration":0.16509899999982736,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.4316479999997682,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should handle different cord materials","status":"passed","title":"should handle different cord materials","duration":0.5566470000003392,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should store activation target","status":"passed","title":"should store activation target","duration":0.21995700000024954,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should handle cords without activation","status":"passed","title":"should handle cords without activation","duration":0.1053860000001805,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should store pull and break sounds","status":"passed","title":"should store pull and break sounds","duration":0.1027300000005198,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should handle cords without sounds","status":"passed","title":"should handle cords without sounds","duration":0.13489000000026863,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should have different sounds for different materials","status":"passed","title":"should have different sounds for different materials","duration":0.13347599999997328,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.17550000000028376,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.16021100000034494,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09153599999990547,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle cord at max extension","status":"passed","title":"should handle cord at max extension","duration":0.15872500000023138,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle very weak cord","status":"passed","title":"should handle very weak cord","duration":0.11243800000011106,"failureMessages":[],"meta":{}}],"startTime":1755574264795,"endTime":1755574264803.1125,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/cord.test.ts"},{"assertionResults":[{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.6924010000002454,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7352490000002945,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should handle all display types","status":"passed","title":"should handle all display types","duration":0.15355099999942468,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4255140000004758,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should work with TurnableTrait","status":"passed","title":"should work with TurnableTrait","duration":0.43537300000025425,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle numbered dial with tick marks","status":"passed","title":"should handle numbered dial with tick marks","duration":0.16683199999988574,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle labeled dial","status":"passed","title":"should handle labeled dial","duration":1.180953999999474,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle continuous vs discrete dial","status":"passed","title":"should handle continuous vs discrete dial","duration":0.16643300000032468,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle dial with units","status":"passed","title":"should handle dial with units","duration":0.25266800000008516,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.2037900000004811,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1358620000000883,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07854800000040996,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a radio tuner dial","status":"passed","title":"should create a radio tuner dial","duration":0.14498600000024453,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a washing machine dial","status":"passed","title":"should create a washing machine dial","duration":0.18795800000043528,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a combination lock dial","status":"passed","title":"should create a combination lock dial","duration":0.2148059999999532,"failureMessages":[],"meta":{}}],"startTime":1755574257453,"endTime":1755574257459.2148,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/dial.test.ts"},{"assertionResults":[{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should create trait with required room connections","status":"passed","title":"should create trait with required room connections","duration":2.6804319999992003,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should throw error without room connections","status":"passed","title":"should throw error without room connections","duration":1.229300000000876,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should handle unidirectional doors","status":"passed","title":"should handle unidirectional doors","duration":0.2048769999983051,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should maintain bidirectional as default","status":"passed","title":"should maintain bidirectional as default","duration":0.12651499999992666,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.538620000001174,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.5048530000003666,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create door with openable trait","status":"passed","title":"should create door with openable trait","duration":0.19033899999885762,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create lockable door","status":"passed","title":"should create lockable door","duration":0.2877219999991212,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should connect two specific rooms","status":"passed","title":"should connect two specific rooms","duration":0.3934259999987262,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should handle room order consistently","status":"passed","title":"should handle room order consistently","duration":0.23324200000024575,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create complete room-door-room setup","status":"passed","title":"should create complete room-door-room setup","duration":1.1930740000007063,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create locked door between rooms","status":"passed","title":"should create locked door between rooms","duration":0.3085689999988972,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should handle self-connecting door","status":"passed","title":"should handle self-connecting door","duration":0.13921600000139733,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should preserve all properties during assignment","status":"passed","title":"should preserve all properties during assignment","duration":0.15492400000039197,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.13622399999985646,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support standard room door","status":"passed","title":"should support standard room door","duration":1.3283150000006572,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support locked exterior door","status":"passed","title":"should support locked exterior door","duration":0.26087899999947695,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support archway (always open)","status":"passed","title":"should support archway (always open)","duration":0.10878200000115612,"failureMessages":[],"meta":{}}],"startTime":1755574254341,"endTime":1755574254351.3284,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/door.test.ts"},{"assertionResults":[{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.2704109999995126,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.5861129999993864,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.32532200000059674,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should allow zero nutrition value","status":"passed","title":"should allow zero nutrition value","duration":0.6565229999996518,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle solid food","status":"passed","title":"should handle solid food","duration":0.688932000000932,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle liquids","status":"passed","title":"should handle liquids","duration":1.268167000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should support various food types","status":"passed","title":"should support various food types","duration":0.550639000000956,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle single serving items","status":"passed","title":"should handle single serving items","duration":0.285239000000729,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle multi-serving items","status":"passed","title":"should handle multi-serving items","duration":2.4048640000000887,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should allow fractional servings","status":"passed","title":"should allow fractional servings","duration":0.29482699999971373,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should track serving consumption","status":"passed","title":"should track serving consumption","duration":0.19016600000031758,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should specify remains type","status":"passed","title":"should specify remains type","duration":0.10682099999939965,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should handle items with no remains","status":"passed","title":"should handle items with no remains","duration":0.09067400000094494,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should support various remain types","status":"passed","title":"should support various remain types","duration":0.31245399999897927,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with no effects","status":"passed","title":"should handle items with no effects","duration":0.23354699999981676,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with effects","status":"passed","title":"should handle items with effects","duration":0.15556300000025658,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should support various effect types","status":"passed","title":"should support various effect types","duration":0.1552400000000489,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should allow effect without description","status":"passed","title":"should allow effect without description","duration":0.10140799999862793,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should support custom consume messages","status":"passed","title":"should support custom consume messages","duration":0.12849199999982375,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should handle no consume message","status":"passed","title":"should handle no consume message","duration":0.07554700000036974,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should have appropriate messages for food vs liquid","status":"passed","title":"should have appropriate messages for food vs liquid","duration":0.11174600000049395,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.22568300000057206,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.13953899999978603,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.38280000000122527,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should create various edible entities","status":"passed","title":"should create various edible entities","duration":0.22969199999897683,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should work with containers for liquids","status":"passed","title":"should work with containers for liquids","duration":0.2013939999997092,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12024399999972957,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.06699200000002747,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09545799999978044,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.14140500000030443,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle very large values","status":"passed","title":"should handle very large values","duration":0.1521969999994326,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle magical food with multiple effects","status":"passed","title":"should handle magical food with multiple effects","duration":0.2535269999989396,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle rations with multiple servings","status":"passed","title":"should handle rations with multiple servings","duration":0.2026449999993929,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle transformation items","status":"passed","title":"should handle transformation items","duration":0.17740299999968556,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle poisoned or cursed food","status":"passed","title":"should handle poisoned or cursed food","duration":0.13588399999935064,"failureMessages":[],"meta":{}}],"startTime":1755574248920,"endTime":1755574248937.2534,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/edible.test.ts"},{"assertionResults":[{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.947189000000435,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9429229999996096,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"in\" preposition for containers","status":"passed","title":"should handle \"in\" preposition for containers","duration":0.4772710000006555,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"on\" preposition for surfaces","status":"passed","title":"should handle \"on\" preposition for surfaces","duration":0.3094830000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"under\" preposition","status":"passed","title":"should handle \"under\" preposition","duration":0.2669399999995221,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"behind\" preposition","status":"passed","title":"should handle \"behind\" preposition","duration":0.2651820000000953,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track single occupant","status":"passed","title":"should track single occupant","duration":1.9234589999996388,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track multiple occupants","status":"passed","title":"should track multiple occupants","duration":0.26794799999970564,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should handle unlimited occupancy","status":"passed","title":"should handle unlimited occupancy","duration":0.47792699999990873,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track occupancy state","status":"passed","title":"should track occupancy state","duration":0.5431559999997262,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle visible occupants","status":"passed","title":"should handle visible occupants","duration":0.2896019999998316,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle hidden occupants","status":"passed","title":"should handle hidden occupants","duration":0.1815809999998237,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.11367900000004738,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle soundproofing","status":"passed","title":"should handle soundproofing","duration":0.12742400000024645,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle standing entries","status":"passed","title":"should handle standing entries","duration":0.0981050000000323,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle sitting entries","status":"passed","title":"should handle sitting entries","duration":0.12606200000027457,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle lying entries","status":"passed","title":"should handle lying entries","duration":0.08399099999951432,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle no posture requirement","status":"passed","title":"should handle no posture requirement","duration":0.05915000000004511,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle enter message","status":"passed","title":"should handle enter message","duration":0.11105499999939639,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle exit message","status":"passed","title":"should handle exit message","duration":0.06878899999992427,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle full message","status":"passed","title":"should handle full message","duration":0.11768600000050355,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle blocked message","status":"passed","title":"should handle blocked message","duration":0.07505499999933818,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle stationary entries","status":"passed","title":"should handle stationary entries","duration":1.2346999999999753,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle mobile entries","status":"passed","title":"should handle mobile entries","duration":0.08650200000010955,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle rideable animals","status":"passed","title":"should handle rideable animals","duration":0.09067200000026787,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle open access","status":"passed","title":"should handle open access","duration":0.06703899999956775,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle blocked access","status":"passed","title":"should handle blocked access","duration":0.06793300000026647,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle conditional access","status":"passed","title":"should handle conditional access","duration":0.12126699999953416,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.1259729999992487,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should replace existing entry trait","status":"passed","title":"should replace existing entry trait","duration":0.10722799999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle nested entries","status":"passed","title":"should handle nested entries","duration":0.2508830000006128,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle multi-purpose entries","status":"passed","title":"should handle multi-purpose entries","duration":0.11123100000077102,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle vehicle with compartments","status":"passed","title":"should handle vehicle with compartments","duration":0.23349200000029668,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle theatrical entries","status":"passed","title":"should handle theatrical entries","duration":0.13654399999995803,"failureMessages":[],"meta":{}}],"startTime":1755574242895,"endTime":1755574242909.1365,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/entry.test.ts"},{"assertionResults":[{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with required values","status":"passed","title":"should create trait with required values","duration":1.677534000000378,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should throw error if required fields are missing","status":"passed","title":"should throw error if required fields are missing","duration":0.8696419999996579,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with all optional values","status":"passed","title":"should create trait with all optional values","duration":0.9033180000005814,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle north direction","status":"passed","title":"should handle north direction","duration":0.16052400000080524,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle south direction","status":"passed","title":"should handle south direction","duration":0.1452079999999114,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle east direction","status":"passed","title":"should handle east direction","duration":0.08759300000019721,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle west direction","status":"passed","title":"should handle west direction","duration":0.08731199999965611,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle up direction","status":"passed","title":"should handle up direction","duration":0.06590099999993981,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle down direction","status":"passed","title":"should handle down direction","duration":0.16728499999953783,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle in direction","status":"passed","title":"should handle in direction","duration":0.13630499999999302,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle out direction","status":"passed","title":"should handle out direction","duration":0.07319199999983539,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle diagonal directions","status":"passed","title":"should handle diagonal directions","duration":0.1398060000010446,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle magic words","status":"passed","title":"should handle magic words","duration":0.8283859999992274,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle action-based exits","status":"passed","title":"should handle action-based exits","duration":0.16869000000042433,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle object-interaction exits","status":"passed","title":"should handle object-interaction exits","duration":0.21933700000045064,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle simple bidirectional exit","status":"passed","title":"should handle simple bidirectional exit","duration":0.17228200000135985,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle bidirectional portal","status":"passed","title":"should handle bidirectional portal","duration":0.19707299999936367,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle hidden exits","status":"passed","title":"should handle hidden exits","duration":0.32412400000066555,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle visible but unlisted exits","status":"passed","title":"should handle visible but unlisted exits","duration":0.11988400000154797,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle discovered exits","status":"passed","title":"should handle discovered exits","duration":0.090596000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle simple condition","status":"passed","title":"should handle simple condition","duration":0.11292200000025332,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle complex condition","status":"passed","title":"should handle complex condition","duration":1.5122300000002724,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle time-based condition","status":"passed","title":"should handle time-based condition","duration":0.1102790000004461,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom use messages","status":"passed","title":"should handle custom use messages","duration":0.11126700000022538,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom blocked messages","status":"passed","title":"should handle custom blocked messages","duration":0.0664969999997993,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should allow no custom messages","status":"passed","title":"should allow no custom messages","duration":0.06308899999930873,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.22997100000065984,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should replace existing exit trait","status":"passed","title":"should replace existing exit trait","duration":0.09986799999933282,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle one-way exit","status":"passed","title":"should handle one-way exit","duration":0.0715890000010404,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle teleporter","status":"passed","title":"should handle teleporter","duration":0.13775600000008126,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle vehicle-based exit","status":"passed","title":"should handle vehicle-based exit","duration":0.1549509999986185,"failureMessages":[],"meta":{}}],"startTime":1755574255302,"endTime":1755574255312.155,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/exit.test.ts"},{"assertionResults":[{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.8343730000005962,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2364879999995537,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should handle all fragile materials","status":"passed","title":"should handle all fragile materials","duration":0.33524000000033993,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default glass to sharp fragments","status":"passed","title":"should default glass to sharp fragments","duration":0.2043069999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default crystal to sharp fragments","status":"passed","title":"should default crystal to sharp fragments","duration":0.2847639999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should not default other materials to sharp","status":"passed","title":"should not default other materials to sharp","duration":0.26065699999981007,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should allow override of sharp fragments","status":"passed","title":"should allow override of sharp fragments","duration":0.15174000000024535,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break threshold"],"fullName":"FragileTrait break threshold should handle different fragility levels","status":"passed","title":"should handle different fragility levels","duration":0.25994400000035967,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.9098359999998138,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should work with multiple fragile objects","status":"passed","title":"should work with multiple fragile objects","duration":0.4689059999991514,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that break into fragments","status":"passed","title":"should handle objects that break into fragments","duration":1.194484000000557,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that trigger events when broken","status":"passed","title":"should handle objects that trigger events when broken","duration":0.12377900000046793,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should track damaged state","status":"passed","title":"should track damaged state","duration":0.07445700000062061,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should track value loss when broken","status":"passed","title":"should track value loss when broken","duration":0.06988300000011805,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should handle no value specification","status":"passed","title":"should handle no value specification","duration":0.04235100000005332,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10718499999984488,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08462599999984377,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08500199999980396,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle custom break messages","status":"passed","title":"should handle custom break messages","duration":0.2614530000000741,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile glass vase","status":"passed","title":"should create a fragile glass vase","duration":1.5485380000000077,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile ice sculpture","status":"passed","title":"should create a fragile ice sculpture","duration":0.37392499999987194,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a security-protected display case","status":"passed","title":"should create a security-protected display case","duration":0.4869410000001153,"failureMessages":[],"meta":{}}],"startTime":1755574257117,"endTime":1755574257128.487,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/fragile.test.ts"},{"assertionResults":[{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.703690999999708,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.40967900000032387,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"a\" article","status":"passed","title":"should handle \"a\" article","duration":0.3777749999999287,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"an\" article","status":"passed","title":"should handle \"an\" article","duration":0.2244860000000699,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"the\" article","status":"passed","title":"should handle \"the\" article","duration":0.11430600000039703,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"some\" article for plural/mass nouns","status":"passed","title":"should handle \"some\" article for plural/mass nouns","duration":0.1584579999998823,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle empty article for proper names","status":"passed","title":"should handle empty article for proper names","duration":0.13678499999969063,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should start with empty aliases","status":"passed","title":"should start with empty aliases","duration":0.1297629999999117,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should store multiple aliases","status":"passed","title":"should store multiple aliases","duration":1.3857950000001438,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle full description","status":"passed","title":"should handle full description","duration":0.22548100000039994,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle brief description separately","status":"passed","title":"should handle brief description separately","duration":0.10713299999952142,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should allow empty descriptions","status":"passed","title":"should allow empty descriptions","duration":0.09692200000063167,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should default to not concealed","status":"passed","title":"should default to not concealed","duration":0.07916000000022905,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should handle concealed objects","status":"passed","title":"should handle concealed objects","duration":0.19609500000024127,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle weight","status":"passed","title":"should handle weight","duration":0.09576899999956368,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle volume","status":"passed","title":"should handle volume","duration":0.08870899999965332,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle size categories","status":"passed","title":"should handle size categories","duration":0.16450299999996787,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should allow undefined physical properties","status":"passed","title":"should allow undefined physical properties","duration":0.10415199999988545,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.2304100000001199,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should replace existing identity trait","status":"passed","title":"should replace existing identity trait","duration":0.13698199999998906,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle proper names correctly","status":"passed","title":"should handle proper names correctly","duration":0.12799699999959557,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle mass nouns","status":"passed","title":"should handle mass nouns","duration":0.09111900000061723,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle unique items","status":"passed","title":"should handle unique items","duration":0.07274500000039552,"failureMessages":[],"meta":{}}],"startTime":1755574262863,"endTime":1755574262872.137,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/identity.test.ts"},{"assertionResults":[{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.0066759999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6300529999998616,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should handle all positions","status":"passed","title":"should handle all positions","duration":0.20453900000029535,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should track position changes","status":"passed","title":"should track position changes","duration":0.4141319999998814,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.279645999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle stuck state","status":"passed","title":"should handle stuck state","duration":0.18437699999958568,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.4290680000003704,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should handle multiple levers in world","status":"passed","title":"should handle multiple levers in world","duration":0.22346199999992677,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should store custom position names","status":"passed","title":"should store custom position names","duration":0.2812000000003536,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should handle partial position names","status":"passed","title":"should handle partial position names","duration":0.16796100000010483,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should store lever sound","status":"passed","title":"should store lever sound","duration":0.10123900000053254,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should handle missing sound","status":"passed","title":"should handle missing sound","duration":0.06051300000035553,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1242660000007163,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09202499999992142,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0849129999996876,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle stuck spring-loaded lever","status":"passed","title":"should handle stuck spring-loaded lever","duration":0.12089600000035716,"failureMessages":[],"meta":{}}],"startTime":1755574272191,"endTime":1755574272197.1243,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lever.test.ts"},{"assertionResults":[{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.595382000000427,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4237960000000385,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.2555549999997311,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle fuel-based initialization","status":"passed","title":"should handle fuel-based initialization","duration":0.26418199999989156,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should support various brightness levels","status":"passed","title":"should support various brightness levels","duration":0.25296199999957025,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should handle edge brightness values","status":"passed","title":"should handle edge brightness values","duration":0.20163599999978032,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should allow out-of-range brightness values","status":"passed","title":"should allow out-of-range brightness values","duration":0.13915999999971973,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should track lit status","status":"passed","title":"should track lit status","duration":0.11512299999958486,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should maintain brightness when lit state changes","status":"passed","title":"should maintain brightness when lit state changes","duration":0.25805600000057893,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle infinite fuel sources","status":"passed","title":"should handle infinite fuel sources","duration":0.17105500000070606,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle fuel-based sources","status":"passed","title":"should handle fuel-based sources","duration":0.1081480000002557,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should track fuel consumption","status":"passed","title":"should track fuel consumption","duration":0.09643799999957992,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle various consumption rates","status":"passed","title":"should handle various consumption rates","duration":0.08550600000035047,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle partial fuel properties","status":"passed","title":"should handle partial fuel properties","duration":0.08601199999975506,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.32033400000000256,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should create various light source entities","status":"passed","title":"should create various light source entities","duration":0.2713960000000952,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with switchable light sources","status":"passed","title":"should work with switchable light sources","duration":0.19164600000021892,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with wearable light sources","status":"passed","title":"should work with wearable light sources","duration":0.1787610000001223,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle flame-based sources","status":"passed","title":"should handle flame-based sources","duration":0.1217739999992773,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle electric sources","status":"passed","title":"should handle electric sources","duration":0.0789679999998043,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle magical sources","status":"passed","title":"should handle magical sources","duration":0.06397199999992154,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1366280000002007,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.0669289999996181,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07406399999945279,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle zero values","status":"passed","title":"should handle zero values","duration":0.08505799999966257,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.06935799999973824,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.10773100000005797,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle refillable light sources","status":"passed","title":"should handle refillable light sources","duration":0.12142799999946874,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle multi-mode light sources","status":"passed","title":"should handle multi-mode light sources","duration":0.11725599999954284,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle degrading light sources","status":"passed","title":"should handle degrading light sources","duration":0.19943899999998393,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle emergency light sources","status":"passed","title":"should handle emergency light sources","duration":0.32004199999937555,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle combined light sources","status":"passed","title":"should handle combined light sources","duration":0.15554900000006455,"failureMessages":[],"meta":{}}],"startTime":1755574257615,"endTime":1755574257622.32,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/light-source.test.ts"},{"assertionResults":[{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.735012999999526,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6374399999986053,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should use startsLocked to set initial isLocked if not provided","status":"passed","title":"should use startsLocked to set initial isLocked if not provided","duration":0.1508140000005369,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should prefer explicit isLocked over startsLocked","status":"passed","title":"should prefer explicit isLocked over startsLocked","duration":0.15478900000016438,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle single key","status":"passed","title":"should handle single key","duration":0.3111799999987852,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle multiple keys","status":"passed","title":"should handle multiple keys","duration":0.7122699999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle both single and multiple keys","status":"passed","title":"should handle both single and multiple keys","duration":0.17462999999952444,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle master key acceptance","status":"passed","title":"should handle master key acceptance","duration":0.10082499999953143,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should allow changing lock state","status":"passed","title":"should allow changing lock state","duration":0.25200199999926554,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should handle auto-lock behavior flag","status":"passed","title":"should handle auto-lock behavior flag","duration":0.1673240000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3263010000009672,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should work with lockable container","status":"passed","title":"should work with lockable container","duration":0.36315900000045076,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should create matching key entity","status":"passed","title":"should create matching key entity","duration":0.32126099999914004,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should store all lock-related messages","status":"passed","title":"should store all lock-related messages","duration":0.21069600000009814,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.14151199999832897,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","sound effects"],"fullName":"LockableTrait sound effects should support lock/unlock sounds","status":"passed","title":"should support lock/unlock sounds","duration":0.21840900000097463,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1514839999999822,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.12299399999938032,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle entity without key requirement","status":"passed","title":"should handle entity without key requirement","duration":0.12605099999927916,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.11920000000100117,"failureMessages":[],"meta":{}}],"startTime":1755574260753,"endTime":1755574260762.1191,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lockable.test.ts"},{"assertionResults":[{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.9628970000012487,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.4290450000007695,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should handle all weight classes","status":"passed","title":"should handle all weight classes","duration":0.3666669999984151,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should track blocked exits","status":"passed","title":"should track blocked exits","duration":2.701643000000331,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle single blocked exit","status":"passed","title":"should handle single blocked exit","duration":0.7654480000001058,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle no blocked exits when not blocking","status":"passed","title":"should handle no blocked exits when not blocking","duration":1.1026379999984783,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should track what is revealed when moved","status":"passed","title":"should track what is revealed when moved","duration":0.45515900000100373,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should handle no reveal","status":"passed","title":"should handle no reveal","duration":0.4550940000008268,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track if moved","status":"passed","title":"should track if moved","duration":0.592956000000413,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track original room","status":"passed","title":"should track original room","duration":0.37689700000009907,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":1.4847679999984393,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.5457409999999072,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with both PushableTrait and PullableTrait","status":"passed","title":"should work with both PushableTrait and PullableTrait","duration":0.44989799999893876,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle single person movement","status":"passed","title":"should handle single person movement","duration":0.25450199999977485,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle multi-person movement","status":"passed","title":"should handle multi-person movement","duration":0.2606130000003759,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should default people required when multi-person is true","status":"passed","title":"should default people required when multi-person is true","duration":0.23136999999951513,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should store movement sounds","status":"passed","title":"should store movement sounds","duration":0.19634599999881175,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should handle no sound","status":"passed","title":"should handle no sound","duration":0.07410100000015518,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1712150000003021,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.19097899999906076,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1197439999996277,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a blocking boulder","status":"passed","title":"should create a blocking boulder","duration":0.4220310000000609,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a moveable bookshelf","status":"passed","title":"should create a moveable bookshelf","duration":0.24858799999856274,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a light moveable crate","status":"passed","title":"should create a light moveable crate","duration":0.19191800000044168,"failureMessages":[],"meta":{}}],"startTime":1755574243948,"endTime":1755574243966.192,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/moveable-scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9874769999996715,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.342677000000549,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should use startsOpen to set initial isOpen if not provided","status":"passed","title":"should use startsOpen to set initial isOpen if not provided","duration":0.13220599999931437,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should prefer explicit isOpen over startsOpen","status":"passed","title":"should prefer explicit isOpen over startsOpen","duration":0.2080599999999322,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should allow changing open state","status":"passed","title":"should allow changing open state","duration":0.22248399999989488,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should maintain other properties when state changes","status":"passed","title":"should maintain other properties when state changes","duration":0.15599199999996927,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4369749999996202,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should work with container entities","status":"passed","title":"should work with container entities","duration":0.2903949999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should handle entity with multiple state traits","status":"passed","title":"should handle entity with multiple state traits","duration":0.3170350000000326,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle one-way openable (canClose = false)","status":"passed","title":"should handle one-way openable (canClose = false)","duration":0.1801629999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle revealsContents setting","status":"passed","title":"should handle revealsContents setting","duration":0.13513899999998102,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should support sound effects","status":"passed","title":"should support sound effects","duration":0.09105300000010175,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should store all custom messages","status":"passed","title":"should store all custom messages","duration":0.11593899999934365,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.16378900000017893,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10966600000028848,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08794900000066264,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07125799999994342,"failureMessages":[],"meta":{}}],"startTime":1755574264749,"endTime":1755574264755.0713,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/openable.test.ts"},{"assertionResults":[{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.0296699999998964,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.5669020000004821,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should handle all pull types","status":"passed","title":"should handle all pull types","duration":0.2342899999994188,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should track pull count","status":"passed","title":"should track pull count","duration":0.15312900000026275,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.2011979999997493,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should respect max pulls","status":"passed","title":"should respect max pulls","duration":0.22887900000023365,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.49621100000058505,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should work with multiple pullable objects","status":"passed","title":"should work with multiple pullable objects","duration":0.3240400000004229,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle lever configuration","status":"passed","title":"should handle lever configuration","duration":0.37443899999925634,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle cord configuration","status":"passed","title":"should handle cord configuration","duration":0.19216899999992165,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle attached configuration","status":"passed","title":"should handle attached configuration","duration":0.15369300000020303,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.18015099999956874,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.1848199999994904,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.1082459999997809,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.2033820000006017,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.3702769999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.12293399999998655,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.1055240000005142,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle non-repeatable pulls","status":"passed","title":"should handle non-repeatable pulls","duration":0.09421299999939947,"failureMessages":[],"meta":{}}],"startTime":1755574265031,"endTime":1755574265038.1055,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pullable.test.ts"},{"assertionResults":[{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.119190999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6157560000001467,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should handle all push types","status":"passed","title":"should handle all push types","duration":0.20470599999953265,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should track push count","status":"passed","title":"should track push count","duration":0.19624800000019604,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.24235499999940657,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should respect max pushes","status":"passed","title":"should respect max pushes","duration":0.17555300000003626,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.29386500000055094,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should work with multiple pushable objects","status":"passed","title":"should work with multiple pushable objects","duration":0.17522999999982858,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle button configuration","status":"passed","title":"should handle button configuration","duration":0.2646359999998822,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.21213999999963562,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle moveable configuration","status":"passed","title":"should handle moveable configuration","duration":0.21715299999959825,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should handle all push directions","status":"passed","title":"should handle all push directions","duration":0.1625500000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should default to no specific direction","status":"passed","title":"should default to no specific direction","duration":0.06493700000009994,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.11704099999951723,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.084831000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.18125599999984843,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.15143999999963853,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.12231000000065251,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.10848199999963981,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle non-repeatable pushes","status":"passed","title":"should handle non-repeatable pushes","duration":0.10650499999974272,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle passage revealing","status":"passed","title":"should handle passage revealing","duration":0.07803400000011607,"failureMessages":[],"meta":{}}],"startTime":1755574243848,"endTime":1755574243856.1812,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pushable.test.ts"},{"assertionResults":[{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.134261000001061,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.41688799999974435,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should auto-initialize pages from pageContent","status":"passed","title":"should auto-initialize pages from pageContent","duration":1.1416009999993548,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should not override currentPage if already set","status":"passed","title":"should not override currentPage if already set","duration":0.41554700000051525,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle simple text","status":"passed","title":"should handle simple text","duration":0.4710239999985788,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle multi-line text","status":"passed","title":"should handle multi-line text","duration":0.34388100000069244,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle preview text","status":"passed","title":"should handle preview text","duration":0.20078899999862188,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle empty text","status":"passed","title":"should handle empty text","duration":0.32469900000069174,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should support different languages","status":"passed","title":"should support different languages","duration":1.4198599999999715,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle ability requirements","status":"passed","title":"should handle ability requirements","duration":0.6561080000010406,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle item requirements","status":"passed","title":"should handle item requirements","duration":0.2734679999994114,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle no requirements","status":"passed","title":"should handle no requirements","duration":0.33311700000012934,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should support various readable types","status":"passed","title":"should support various readable types","duration":0.33642800000052375,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should allow custom readable types","status":"passed","title":"should allow custom readable types","duration":0.2049619999997958,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle books with multiple pages","status":"passed","title":"should handle books with multiple pages","duration":0.3827290000008361,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle current page navigation","status":"passed","title":"should handle current page navigation","duration":0.307650000000649,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle single page with pageContent","status":"passed","title":"should handle single page with pageContent","duration":0.15927600000031816,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle empty pageContent array","status":"passed","title":"should handle empty pageContent array","duration":1.1216940000012983,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should track read status","status":"passed","title":"should track read status","duration":0.24807700000019395,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should handle readability state","status":"passed","title":"should handle readability state","duration":0.14030300000013085,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should maintain state through changes","status":"passed","title":"should maintain state through changes","duration":0.14937000000099943,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3896359999998822,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should create various readable entities","status":"passed","title":"should create various readable entities","duration":0.3177430000014283,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should work with openable books","status":"passed","title":"should work with openable books","duration":0.9143119999989722,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.27046399999926507,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.14460200000030454,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1061969999991561,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle page bounds","status":"passed","title":"should handle page bounds","duration":0.09733400000004622,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should preserve data integrity","status":"passed","title":"should preserve data integrity","duration":0.189805999998498,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle special text content","status":"passed","title":"should handle special text content","duration":0.18203100000027916,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle magical tome with requirements","status":"passed","title":"should handle magical tome with requirements","duration":1.1347699999987526,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle inscribed objects","status":"passed","title":"should handle inscribed objects","duration":0.2398909999992611,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle dynamic readability","status":"passed","title":"should handle dynamic readability","duration":0.12852600000042003,"failureMessages":[],"meta":{}}],"startTime":1755574244498,"endTime":1755574244516.1284,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/readable.test.ts"},{"assertionResults":[{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.68188900000132,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2080380000006699,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle simple exits","status":"passed","title":"should handle simple exits","duration":0.6740610000015295,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle exits with doors","status":"passed","title":"should handle exits with doors","duration":0.18591799999921932,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle blocked exits","status":"passed","title":"should handle blocked exits","duration":0.38722499999857973,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle custom exits","status":"passed","title":"should handle custom exits","duration":0.24665599999934784,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle dark rooms","status":"passed","title":"should handle dark rooms","duration":0.15261300000020128,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle lit rooms","status":"passed","title":"should handle lit rooms","duration":0.17301800000132062,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle outdoor lighting","status":"passed","title":"should handle outdoor lighting","duration":0.5112449999996898,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle underground rooms","status":"passed","title":"should handle underground rooms","duration":0.2677869999988616,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should start unvisited","status":"passed","title":"should start unvisited","duration":0.22936900000058813,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should track visited state","status":"passed","title":"should track visited state","duration":0.11287000000083935,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should handle initial description","status":"passed","title":"should handle initial description","duration":0.08469999999942956,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient sounds","status":"passed","title":"should handle ambient sounds","duration":0.07909199999994598,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient smells","status":"passed","title":"should handle ambient smells","duration":0.056038999999145744,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle both sound and smell","status":"passed","title":"should handle both sound and smell","duration":0.12065400000028603,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle region assignment","status":"passed","title":"should handle region assignment","duration":0.055291000000579515,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle multiple tags","status":"passed","title":"should handle multiple tags","duration":0.22211299999980838,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle rooms without regions or tags","status":"passed","title":"should handle rooms without regions or tags","duration":0.10132200000043667,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3578529999995226,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should work with container trait","status":"passed","title":"should work with container trait","duration":0.4459529999985534,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle maze-like connections","status":"passed","title":"should handle maze-like connections","duration":0.21454199999971024,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle multi-level connections","status":"passed","title":"should handle multi-level connections","duration":0.4677259999989474,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle outdoor/indoor transitions","status":"passed","title":"should handle outdoor/indoor transitions","duration":0.8358430000007502,"failureMessages":[],"meta":{}}],"startTime":1755574256827,"endTime":1755574256837.836,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/room.test.ts"},{"assertionResults":[{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.2102279999999155,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.21297500000036962,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.12807599999905506,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle only mentioned property","status":"passed","title":"should handle only mentioned property","duration":0.222845000000234,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support custom messages for different items","status":"passed","title":"should support custom messages for different items","duration":0.35405700000046636,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should allow undefined message for default handling","status":"passed","title":"should allow undefined message for default handling","duration":0.11104800000066462,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support humorous messages","status":"passed","title":"should support humorous messages","duration":0.0786389999993844,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle mentioned scenery","status":"passed","title":"should handle mentioned scenery","duration":0.06908299999849987,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle unmentioned scenery","status":"passed","title":"should handle unmentioned scenery","duration":0.1691529999989143,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should allow toggling mentioned state","status":"passed","title":"should allow toggling mentioned state","duration":0.12826200000017707,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3266769999991084,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should create various scenery entities","status":"passed","title":"should create various scenery entities","duration":0.13957200000004377,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with room decorations","status":"passed","title":"should work with room decorations","duration":0.1846270000005461,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with interactive scenery","status":"passed","title":"should work with interactive scenery","duration":0.3154919999997219,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle architectural features","status":"passed","title":"should handle architectural features","duration":0.10212599999977101,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle natural features","status":"passed","title":"should handle natural features","duration":0.1547499999996944,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle furniture","status":"passed","title":"should handle furniture","duration":0.1766139999999723,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle always-mentioned scenery","status":"passed","title":"should handle always-mentioned scenery","duration":0.12549200000103156,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle hidden scenery","status":"passed","title":"should handle hidden scenery","duration":0.1079490000010992,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle discoverable scenery","status":"passed","title":"should handle discoverable scenery","duration":0.12111100000038277,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.16310599999997066,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09751800000049116,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.14215800000056333,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle null values","status":"passed","title":"should handle null values","duration":0.16739800000141258,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should preserve object reference","status":"passed","title":"should preserve object reference","duration":0.16325900000083493,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with state changes","status":"passed","title":"should handle scenery with state changes","duration":0.14322999999967578,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery containers","status":"passed","title":"should handle scenery containers","duration":0.1431880000000092,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with multiple states","status":"passed","title":"should handle scenery with multiple states","duration":0.0945400000000518,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle room-defining scenery","status":"passed","title":"should handle room-defining scenery","duration":0.10589099999924656,"failureMessages":[],"meta":{}}],"startTime":1755574252349,"endTime":1755574252356.1433,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.330373000000691,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.4907309999998688,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle partial capacity initialization","status":"passed","title":"should handle partial capacity initialization","duration":0.3951360000000932,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle only enterable property","status":"passed","title":"should handle only enterable property","duration":0.49641199999950913,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support weight-based capacity","status":"passed","title":"should support weight-based capacity","duration":0.47784799999953975,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support item count capacity","status":"passed","title":"should support item count capacity","duration":0.34750400000029913,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support both weight and item limits","status":"passed","title":"should support both weight and item limits","duration":0.332180999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":2.5107939999998052,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle zero capacity","status":"passed","title":"should handle zero capacity","duration":3.5389249999998356,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":1.8551339999994525,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.9479849999997896,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.2569499999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle empty type arrays","status":"passed","title":"should handle empty type arrays","duration":0.9410539999998946,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle non-enterable supporters","status":"passed","title":"should handle non-enterable supporters","duration":0.3817690000005314,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle enterable supporters","status":"passed","title":"should handle enterable supporters","duration":0.29116199999953096,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should default to non-enterable","status":"passed","title":"should default to non-enterable","duration":0.4154369999996561,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.6281250000001819,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should create various supporter entities","status":"passed","title":"should create various supporter entities","duration":0.28174699999999575,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with scenery supporters","status":"passed","title":"should work with scenery supporters","duration":0.7876079999996364,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with enterable supporters","status":"passed","title":"should work with enterable supporters","duration":0.3396489999995538,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle furniture supporters","status":"passed","title":"should handle furniture supporters","duration":0.2512249999999767,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle specialized supporters","status":"passed","title":"should handle specialized supporters","duration":1.123739000000569,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle natural supporters","status":"passed","title":"should handle natural supporters","duration":0.4140220000008412,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.3200829999996131,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.16809600000033242,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.16584300000067742,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle negative capacity values","status":"passed","title":"should handle negative capacity values","duration":0.12929799999983516,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle fractional capacity values","status":"passed","title":"should handle fractional capacity values","duration":0.14493300000049203,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should preserve array references","status":"passed","title":"should preserve array references","duration":0.4187339999998585,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle multi-purpose supporters","status":"passed","title":"should handle multi-purpose supporters","duration":0.4362310000005891,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle tiered supporters","status":"passed","title":"should handle tiered supporters","duration":1.6646949999994831,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle magical supporters","status":"passed","title":"should handle magical supporters","duration":1.1689030000006824,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle dynamic supporter states","status":"passed","title":"should handle dynamic supporter states","duration":1.467066999999588,"failureMessages":[],"meta":{}}],"startTime":1755574250695,"endTime":1755574250725.467,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/supporter.test.ts"},{"assertionResults":[{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1892189999998664,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.5257780000010825,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should handle power requirements correctly","status":"passed","title":"should handle power requirements correctly","duration":0.16163800000140327,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should set autoOffCounter when starting on with autoOffTime","status":"passed","title":"should set autoOffCounter when starting on with autoOffTime","duration":0.20965700000124343,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should not set autoOffCounter when starting off","status":"passed","title":"should not set autoOffCounter when starting off","duration":0.22324099999968894,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should allow changing on/off state","status":"passed","title":"should allow changing on/off state","duration":0.18178400000033434,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should track power availability","status":"passed","title":"should track power availability","duration":0.15344700000059674,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should handle auto-off counter","status":"passed","title":"should handle auto-off counter","duration":0.15828200000032666,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5719409999983327,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.3367529999995895,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should handle device with power requirements","status":"passed","title":"should handle device with power requirements","duration":0.23709599999892816,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should store all switch-related messages","status":"passed","title":"should store all switch-related messages","duration":0.2081319999997504,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.5412280000000464,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","sound effects"],"fullName":"SwitchableTrait sound effects should support all sound types","status":"passed","title":"should support all sound types","duration":0.30619799999840325,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.20909200000096462,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.2638970000007248,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle device with no auto-off","status":"passed","title":"should handle device with no auto-off","duration":0.12749900000017078,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1103689999999915,"failureMessages":[],"meta":{}}],"startTime":1755574263102,"endTime":1755574263111.1104,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/switchable.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create a functional light switch","status":"passed","title":"should create a functional light switch","duration":2.315515999998752,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create an elevator call button","status":"passed","title":"should create an elevator call button","duration":0.2969669999984035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a safe combination dial","status":"passed","title":"should create a safe combination dial","duration":0.3337740000006306,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a water valve","status":"passed","title":"should create a water valve","duration":0.1898719999990135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a heavy boulder that can be pushed","status":"passed","title":"should create a heavy boulder that can be pushed","duration":0.2718250000016269,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a crate that can be pushed and pulled","status":"passed","title":"should create a crate that can be pushed and pulled","duration":0.20373900000049616,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","FRAGILE + BREAKABLE"],"fullName":"Trait Combinations FRAGILE + BREAKABLE should create a reinforced glass window","status":"passed","title":"should create a reinforced glass window","duration":0.21931299999960174,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create an emergency alarm system","status":"passed","title":"should create an emergency alarm system","duration":0.23748100000011618,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create a complex control panel","status":"passed","title":"should create a complex control panel","duration":0.4951279999986582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle entities with many traits","status":"passed","title":"should handle entities with many traits","duration":0.23697100000026694,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle trait updates","status":"passed","title":"should handle trait updates","duration":0.13470799999959127,"failureMessages":[],"meta":{}}],"startTime":1755574264379,"endTime":1755574264385.1348,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.3637870000002295,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.3920949999992445,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should handle all turn types","status":"passed","title":"should handle all turn types","duration":0.37284400000135065,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle string settings","status":"passed","title":"should handle string settings","duration":0.38350400000126683,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric settings","status":"passed","title":"should handle numeric settings","duration":0.4929940000001807,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should default current setting to first in array","status":"passed","title":"should default current setting to first in array","duration":0.5851279999988037,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric ranges","status":"passed","title":"should handle numeric ranges","duration":0.9404279999998835,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turns made","status":"passed","title":"should track turns made","duration":0.8466960000005201,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turn direction","status":"passed","title":"should track turn direction","duration":1.7877399999997579,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.6677270000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should work with multiple turnable objects","status":"passed","title":"should work with multiple turnable objects","duration":0.2767730000014126,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle dial configuration","status":"passed","title":"should handle dial configuration","duration":1.0263400000003458,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle wheel configuration","status":"passed","title":"should handle wheel configuration","duration":0.4349549999988085,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle crank configuration","status":"passed","title":"should handle crank configuration","duration":0.5317449999984092,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle valve configuration","status":"passed","title":"should handle valve configuration","duration":0.7352300000002288,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.2615929999992659,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle jammed state","status":"passed","title":"should handle jammed state","duration":0.14612099999976635,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle unidirectional turning","status":"passed","title":"should handle unidirectional turning","duration":0.0995809999985795,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.21302599999944505,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.13473899999917194,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.17774099999951432,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.16449400000055903,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.9332309999990684,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle complex configurations","status":"passed","title":"should handle complex configurations","duration":0.1983730000010837,"failureMessages":[],"meta":{}}],"startTime":1755574256554,"endTime":1755574256571.1985,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/turnable.test.ts"},{"assertionResults":[{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.112560999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2739959999998973,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.31240900000011607,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle empty blocksSlots array","status":"passed","title":"should handle empty blocksSlots array","duration":0.14452800000071875,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should support various body slots","status":"passed","title":"should support various body slots","duration":0.435432000000219,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should handle custom slot names","status":"passed","title":"should handle custom slot names","duration":0.1419659999992291,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should block multiple slots","status":"passed","title":"should block multiple slots","duration":0.732836999999563,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should support different layers","status":"passed","title":"should support different layers","duration":0.1712729999999283,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should handle wearableOver property","status":"passed","title":"should handle wearableOver property","duration":0.2237169999989419,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should track worn status","status":"passed","title":"should track worn status","duration":0.18756299999949988,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should handle different wearers","status":"passed","title":"should handle different wearers","duration":0.111057999998593,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should clear wornBy when not worn","status":"passed","title":"should clear wornBy when not worn","duration":0.08551499999884982,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should store custom wear and remove messages","status":"passed","title":"should store custom wear and remove messages","duration":0.07878899999923306,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow undefined messages","status":"passed","title":"should allow undefined messages","duration":0.06642199999987497,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow only wear message","status":"passed","title":"should allow only wear message","duration":0.0686519999999291,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.15880699999979697,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.07593199999973876,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.06822700000157056,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.30886800000007497,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should create various wearable items","status":"passed","title":"should create various wearable items","duration":0.14791800000057265,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should work with actor wearing items","status":"passed","title":"should work with actor wearing items","duration":0.16874300000017683,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle layered armor system","status":"passed","title":"should handle layered armor system","duration":0.1715089999997872,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle jewelry with multiple items per slot","status":"passed","title":"should handle jewelry with multiple items per slot","duration":0.08924300000035146,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle outfit sets","status":"passed","title":"should handle outfit sets","duration":0.09281000000009954,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.16276300000026822,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle undefined as parameter","status":"passed","title":"should handle undefined as parameter","duration":0.0904259999988426,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08043200000065553,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle boolean false values correctly","status":"passed","title":"should handle boolean false values correctly","duration":0.07642300000043178,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle zero and negative values","status":"passed","title":"should handle zero and negative values","duration":0.12477299999954994,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should preserve array reference for blocksSlots","status":"passed","title":"should preserve array reference for blocksSlots","duration":0.13254500000039116,"failureMessages":[],"meta":{}}],"startTime":1755574234626,"endTime":1755574234635.1326,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/wearable.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":1.8658269999996264,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should share entities with WorldModel","status":"passed","title":"should share entities with WorldModel","duration":0.23107899999922665,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should remove entities","status":"passed","title":"should remove entities","duration":0.24644499999885738,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":1.2528650000003836,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.6383750000004511,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":1.2034070000008796,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.9264989999992395,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":0.8025460000008025,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup containers with properties","status":"passed","title":"should setup containers with properties","duration":0.47122999999919557,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers with item specs","status":"passed","title":"should fill containers with item specs","duration":0.41748899999947753,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should place actors at locations","status":"passed","title":"should place actors at locations","duration":0.2160859999985405,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set state values","status":"passed","title":"should set state values","duration":0.16149099999893224,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player","status":"passed","title":"should set player","duration":0.10185100000126113,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear world data","status":"passed","title":"should clear world data","duration":0.1851459999998042,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.10435499999948661,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should add and remove traits","status":"passed","title":"should add and remove traits","duration":0.1828139999997802,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Scope and Visibility Integration"],"fullName":"AuthorModel Scope and Visibility Integration should include items in closed containers in scope","status":"passed","title":"should include items in closed containers in scope","duration":1.5579949999992095,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.399704000001293,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.13182700000106706,"failureMessages":[],"meta":{}}],"startTime":1755574243760,"endTime":1755574243772.1318,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the room the observer is in","status":"passed","title":"should include the room the observer is in","duration":2.7336379999997007,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in the same room","status":"passed","title":"should include items in the same room","duration":0.45394000000123924,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers in the room","status":"passed","title":"should include items in containers in the room","duration":0.4887910000015836,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","status":"skipped","title":"should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items carried by the observer","status":"passed","title":"should include items carried by the observer","duration":0.4242809999996098,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers carried by the observer","status":"passed","title":"should include items in containers carried by the observer","duration":0.6471009999986563,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the observer itself","status":"passed","title":"should include the observer itself","duration":0.25720800000090094,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle empty room","status":"passed","title":"should handle empty room","duration":1.1183249999994587,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should return empty array if observer not in a room","status":"passed","title":"should return empty array if observer not in a room","duration":2.4095909999996366,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle unique entities (no duplicates)","status":"passed","title":"should handle unique entities (no duplicates)","duration":0.570201000000452,"failureMessages":[],"meta":{}}],"startTime":1755574246845,"endTime":1755574246854.5703,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/get-in-scope.test.ts"},{"assertionResults":[{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add child to parent","status":"passed","title":"should add child to parent","duration":2.1018629999998666,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add multiple children to parent","status":"passed","title":"should add multiple children to parent","duration":1.3818479999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should remove child from parent","status":"passed","title":"should remove child from parent","duration":0.45572600000014063,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should move child to new parent","status":"passed","title":"should move child to new parent","duration":0.3823789999996734,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent parent","status":"passed","title":"should handle non-existent parent","duration":0.3628000000007887,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent child","status":"passed","title":"should handle non-existent child","duration":0.208585000000312,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove entity and its relationships","status":"passed","title":"should remove entity and its relationships","duration":0.3625369999999748,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove only specified child","status":"passed","title":"should remove only specified child","duration":0.22310800000013842,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should handle removing non-existent child","status":"passed","title":"should handle removing non-existent child","duration":0.3869880000002013,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should clean up empty parent sets","status":"passed","title":"should clean up empty parent sets","duration":0.1590409999998883,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return true for parent with children","status":"passed","title":"should return true for parent with children","duration":0.082590999999411,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false for parent without children","status":"passed","title":"should return false for parent without children","duration":0.0710559999997713,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false after removing all children","status":"passed","title":"should return false after removing all children","duration":0.09439300000030926,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should get all descendants","status":"passed","title":"should get all descendants","duration":0.5918790000005174,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should respect max depth","status":"passed","title":"should respect max depth","duration":1.7363869999999224,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle entity with no descendants","status":"passed","title":"should handle entity with no descendants","duration":0.6874580000003334,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle circular references","status":"passed","title":"should handle circular references","duration":0.41726699999981065,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should collect all descendants up to max depth","status":"passed","title":"should collect all descendants up to max depth","duration":1.623301999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get all ancestors","status":"passed","title":"should get all ancestors","duration":1.3978350000006685,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get ancestors up to depth","status":"passed","title":"should get ancestors up to depth","duration":0.3500260000000708,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle entity with no ancestors","status":"passed","title":"should handle entity with no ancestors","duration":0.530920000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle missing entity","status":"passed","title":"should handle missing entity","duration":0.8785170000001017,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","clear"],"fullName":"SpatialIndex clear should clear all relationships","status":"passed","title":"should clear all relationships","duration":0.6474290000005567,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":1.050185999999485,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.8067760000003545,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should handle empty JSON","status":"passed","title":"should handle empty JSON","duration":1.9841719999994893,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should clear before loading","status":"passed","title":"should clear before loading","duration":0.28777199999967706,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle adding same child multiple times","status":"passed","title":"should handle adding same child multiple times","duration":0.13373400000000402,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle removing child from wrong parent","status":"passed","title":"should handle removing child from wrong parent","duration":0.2898910000003525,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle self-parenting","status":"passed","title":"should handle self-parenting","duration":0.17062699999951292,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle very deep hierarchies","status":"passed","title":"should handle very deep hierarchies","duration":0.6469900000001871,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should maintain consistency when moving entities","status":"passed","title":"should maintain consistency when moving entities","duration":0.3238099999998667,"failureMessages":[],"meta":{}}],"startTime":1755574250136,"endTime":1755574250158.647,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/spatial-index.test.ts"},{"assertionResults":[{"ancestorTitles":["Verify moveEntity issue"],"fullName":"Verify moveEntity issue should not allow moving items into closed containers","status":"passed","title":"should not allow moving items into closed containers","duration":1.2200160000002143,"failureMessages":[],"meta":{}}],"startTime":1755574272090,"endTime":1755574272091.22,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/verify-move-issue.test.ts"},{"assertionResults":[{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should always see self","status":"passed","title":"should always see self","duration":1.7751119999993534,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in same room","status":"passed","title":"should see entities in same room","duration":0.3517570000003616,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in different room","status":"passed","title":"should not see entities in different room","duration":0.306204999998954,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see the room observer is in","status":"passed","title":"should see the room observer is in","duration":0.15771399999903224,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see invisible entities","status":"passed","title":"should not see invisible entities","duration":0.2729990000007092,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in transparent containers","status":"passed","title":"should see entities in transparent containers","duration":0.19356299999890325,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in open opaque containers","status":"passed","title":"should see entities in open opaque containers","duration":0.30213000000003376,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in closed opaque containers","status":"passed","title":"should not see entities in closed opaque containers","duration":0.2756650000010268,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should handle nested containers","status":"passed","title":"should handle nested containers","duration":0.3979720000006637,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should block sight through any closed container in path","status":"passed","title":"should block sight through any closed container in path","duration":0.17848500000036438,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not see anything in dark room without light","status":"passed","title":"should not see anything in dark room without light","duration":0.3975590000009106,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should only see lit light sources in dark room","status":"passed","title":"should only see lit light sources in dark room","duration":0.2567240000007587,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should see everything when carrying lit lamp","status":"passed","title":"should see everything when carrying lit lamp","duration":0.19652099999984785,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not benefit from light in closed container","status":"passed","title":"should not benefit from light in closed container","duration":0.6156000000009954,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should handle room lighting toggle","status":"passed","title":"should handle room lighting toggle","duration":0.30321099999855505,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should return all visible entities","status":"passed","title":"should return all visible entities","duration":2.9157539999996516,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should include carried items","status":"passed","title":"should include carried items","duration":0.7293430000008811,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle empty room","status":"passed","title":"should handle empty room","duration":0.7708419999999023,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle observer not in room","status":"passed","title":"should handle observer not in room","duration":0.9648569999990286,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for uncontained entities","status":"passed","title":"should return true for uncontained entities","duration":0.2923979999995936,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for invisible scenery","status":"passed","title":"should return false for invisible scenery","duration":0.10624499999903492,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in transparent container","status":"passed","title":"should return true for entity in transparent container","duration":0.07705600000008417,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in open opaque container","status":"passed","title":"should return true for entity in open opaque container","duration":0.1388520000000426,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for entity in closed opaque container","status":"passed","title":"should return false for entity in closed opaque container","duration":0.08794900000066264,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should handle opaque container without openable trait","status":"passed","title":"should handle opaque container without openable trait","duration":0.09969500000079279,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle deeply nested visibility","status":"passed","title":"should handle deeply nested visibility","duration":0.3443669999996928,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle supporter visibility","status":"passed","title":"should handle supporter visibility","duration":0.18187699999907636,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle visibility in nested containers","status":"passed","title":"should handle visibility in nested containers","duration":1.0709029999998165,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle circular containment gracefully","status":"passed","title":"should handle circular containment gracefully","duration":0.937060999998721,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.308193000000756,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle entities with no location","status":"passed","title":"should handle entities with no location","duration":0.28362399999969057,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle max depth in containment path","status":"passed","title":"should handle max depth in containment path","duration":0.3814800000000105,"failureMessages":[],"meta":{}}],"startTime":1755574235367,"endTime":1755574235384.3816,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/visibility-behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should create empty world model","status":"passed","title":"should create empty world model","duration":2.4677630000005593,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should accept configuration","status":"passed","title":"should accept configuration","duration":0.1950909999995929,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entity with auto-generated ID","status":"passed","title":"should create entity with auto-generated ID","duration":0.43876300000010815,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should generate correct type-prefixed IDs","status":"passed","title":"should generate correct type-prefixed IDs","duration":0.30229899999903864,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should allow multiple entities with same displayName","status":"passed","title":"should allow multiple entities with same displayName","duration":0.289413999998942,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entities with displayName","status":"passed","title":"should create entities with displayName","duration":0.17144700000062585,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get entity by id","status":"passed","title":"should get entity by id","duration":0.16448700000000827,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return undefined for missing entity","status":"passed","title":"should return undefined for missing entity","duration":0.1246770000016113,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should check entity existence","status":"passed","title":"should check entity existence","duration":0.23552899999958754,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should remove entity","status":"passed","title":"should remove entity","duration":0.1644560000004276,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return false when removing non-existent entity","status":"passed","title":"should return false when removing non-existent entity","duration":0.8624670000008337,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get all entities","status":"passed","title":"should get all entities","duration":1.0384290000001783,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should update entity","status":"passed","title":"should update entity","duration":0.17000699999880453,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle updating non-existent entity","status":"passed","title":"should handle updating non-existent entity","duration":0.06199000000015076,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should throw in strict mode when updating non-existent entity","status":"passed","title":"should throw in strict mode when updating non-existent entity","duration":0.4322359999987384,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should store displayName in entity attributes","status":"passed","title":"should store displayName in entity attributes","duration":0.14247599999907834,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should increment ID counters correctly","status":"passed","title":"should increment ID counters correctly","duration":0.07750800000030722,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle ID counter overflow","status":"passed","title":"should handle ID counter overflow","duration":1.0672100000010687,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get entity location","status":"passed","title":"should get entity location","duration":1.1129739999996673,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get container contents","status":"passed","title":"should get container contents","duration":0.48365800000101444,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should move entity","status":"passed","title":"should move entity","duration":0.17827300000135438,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should remove entity from world","status":"passed","title":"should remove entity from world","duration":0.1070659999986674,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should check if move is valid","status":"passed","title":"should check if move is valid","duration":0.10042000000066764,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent moving to non-container","status":"passed","title":"should prevent moving to non-container","duration":0.055291000000579515,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent containment loops","status":"passed","title":"should prevent containment loops","duration":0.14053700000113167,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get containing room","status":"passed","title":"should get containing room","duration":0.1323210000009567,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get all contents recursively","status":"passed","title":"should get all contents recursively","duration":0.37669500000083644,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should handle max depth limit","status":"passed","title":"should handle max depth limit","duration":0.21735400000034133,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should work with entity IDs","status":"passed","title":"should work with entity IDs","duration":0.2082750000008673,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state","status":"passed","title":"should get and set state","duration":0.18717699999979232,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state values","status":"passed","title":"should get and set state values","duration":0.10061700000005658,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should handle nested state values","status":"passed","title":"should handle nested state values","duration":0.06837500000074215,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by trait","status":"passed","title":"should find entities by trait","duration":0.3286840000000666,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by type","status":"passed","title":"should find entities by type","duration":0.20083300000078452,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities with predicate","status":"passed","title":"should find entities with predicate","duration":0.11364999999932479,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find all entities without filtering","status":"passed","title":"should find all entities without filtering","duration":0.24915599999985716,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should get entities in scope","status":"passed","title":"should get entities in scope","duration":0.6412799999998242,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should include carried items in scope","status":"passed","title":"should include carried items in scope","duration":0.1801049999994575,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should check visibility","status":"passed","title":"should check visibility","duration":0.19134099999973841,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should work with direct IDs for visibility","status":"passed","title":"should work with direct IDs for visibility","duration":0.09220900000036636,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should add relationship","status":"passed","title":"should add relationship","duration":0.15562499999941792,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should get related entities","status":"passed","title":"should get related entities","duration":0.23652100000072096,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should remove relationship","status":"passed","title":"should remove relationship","duration":0.1660539999993489,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle multiple relationship types","status":"passed","title":"should handle multiple relationship types","duration":0.12770700000146462,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle non-existent entities in non-strict mode","status":"passed","title":"should handle non-existent entities in non-strict mode","duration":0.10141000000112399,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should throw in strict mode for non-existent entities","status":"passed","title":"should throw in strict mode for non-existent entities","duration":0.6760709999998653,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should calculate total weight","status":"passed","title":"should calculate total weight","duration":0.27647799999976996,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should detect containment loops","status":"passed","title":"should detect containment loops","duration":0.11493499999960477,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should find path between rooms","status":"passed","title":"should find path between rooms","duration":0.323499999998603,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should get and set player","status":"passed","title":"should get and set player","duration":0.10423199999968347,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should throw when setting non-existent player","status":"passed","title":"should throw when setting non-existent player","duration":0.1244669999996404,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.32053499999892665,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.5857880000003206,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should handle loading old saves without ID system data","status":"passed","title":"should handle loading old saves without ID system data","duration":0.26334200000019337,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should clear world","status":"passed","title":"should clear world","duration":0.17364400000042224,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should register and apply event handler","status":"passed","title":"should register and apply event handler","duration":0.17186500000025262,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should validate events","status":"passed","title":"should validate events","duration":0.10527499999989232,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should throw when applying invalid event","status":"passed","title":"should throw when applying invalid event","duration":0.1339399999997113,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should preview event changes","status":"passed","title":"should preview event changes","duration":0.17171400000006543,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should track event history","status":"passed","title":"should track event history","duration":0.1260550000006333,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should get events since timestamp","status":"passed","title":"should get events since timestamp","duration":0.11490800000137824,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should clear event history","status":"passed","title":"should clear event history","duration":0.09920799999963492,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should unregister event handler","status":"passed","title":"should unregister event handler","duration":0.14017400000011548,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should handle unregistered events silently","status":"passed","title":"should handle unregistered events silently","duration":0.21023999999852094,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle empty world operations","status":"passed","title":"should handle empty world operations","duration":0.969307999999728,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle removing entity with contents","status":"passed","title":"should handle removing entity with contents","duration":0.15536799999972573,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle circular references in toJSON","status":"passed","title":"should handle circular references in toJSON","duration":0.24764200000026904,"failureMessages":[],"meta":{}}],"startTime":1755574235281,"endTime":1755574235302.2476,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/world-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should not see medicine when cabinet is closed","status":"passed","title":"should not see medicine when cabinet is closed","duration":2.8492910000004485,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should see medicine when cabinet is open","status":"passed","title":"should see medicine when cabinet is open","duration":0.49879300000065996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should handle multiple state changes","status":"passed","title":"should handle multiple state changes","duration":0.4631329999992886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify canSee works correctly","status":"passed","title":"should verify canSee works correctly","duration":0.37942500000008295,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify medicine is in scope regardless of cabinet state","status":"passed","title":"should verify medicine is in scope regardless of cabinet state","duration":0.7724140000000261,"failureMessages":[],"meta":{}}],"startTime":1755574257388,"endTime":1755574257393.7725,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/visibility/container-state-visibility.test.ts"}]}