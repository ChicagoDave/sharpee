{"numTotalTestSuites":468,"numPassedTestSuites":468,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":1137,"numPassedTests":1124,"numFailedTests":0,"numPendingTests":13,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1754491568489,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Debug Worn Visibility"],"fullName":"Debug Worn Visibility should debug worn item visibility","status":"passed","title":"should debug worn item visibility","duration":6.080877999998847,"failureMessages":[],"meta":{}}],"startTime":1754491627957,"endTime":1754491627963.0808,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/debug-worn-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Minimal Visibility Test"],"fullName":"Minimal Visibility Test should see items in the same room","status":"passed","title":"should see items in the same room","duration":3.79312199999913,"failureMessages":[],"meta":{}}],"startTime":1754491649275,"endTime":1754491649278.7932,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/minimal-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":3.1268789999994624,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should enforce maximum nesting depth","status":"passed","title":"should enforce maximum nesting depth","duration":0.5120419999984733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should prevent circular containment","status":"passed","title":"should prevent circular containment","duration":0.35486500000115484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should calculate total weight including contents","status":"passed","title":"should calculate total weight including contents","duration":0.29176400000142166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should handle container capacity limits","status":"passed","title":"should handle container capacity limits","duration":0.7934869999990042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle supporter and container combinations","status":"passed","title":"should handle supporter and container combinations","duration":1.8783330000005662,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle furniture with both surfaces and storage","status":"passed","title":"should handle furniture with both surfaces and storage","duration":1.0127800000009302,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should handle moving containers with contents","status":"passed","title":"should handle moving containers with contents","duration":0.6368499999989581,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should update visibility when opening/closing containers","status":"passed","title":"should update visibility when opening/closing containers","duration":1.0903469999975641,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find all containers of a specific type","status":"passed","title":"should find all containers of a specific type","duration":0.45987500000046566,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find containers matching complex criteria","status":"passed","title":"should find containers matching complex criteria","duration":0.35756100000071456,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should handle large numbers of containers efficiently","status":"passed","title":"should handle large numbers of containers efficiently","duration":6.312751000001299,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should efficiently check containment loops in complex hierarchies","status":"passed","title":"should efficiently check containment loops in complex hierarchies","duration":0.47795699999915087,"failureMessages":[],"meta":{}}],"startTime":1754491587809,"endTime":1754491587826.478,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/container-hierarchies.test.ts"},{"assertionResults":[{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should create doors connecting two rooms","status":"passed","title":"should create doors connecting two rooms","duration":2.1149229999991803,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should synchronize door state between rooms","status":"passed","title":"should synchronize door state between rooms","duration":0.6187650000010763,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should prevent opening locked doors","status":"passed","title":"should prevent opening locked doors","duration":0.5786889999999403,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should unlock doors with correct key","status":"passed","title":"should unlock doors with correct key","duration":0.35154400000101305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should handle multiple locked doors","status":"passed","title":"should handle multiple locked doors","duration":0.46543500000007043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle secret doors","status":"passed","title":"should handle secret doors","duration":0.9696339999991324,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle one-way doors","status":"passed","title":"should handle one-way doors","duration":0.3382849999998143,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle automatic closing doors","status":"passed","title":"should handle automatic closing doors","duration":0.3067240000000311,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should affect visibility through doors","status":"passed","title":"should affect visibility through doors","duration":0.8110409999990225,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should handle doors with windows","status":"passed","title":"should handle doors with windows","duration":2.8127800000002026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle rooms with multiple doors","status":"passed","title":"should handle rooms with multiple doors","duration":3.532169000000067,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle double doors","status":"passed","title":"should handle double doors","duration":0.3183290000015404,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should track door usage","status":"passed","title":"should track door usage","duration":0.15937599999961094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should handle door with special requirements","status":"passed","title":"should handle door with special requirements","duration":0.18954800000028627,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Performance with Many Doors"],"fullName":"Door Mechanics Integration Tests Performance with Many Doors should handle buildings with many doors efficiently","status":"passed","title":"should handle buildings with many doors efficiently","duration":0.5493120000010094,"failureMessages":[],"meta":{}}],"startTime":1754491615069,"endTime":1754491615084.5493,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/door-mechanics.test.ts"},{"assertionResults":[{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should allow items to be placed in rooms without ContainerTrait","status":"passed","title":"should allow items to be placed in rooms without ContainerTrait","duration":2.8848029999990104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should respect room capacity limits","status":"passed","title":"should respect room capacity limits","duration":0.2784219999994093,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should handle nested containers in rooms","status":"passed","title":"should handle nested containers in rooms","duration":0.7150179999989632,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should allow actors to carry items without ContainerTrait","status":"passed","title":"should allow actors to carry items without ContainerTrait","duration":0.8553229999997711,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should handle actor inventory limits","status":"passed","title":"should handle actor inventory limits","duration":0.3286200000002282,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should prevent actors from being placed inside other actors","status":"passed","title":"should prevent actors from being placed inside other actors","duration":0.5563999999994849,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Container type detection"],"fullName":"Room and Actor as Containers Container type detection should correctly identify all container-capable entities","status":"passed","title":"should correctly identify all container-capable entities","duration":0.2287479999995412,"failureMessages":[],"meta":{}}],"startTime":1754491651194,"endTime":1754491651200.5564,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-actor-containers.test.ts"},{"assertionResults":[{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should connect rooms with simple exits","status":"passed","title":"should connect rooms with simple exits","duration":1.765932000000248,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should find paths between connected rooms","status":"passed","title":"should find paths between connected rooms","duration":0.9543439999997645,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should navigate through open doors","status":"passed","title":"should navigate through open doors","duration":0.790194999999585,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle closed doors","status":"passed","title":"should handle closed doors","duration":0.27125799999885203,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle locked doors","status":"passed","title":"should handle locked doors","duration":0.4475779999993392,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should find alternative paths when doors are blocked","status":"passed","title":"should find alternative paths when doors are blocked","duration":0.5380719999993744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle buildings with multiple floors","status":"passed","title":"should handle buildings with multiple floors","duration":0.4602950000007695,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle one-way passages","status":"passed","title":"should handle one-way passages","duration":0.370719000000463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should track first visits to rooms","status":"passed","title":"should track first visits to rooms","duration":0.7166229999984353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should handle dark rooms and navigation","status":"passed","title":"should handle dark rooms and navigation","duration":0.6852450000005774,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle exit entities","status":"passed","title":"should handle exit entities","duration":0.3203250000005937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle entry points","status":"passed","title":"should handle entry points","duration":0.2508290000005218,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle large mazes efficiently","status":"passed","title":"should handle large mazes efficiently","duration":1.053922999999486,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle disconnected room groups","status":"passed","title":"should handle disconnected room groups","duration":0.20203800000126648,"failureMessages":[],"meta":{}}],"startTime":1754491616101,"endTime":1754491616110.2021,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-navigation.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not see contents of locked closed container","status":"passed","title":"should not see contents of locked closed container","duration":4.299929000000702,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not open locked container","status":"passed","title":"should not open locked container","duration":0.48118999999860534,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should see contents after unlocking and opening","status":"passed","title":"should see contents after unlocking and opening","duration":0.5843120000008639,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should handle nested locked containers","status":"passed","title":"should handle nested locked containers","duration":0.47282199999972363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should see items on supporter but not in closed container","status":"passed","title":"should see items on supporter but not in closed container","duration":1.115166000001409,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should handle complex containment hierarchy","status":"passed","title":"should handle complex containment hierarchy","duration":0.533900000000358,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should exclude invisible scenery","status":"passed","title":"should exclude invisible scenery","duration":0.5472689999987779,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should handle wearing items with containers","status":"passed","title":"should handle wearing items with containers","duration":0.6075790000013512,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should exclude worn items when specified","status":"passed","title":"should exclude worn items when specified","duration":0.8563589999994292,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should track complex worn item hierarchies","status":"passed","title":"should track complex worn item hierarchies","duration":1.4375510000008944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should navigate through doors between rooms","status":"passed","title":"should navigate through doors between rooms","duration":1.7533730000013747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should see in lit rooms but not dark rooms","status":"passed","title":"should see in lit rooms but not dark rooms","duration":0.4636100000006991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should handle door state synchronization","status":"passed","title":"should handle door state synchronization","duration":0.1878579999993235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should track edible items in containers","status":"passed","title":"should track edible items in containers","duration":0.6988519999995333,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should handle consuming items from container","status":"passed","title":"should handle consuming items from container","duration":0.26535100000000966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle readable items in locked containers on supporters","status":"passed","title":"should handle readable items in locked containers on supporters","duration":0.6378740000000107,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle switchable light sources affecting room visibility","status":"passed","title":"should handle switchable light sources affecting room visibility","duration":0.30596800000057556,"failureMessages":[],"meta":{}}],"startTime":1754491602186,"endTime":1754491602202.638,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should see through open containers","status":"passed","title":"should see through open containers","duration":4.0122450000017125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should not see into closed containers","status":"passed","title":"should not see into closed containers","duration":0.8040249999976368,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should handle mixed open/closed container chains","status":"passed","title":"should handle mixed open/closed container chains","duration":1.9171100000021397,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see items on supporters","status":"passed","title":"should see items on supporters","duration":1.030361000000994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see through containers on supporters","status":"passed","title":"should see through containers on supporters","duration":0.6918499999992491,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should not see in dark rooms","status":"passed","title":"should not see in dark rooms","duration":0.3239319999993313,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with carried light source","status":"passed","title":"should see with carried light source","duration":0.6764530000000377,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with light source in room","status":"passed","title":"should see with light source in room","duration":0.20465799999874434,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should handle light in containers","status":"passed","title":"should handle light in containers","duration":0.4961719999992056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see items carried by actors","status":"passed","title":"should see items carried by actors","duration":0.6068249999989348,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see worn items on actors","status":"passed","title":"should see worn items on actors","duration":0.48906999999962864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should not see items in closed containers carried by actors","status":"passed","title":"should not see items in closed containers carried by actors","duration":0.3682829999997921,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see visible scenery","status":"passed","title":"should see visible scenery","duration":0.341867999999522,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should not see invisible scenery","status":"passed","title":"should not see invisible scenery","duration":0.16161400000055437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see contents of visible scenery containers","status":"passed","title":"should see contents of visible scenery containers","duration":0.1708570000009786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle deep visibility chains","status":"passed","title":"should handle deep visibility chains","duration":0.38181299999996554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle multiple visibility blockers","status":"passed","title":"should handle multiple visibility blockers","duration":0.4897639999981038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle visibility with movement","status":"passed","title":"should handle visibility with movement","duration":0.2437659999995958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should get all items in scope","status":"passed","title":"should get all items in scope","duration":0.7133560000002035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should handle scope in dark rooms with light","status":"passed","title":"should handle scope in dark rooms with light","duration":0.34294799999770476,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should handle large visibility calculations efficiently","status":"passed","title":"should handle large visibility calculations efficiently","duration":1.6215100000008533,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should cache visibility calculations","status":"passed","title":"should cache visibility calculations","duration":1.3564799999985553,"failureMessages":[],"meta":{}}],"startTime":1754491588288,"endTime":1754491588306.3564,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/visibility-chains.test.ts"},{"assertionResults":[{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should wear and remove simple items","status":"passed","title":"should wear and remove simple items","duration":3.5638400000025285,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should prevent wearing already worn items","status":"passed","title":"should prevent wearing already worn items","duration":1.0230270000029122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should track multiple worn items","status":"passed","title":"should track multiple worn items","duration":0.7147000000040862,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should create functional clothing with pockets","status":"passed","title":"should create functional clothing with pockets","duration":2.92338899999595,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should maintain pocket contents when wearing clothing","status":"passed","title":"should maintain pocket contents when wearing clothing","duration":1.119474999999511,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","status":"skipped","title":"should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should support multiple layers of clothing","status":"passed","title":"should support multiple layers of clothing","duration":0.45225200000277255,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should handle mixed clothing and accessories","status":"passed","title":"should handle mixed clothing and accessories","duration":1.2873679999975138,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle nested containers in pockets","status":"passed","title":"should handle nested containers in pockets","duration":1.568713000000571,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle pocket access when clothing is in container","status":"passed","title":"should handle pocket access when clothing is in container","duration":1.280994999993709,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle clothing that blocks slots","status":"passed","title":"should handle clothing that blocks slots","duration":0.43813699999736855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.20145400000183145,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should track clothing condition","status":"passed","title":"should track clothing condition","duration":0.15769400000135647,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should handle actors with many worn items efficiently","status":"passed","title":"should handle actors with many worn items efficiently","duration":0.3169239999988349,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should efficiently filter worn vs carried items","status":"passed","title":"should efficiently filter worn vs carried items","duration":2.216504999996687,"failureMessages":[],"meta":{}}],"startTime":1754491601734,"endTime":1754491601752.2166,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/wearable-clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share entities between WorldModel and AuthorModel","status":"passed","title":"should share entities between WorldModel and AuthorModel","duration":1.7788470000014058,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share spatial relationships between models","status":"passed","title":"should share spatial relationships between models","duration":1.351991999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share state between models","status":"passed","title":"should share state between models","duration":0.3129079999998794,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":0.5209849999992002,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.2648559999979625,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should bypass container trait requirement","status":"passed","title":"should bypass container trait requirement","duration":0.1914039999974193,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should not check for loops","status":"passed","title":"should not check for loops","duration":0.11754600000131177,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.3837050000001909,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.46359300000040093,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should use author: prefix for events","status":"passed","title":"should use author: prefix for events","duration":0.21032800000102725,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.5692339999986871,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":0.6074049999988347,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers from specs","status":"passed","title":"should fill containers from specs","duration":0.2793149999997695,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup container properties","status":"passed","title":"should setup container properties","duration":1.111337000002095,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":0.34485700000004726,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should remove entities completely","status":"passed","title":"should remove entities completely","duration":0.49054400000022724,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.14087199999994482,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player without validation","status":"passed","title":"should set player without validation","duration":0.0980840000011085,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear all world data","status":"passed","title":"should clear all world data","duration":0.17699899999934132,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Real-World Usage Patterns"],"fullName":"AuthorModel Real-World Usage Patterns should handle complex world setup","status":"passed","title":"should handle complex world setup","duration":0.4336089999997057,"failureMessages":[],"meta":{}}],"startTime":1754491587600,"endTime":1754491587611.4336,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should store entity type in attributes","status":"passed","title":"should store entity type in attributes","duration":4.114293999999063,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should handle name property correctly","status":"passed","title":"should handle name property correctly","duration":0.5171399999999267,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should serialize with version number","status":"passed","title":"should serialize with version number","duration":0.6314060000004247,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should deserialize both old and new formats","status":"passed","title":"should deserialize both old and new formats","duration":0.6423670000003767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in room exits","status":"passed","title":"should use IDs in room exits","duration":2.4959020000005694,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in door connections","status":"passed","title":"should use IDs in door connections","duration":1.9258460000000923,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in exit traits","status":"passed","title":"should use IDs in exit traits","duration":0.34452299999975367,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","WorldModel persistence with entities"],"fullName":"Entity System with ID Refactor WorldModel persistence with entities should save and restore entities with proper IDs","status":"passed","title":"should save and restore entities with proper IDs","duration":1.8103760000012699,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Entity relationships with IDs"],"fullName":"Entity System with ID Refactor Entity relationships with IDs should use IDs for all entity relationships","status":"passed","title":"should use IDs for all entity relationships","duration":1.9866210000000137,"failureMessages":[],"meta":{}}],"startTime":1754491631668,"endTime":1754491631685.9866,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entity-system-updates.test.ts"},{"assertionResults":[{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should generate sequential IDs with type prefixes","status":"passed","title":"should generate sequential IDs with type prefixes","duration":2.1794100000006438,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should throw error for unknown types","status":"passed","title":"should throw error for unknown types","duration":0.8875439999992523,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should use object type as default","status":"passed","title":"should use object type as default","duration":0.24787099999957718,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should handle base36 conversion correctly","status":"passed","title":"should handle base36 conversion correctly","duration":0.3510600000008708,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should store entity name in attributes","status":"passed","title":"should store entity name in attributes","duration":0.35791799999969953,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should allow duplicate names","status":"passed","title":"should allow duplicate names","duration":0.2554049999998824,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should remove entities by ID","status":"passed","title":"should remove entities by ID","duration":0.28912100000161445,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","persistence"],"fullName":"ID Generation System persistence should save and restore ID system state","status":"passed","title":"should save and restore ID system state","duration":3.4338340000012977,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity attributes"],"fullName":"ID Generation System entity attributes should set displayName in entity attributes","status":"passed","title":"should set displayName in entity attributes","duration":0.4807959999998275,"failureMessages":[],"meta":{}}],"startTime":1754491638968,"endTime":1754491638977.4807,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/id-generation.test.ts"},{"assertionResults":[{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support language-agnostic token representation","status":"passed","title":"should support language-agnostic token representation","duration":2.1607139999996434,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support multiple parts of speech for a token","status":"passed","title":"should support multiple parts of speech for a token","duration":0.6516360000005079,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should handle unknown words","status":"passed","title":"should handle unknown words","duration":0.22897700000066834,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent simple verbs","status":"passed","title":"should represent simple verbs","duration":0.5667249999987689,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent phrasal verbs with particles","status":"passed","title":"should represent phrasal verbs with particles","duration":0.27771600000050967,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent multi-word verbs","status":"passed","title":"should represent multi-word verbs","duration":0.2590760000002774,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent simple nouns","status":"passed","title":"should represent simple nouns","duration":0.8928340000002208,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent nouns with articles","status":"passed","title":"should represent nouns with articles","duration":0.5697729999992589,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent complex noun phrases","status":"passed","title":"should represent complex noun phrases","duration":0.8493909999997413,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should support multiple candidates","status":"passed","title":"should support multiple candidates","duration":2.01694900000075,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should represent preposition phrases","status":"passed","title":"should represent preposition phrases","duration":0.19358000000102038,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should support multi-word prepositions","status":"passed","title":"should support multi-word prepositions","duration":0.1197199999987788,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a simple command","status":"passed","title":"should represent a simple command","duration":0.35893700000087847,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a transitive command","status":"passed","title":"should represent a transitive command","duration":0.16166599999996834,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a ditransitive command","status":"passed","title":"should represent a ditransitive command","duration":0.12044700000114972,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should support extras field for additional data","status":"passed","title":"should support extras field for additional data","duration":0.09890100000120583,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent unknown command errors","status":"passed","title":"should represent unknown command errors","duration":0.09039099999972677,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent syntax errors with position","status":"passed","title":"should represent syntax errors with position","duration":0.05208499999935157,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent ambiguous input errors","status":"passed","title":"should represent ambiguous input errors","duration":0.09918300000026647,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support legacy ParsedCommandV1 structure","status":"passed","title":"should support legacy ParsedCommandV1 structure","duration":0.12764700000116136,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support ParsedObjectReference","status":"passed","title":"should support ParsedObjectReference","duration":0.190972000000329,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should still have PartOfSpeech enum during migration","status":"passed","title":"should still have PartOfSpeech enum during migration","duration":0.1911339999987831,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should not have language-specific parts of speech","status":"passed","title":"should not have language-specific parts of speech","duration":0.5373440000003029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design ParsedCommand should not have language-specific fields at top level","status":"passed","title":"ParsedCommand should not have language-specific fields at top level","duration":0.9705749999993714,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Token structure should support language data extension","status":"passed","title":"Token structure should support language data extension","duration":0.203324000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Pattern names should be opaque strings","status":"passed","title":"Pattern names should be opaque strings","duration":0.31555999999909545,"failureMessages":[],"meta":{}}],"startTime":1754491600847,"endTime":1754491600860.3157,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/parsed-command.test.ts"},{"assertionResults":[{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see objects in dark room without light","status":"passed","title":"should not see objects in dark room without light","duration":3.3345179999996617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see objects when carrying lit light source","status":"passed","title":"should see objects when carrying lit light source","duration":0.8391670000000886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see when light source is off","status":"passed","title":"should not see when light source is off","duration":1.9286659999997937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when light source is turned on","status":"passed","title":"should see when light source is turned on","duration":1.9189790000000357,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when room has light source","status":"passed","title":"should see when room has light source","duration":0.8135810000003403,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should work normally in lit rooms","status":"passed","title":"should work normally in lit rooms","duration":0.4131740000011632,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","status":"skipped","title":"should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should handle underground darkness differently","status":"passed","title":"should handle underground darkness differently","duration":0.3062069999996311,"failureMessages":[],"meta":{}}],"startTime":1754491650708,"endTime":1754491650717.413,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/darkness-light.test.ts"},{"assertionResults":[{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","status":"skipped","title":"should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should reveal concealed objects with detect magic","status":"passed","title":"should reveal concealed objects with detect magic","duration":4.278263000000152,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","status":"skipped","title":"should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should have remote viewing through crystal orb","status":"passed","title":"should have remote viewing through crystal orb","duration":0.7143070000001899,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should limit magical sight by power level","status":"passed","title":"should limit magical sight by power level","duration":1.2028239999999641,"failureMessages":[],"meta":{}}],"startTime":1754491628622,"endTime":1754491628629.203,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/magic-sight.test.ts"},{"assertionResults":[{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear sounds from adjacent rooms","status":"passed","title":"should hear sounds from adjacent rooms","duration":3.6770269999997254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear loud sounds from further away","status":"passed","title":"should hear loud sounds from further away","duration":0.9406559999988531,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should not hear sounds through solid barriers","status":"passed","title":"should not hear sounds through solid barriers","duration":0.8664170000010927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should support directional sound","status":"passed","title":"should support directional sound","duration":0.7369330000001355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should combine multiple sound rules","status":"passed","title":"should combine multiple sound rules","duration":1.5657719999999244,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should filter sounds by action type","status":"passed","title":"should filter sounds by action type","duration":0.8992400000006455,"failureMessages":[],"meta":{}}],"startTime":1754491641916,"endTime":1754491641924.8992,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/sound-traveling.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden entities when window is closed","status":"passed","title":"should not see garden entities when window is closed","duration":3.3184690000016417,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":1.0539209999988088,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":0.8609440000000177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.6000950000016019,"failureMessages":[],"meta":{}}],"startTime":1754491649145,"endTime":1754491649150.6,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility-fixed.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":4.168050000000221,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.714854000001651,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should respect rule priorities when rules conflict","status":"passed","title":"should respect rule priorities when rules conflict","duration":1.1638550000006944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support scope rule removal","status":"passed","title":"should support scope rule removal","duration":1.1637160000009317,"failureMessages":[],"meta":{}}],"startTime":1754491649349,"endTime":1754491649357.1638,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should validate entity has required traits","status":"passed","title":"should validate entity has required traits","duration":1.381941999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should get list of missing traits","status":"passed","title":"should get list of missing traits","duration":0.8754189999999653,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should work with behaviors having no requirements","status":"passed","title":"should work with behaviors having no requirements","duration":0.1906939999989845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.7871649999997317,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should throw error when required trait is missing","status":"passed","title":"should throw error when required trait is missing","duration":0.29799800000000687,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.26319599999987986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return undefined when trait is missing","status":"passed","title":"should return undefined when trait is missing","duration":0.2530900000001566,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors that check state","status":"passed","title":"should support behaviors that check state","duration":0.1853979999996227,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors with no requirements","status":"passed","title":"should support behaviors with no requirements","duration":0.25339400000120804,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","inheritance"],"fullName":"Behavior inheritance should support behavior inheritance","status":"passed","title":"should support behavior inheritance","duration":0.383427999999185,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","error messages"],"fullName":"Behavior error messages should provide clear error messages for missing traits","status":"passed","title":"should provide clear error messages for missing traits","duration":0.20595399999911024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","static nature"],"fullName":"Behavior static nature should not require instantiation","status":"passed","title":"should not require instantiation","duration":0.23943899999903806,"failureMessages":[],"meta":{}}],"startTime":1754491626964,"endTime":1754491626970.2395,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/behaviors/behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should add and retrieve entities","status":"passed","title":"should add and retrieve entities","duration":3.774492000000464,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should return undefined for non-existent entities","status":"passed","title":"should return undefined for non-existent entities","duration":0.2059289999997418,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should remove entities and clear traits","status":"passed","title":"should remove entities and clear traits","duration":0.9152480000011565,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should clear all entities","status":"passed","title":"should clear all entities","duration":2.318098000001555,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get all entities","status":"passed","title":"should get all entities","duration":1.188071000000491,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get entities by type","status":"passed","title":"should get entities by type","duration":0.42303499999979977,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with specific trait","status":"passed","title":"should find entities with specific trait","duration":0.46510699999998906,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with all specified traits","status":"passed","title":"should find entities with all specified traits","duration":0.3318910000016331,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with any specified traits","status":"passed","title":"should find entities with any specified traits","duration":0.3763329999983398,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","iteration"],"fullName":"EntityStore iteration should be iterable","status":"passed","title":"should be iterable","duration":0.9239710000001651,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":1.0209329999997863,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.2981390000004467,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","size property"],"fullName":"EntityStore size property should reflect number of entities","status":"passed","title":"should reflect number of entities","duration":0.1342530000001716,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle removing non-existent entity","status":"passed","title":"should handle removing non-existent entity","duration":0.08848799999941548,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle duplicate adds gracefully","status":"passed","title":"should handle duplicate adds gracefully","duration":0.04886099999930593,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should work with empty store","status":"passed","title":"should work with empty store","duration":0.3301950000004581,"failureMessages":[],"meta":{}}],"startTime":1754491626913,"endTime":1754491626926.33,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/entity-store.test.ts"},{"assertionResults":[{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should create entity with id and type","status":"passed","title":"should create entity with id and type","duration":2.1410670000004757,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should accept creation params","status":"passed","title":"should accept creation params","duration":0.40789199999926495,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should add trait","status":"passed","title":"should add trait","duration":0.2736189999995986,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should remove trait","status":"passed","title":"should remove trait","duration":2.0806370000009338,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should replace existing trait of same type","status":"passed","title":"should replace existing trait of same type","duration":0.8070449999995617,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAll","status":"passed","title":"should check multiple traits with hasAll","duration":1.17106799999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAny","status":"passed","title":"should check multiple traits with hasAny","duration":0.38584499999888067,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all traits","status":"passed","title":"should get all traits","duration":1.0327159999997093,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all trait types","status":"passed","title":"should get all trait types","duration":0.48091199999907985,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should clear all traits","status":"passed","title":"should clear all traits","duration":0.25470599999971455,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should support trait aliases (getTrait, hasTrait)","status":"passed","title":"should support trait aliases (getTrait, hasTrait)","duration":0.20638599999983853,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify rooms","status":"passed","title":"should identify rooms","duration":0.20589699999982258,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify containers","status":"passed","title":"should identify containers","duration":0.15520100000139792,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify takeable items","status":"passed","title":"should identify takeable items","duration":0.14042200000039884,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get name from displayName attribute first","status":"passed","title":"should get name from displayName attribute first","duration":0.18415699999968638,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get weight from attributes","status":"passed","title":"should get weight from attributes","duration":0.0729670000000624,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","cloning"],"fullName":"IFEntity cloning should create deep copy with new ID","status":"passed","title":"should create deep copy with new ID","duration":0.5943869999991875,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.7842410000012023,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.5058629999984987,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect openable trait","status":"passed","title":"should detect openable trait","duration":0.24214000000029046,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect lockable trait","status":"passed","title":"should detect lockable trait","duration":0.21677099999942584,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","light source properties"],"fullName":"IFEntity light source properties should detect light provision","status":"passed","title":"should detect light provision","duration":0.14091299999927287,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","switchable properties"],"fullName":"IFEntity switchable properties should detect switchable state","status":"passed","title":"should detect switchable state","duration":0.12363600000026054,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","actor properties"],"fullName":"IFEntity actor properties should detect actors and players","status":"passed","title":"should detect actors and players","duration":0.15897700000095938,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","error handling"],"fullName":"IFEntity error handling should throw error for invalid traits","status":"passed","title":"should throw error for invalid traits","duration":0.7934770000010758,"failureMessages":[],"meta":{}}],"startTime":1754491612660,"endTime":1754491612674.7935,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/if-entity.test.ts"},{"assertionResults":[{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.8604359999990265,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.43902499999967404,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should merge pronouns when partially provided","status":"passed","title":"should merge pronouns when partially provided","duration":0.1466069999987667,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should handle partial inventory limits","status":"passed","title":"should handle partial inventory limits","duration":0.10212499999761349,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should set pronouns using setPronouns method","status":"passed","title":"should set pronouns using setPronouns method","duration":0.2464639999998326,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should partially update pronouns","status":"passed","title":"should partially update pronouns","duration":1.4129399999983434,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should set inventory limits using setInventoryLimit method","status":"passed","title":"should set inventory limits using setInventoryLimit method","duration":0.21752399999968475,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should partially update inventory limits","status":"passed","title":"should partially update inventory limits","duration":0.10652900000059162,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should create inventory limit if not exists","status":"passed","title":"should create inventory limit if not exists","duration":0.20527399999991758,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should make actor a player using makePlayer method","status":"passed","title":"should make actor a player using makePlayer method","duration":0.2031459999998333,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should ensure player is always playable","status":"passed","title":"should ensure player is always playable","duration":0.07548700000188546,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should set custom properties using setCustomProperty","status":"passed","title":"should set custom properties using setCustomProperty","duration":0.09456399999908172,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should get custom properties using getCustomProperty","status":"passed","title":"should get custom properties using getCustomProperty","duration":0.09250099999917438,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should create customProperties object if not exists","status":"passed","title":"should create customProperties object if not exists","duration":0.05567399999927147,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should overwrite existing custom properties","status":"passed","title":"should overwrite existing custom properties","duration":0.057669999998324784,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should handle various data types in custom properties","status":"passed","title":"should handle various data types in custom properties","duration":0.13918899999771384,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should handle state changes","status":"passed","title":"should handle state changes","duration":0.09014599999864004,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should maintain state through other property changes","status":"passed","title":"should maintain state through other property changes","duration":0.11338400000022375,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.2816560000028403,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should work with container trait for inventory","status":"passed","title":"should work with container trait for inventory","duration":0.13152400000035414,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create NPCs with custom properties","status":"passed","title":"should create NPCs with custom properties","duration":0.12371899999925517,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create player with inventory limits","status":"passed","title":"should create player with inventory limits","duration":0.12512000000060652,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.19222400000217021,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.6301459999995132,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.17140400000062073,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle pronoun edge cases","status":"passed","title":"should handle pronoun edge cases","duration":0.14658199999757926,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should preserve existing data during construction","status":"passed","title":"should preserve existing data during construction","duration":0.10005400000227382,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should handle multiple actors in a world","status":"passed","title":"should handle multiple actors in a world","duration":0.1568360000019311,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should support actor transformation","status":"passed","title":"should support actor transformation","duration":0.13594999999986612,"failureMessages":[],"meta":{}}],"startTime":1754491586629,"endTime":1754491586637.1714,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/actor.test.ts"},{"assertionResults":[{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.5359219999991183,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6800430000002962,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should handle all attachment types","status":"passed","title":"should handle all attachment types","duration":0.4255539999994653,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track what object is attached to","status":"passed","title":"should track what object is attached to","duration":0.304561000000831,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle detachable attachments","status":"passed","title":"should handle detachable attachments","duration":0.4152410000006057,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle permanent attachments","status":"passed","title":"should handle permanent attachments","duration":0.3892710000000079,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track loose state","status":"passed","title":"should track loose state","duration":0.17336799999975483,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":1.7080729999997857,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should handle various attached objects","status":"passed","title":"should handle various attached objects","duration":0.5351219999993191,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle object breaking on detach","status":"passed","title":"should handle object breaking on detach","duration":0.31720099999984086,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle attachment point breaking","status":"passed","title":"should handle attachment point breaking","duration":0.2364930000003369,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle clean detachment","status":"passed","title":"should handle clean detachment","duration":0.10887999999977183,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should store detach sound","status":"passed","title":"should store detach sound","duration":0.0801900000005844,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should have appropriate sounds for attachment types","status":"passed","title":"should have appropriate sounds for attachment types","duration":0.20913199999995413,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.11501700000007986,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.20268600000053993,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.11352700000134064,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle very strong attachment","status":"passed","title":"should handle very strong attachment","duration":0.08848300000136078,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle attachment without target","status":"passed","title":"should handle attachment without target","duration":0.06408100000044215,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle partial detach effects","status":"passed","title":"should handle partial detach effects","duration":0.1261320000012347,"failureMessages":[],"meta":{}}],"startTime":1754491644856,"endTime":1754491644868.1262,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/attached.test.ts"},{"assertionResults":[{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.402405999997427,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4056459999992512,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should handle all ring patterns","status":"passed","title":"should handle all ring patterns","duration":0.16100600000208942,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should track bell association","status":"passed","title":"should track bell association","duration":0.1029019999987213,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle broken state","status":"passed","title":"should handle broken state","duration":2.3477449999991222,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should define audible distance","status":"passed","title":"should define audible distance","duration":0.23063799999727053,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle ring count variations","status":"passed","title":"should handle ring count variations","duration":0.13564600000245264,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should work with pullable and cord traits","status":"passed","title":"should work with pullable and cord traits","duration":0.5085739999994985,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should handle multiple bell pulls","status":"passed","title":"should handle multiple bell pulls","duration":0.3346380000002682,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should support different bell sounds","status":"passed","title":"should support different bell sounds","duration":0.210242000001017,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should handle custom ring patterns","status":"passed","title":"should handle custom ring patterns","duration":0.15834100000211038,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should handle broken state","status":"passed","title":"should handle broken state","duration":0.08731299999999464,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should track previously working bell","status":"passed","title":"should track previously working bell","duration":0.09478699999817763,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.09285499999896274,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08453100000042468,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1289150000011432,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle silent bell (audibleDistance 0)","status":"passed","title":"should handle silent bell (audibleDistance 0)","duration":0.08139999999912106,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle very loud bell","status":"passed","title":"should handle very loud bell","duration":0.05960399999821675,"failureMessages":[],"meta":{}}],"startTime":1754491586610,"endTime":1754491586618.129,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/bell-pull.test.ts"},{"assertionResults":[{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.5700610000003508,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7613230000006297,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should handle all break methods","status":"passed","title":"should handle all break methods","duration":0.17600599999968836,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track hits taken","status":"passed","title":"should track hits taken","duration":0.2683070000002772,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track partial breaking","status":"passed","title":"should track partial breaking","duration":0.17741500000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle tool requirements","status":"passed","title":"should handle tool requirements","duration":0.12374400000044261,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.14391599999908067,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.2811910000000353,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should work with multiple breakable objects","status":"passed","title":"should work with multiple breakable objects","duration":0.3031879999998637,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle breaking into pieces","status":"passed","title":"should handle breaking into pieces","duration":0.9110509999991336,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle revealing contents","status":"passed","title":"should handle revealing contents","duration":0.10685600000033446,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle no break products","status":"passed","title":"should handle no break products","duration":0.07506299999840849,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.1407500000004802,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.06796100000065053,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10358299999825249,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.17336599999907776,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08558799999991606,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a breakable wooden door","status":"passed","title":"should create a breakable wooden door","duration":0.1355440000006638,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a cuttable rope","status":"passed","title":"should create a cuttable rope","duration":0.11319600000024366,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a meltable ice barrier","status":"passed","title":"should create a meltable ice barrier","duration":0.11999999999898137,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a container that reveals contents","status":"passed","title":"should create a container that reveals contents","duration":0.08853699999963283,"failureMessages":[],"meta":{}}],"startTime":1754491639024,"endTime":1754491639032.12,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/breakable.test.ts"},{"assertionResults":[{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.6579910000000382,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3417379999991681,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button sizes","status":"passed","title":"should handle all button sizes","duration":0.14992500000153086,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button shapes","status":"passed","title":"should handle all button shapes","duration":0.1582139999991341,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4535380000015721,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.28284700000222074,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle momentary button","status":"passed","title":"should handle momentary button","duration":0.1282439999995404,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle latching button","status":"passed","title":"should handle latching button","duration":0.0893419999993057,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should store button appearance","status":"passed","title":"should store button appearance","duration":0.4197260000000824,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle labeled buttons","status":"passed","title":"should handle labeled buttons","duration":0.2075849999964703,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle various button materials","status":"passed","title":"should handle various button materials","duration":0.1439620000019204,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should track pressed state","status":"passed","title":"should track pressed state","duration":0.12986799999998766,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should initialize with pressed state","status":"passed","title":"should initialize with pressed state","duration":0.12966600000072503,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10826299999826006,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09341600000334438,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07798499999989872,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle complex button configurations","status":"passed","title":"should handle complex button configurations","duration":0.13532199999826844,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create emergency stop button","status":"passed","title":"should create emergency stop button","duration":0.20895199999722536,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create elevator call button","status":"passed","title":"should create elevator call button","duration":0.152168000000529,"failureMessages":[],"meta":{}}],"startTime":1754491623479,"endTime":1754491623485.209,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/button.test.ts"},{"assertionResults":[{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.6899960000009742,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4648429999979271,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should have all wearable properties","status":"passed","title":"should have all wearable properties","duration":1.007292000002053,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support various materials","status":"passed","title":"should support various materials","duration":0.3537149999974645,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support composite materials","status":"passed","title":"should support composite materials","duration":0.36046600000190665,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should track condition states","status":"passed","title":"should track condition states","duration":0.9355810000015481,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle condition degradation","status":"passed","title":"should handle condition degradation","duration":0.12807599999723607,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle non-damageable items","status":"passed","title":"should handle non-damageable items","duration":0.1007339999996475,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support various styles","status":"passed","title":"should support various styles","duration":0.4185910000014701,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support custom style descriptions","status":"passed","title":"should support custom style descriptions","duration":0.24558500000057393,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should create clothing that can contain pockets","status":"passed","title":"should create clothing that can contain pockets","duration":0.6151549999995041,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should attach pockets to clothing","status":"passed","title":"should attach pockets to clothing","duration":2.539262999998755,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should maintain pocket contents when clothing is worn","status":"passed","title":"should maintain pocket contents when clothing is worn","duration":0.763292999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support standard clothing slots","status":"passed","title":"should support standard clothing slots","duration":0.3728950000004261,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support layered clothing","status":"passed","title":"should support layered clothing","duration":0.1528489999982412,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle clothing that blocks other slots","status":"passed","title":"should handle clothing that blocks other slots","duration":0.3073210000002291,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.0969279999990249,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle custom wear/remove messages","status":"passed","title":"should handle custom wear/remove messages","duration":0.08089000000109081,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should create various clothing items","status":"passed","title":"should create various clothing items","duration":1.0278850000031525,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should distinguish between clothing and simple wearables","status":"passed","title":"should distinguish between clothing and simple wearables","duration":0.2697149999985413,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle multi-pocket utility clothing","status":"passed","title":"should handle multi-pocket utility clothing","duration":1.462162999996508,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle outfit sets with matching properties","status":"passed","title":"should handle outfit sets with matching properties","duration":0.8541150000019115,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle damaged clothing states","status":"passed","title":"should handle damaged clothing states","duration":0.7674499999993714,"failureMessages":[],"meta":{}}],"startTime":1754491614604,"endTime":1754491614620.7673,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should have container properties","status":"passed","title":"should have container properties","duration":2.2498480000012933,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.26055300000007264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.2116840000016964,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should have container properties","status":"passed","title":"should have container properties","duration":0.4765170000009675,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.1471959999998944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.12845799999922747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should update capacity through setInventoryLimit","status":"passed","title":"should update capacity through setInventoryLimit","duration":0.2909989999989193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from room","status":"passed","title":"should get container trait from room","duration":0.19127500000104192,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from actor","status":"passed","title":"should get container trait from actor","duration":0.18665899999905378,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get explicit container trait first","status":"passed","title":"should get explicit container trait first","duration":0.17386200000146346,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should return undefined for non-container entities","status":"passed","title":"should return undefined for non-container entities","duration":0.12534999999843421,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow moving items into rooms without explicit ContainerTrait","status":"passed","title":"should allow moving items into rooms without explicit ContainerTrait","duration":0.16031499999917287,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow actors to carry items without explicit ContainerTrait","status":"passed","title":"should allow actors to carry items without explicit ContainerTrait","duration":0.11453699999947276,"failureMessages":[],"meta":{}}],"startTime":1754491637841,"endTime":1754491637848.1604,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container-capability.test.ts"},{"assertionResults":[{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9091860000007728,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9760969999988447,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle weight limit","status":"passed","title":"should handle weight limit","duration":0.4783800000004703,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle volume limit","status":"passed","title":"should handle volume limit","duration":0.2587700000003679,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle item count limit","status":"passed","title":"should handle item count limit","duration":0.5312529999991966,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle multiple constraints","status":"passed","title":"should handle multiple constraints","duration":0.4257790000010573,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.22322100000019418,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should default to opaque","status":"passed","title":"should default to opaque","duration":0.1491779999996652,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should handle transparent containers","status":"passed","title":"should handle transparent containers","duration":0.9094059999988531,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should default to not enterable","status":"passed","title":"should default to not enterable","duration":0.28052800000114075,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should handle enterable containers","status":"passed","title":"should handle enterable containers","duration":0.23221399999965797,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.2621760000001814,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.32920999999987544,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.27843399999983376,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle no type restrictions","status":"passed","title":"should handle no type restrictions","duration":0.2056749999992462,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":1.468801999999414,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should replace existing container trait","status":"passed","title":"should replace existing container trait","duration":0.2592530000001716,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle transparent container setup","status":"passed","title":"should handle transparent container setup","duration":0.8937879999994038,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle secure container setup","status":"passed","title":"should handle secure container setup","duration":0.3335629999983212,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle nested container setup","status":"passed","title":"should handle nested container setup","duration":0.219173999999839,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty capacity object","status":"passed","title":"should handle empty capacity object","duration":0.8336640000015905,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty arrays for type restrictions","status":"passed","title":"should handle empty arrays for type restrictions","duration":0.9329120000002149,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle zero capacity values","status":"passed","title":"should handle zero capacity values","duration":0.2964269999993121,"failureMessages":[],"meta":{}}],"startTime":1754491638988,"endTime":1754491639002.2964,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container.test.ts"},{"assertionResults":[{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.1435419999997976,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2961000000013883,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should handle all cord types","status":"passed","title":"should handle all cord types","duration":0.41814399999930174,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should track tension state","status":"passed","title":"should track tension state","duration":0.7755849999994098,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle length properties","status":"passed","title":"should handle length properties","duration":0.7426740000009886,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle breakable cords","status":"passed","title":"should handle breakable cords","duration":0.22187099999973725,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle unbreakable cords","status":"passed","title":"should handle unbreakable cords","duration":0.11859300000105577,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.44212700000025507,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should handle different cord materials","status":"passed","title":"should handle different cord materials","duration":0.629743999999846,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should store activation target","status":"passed","title":"should store activation target","duration":0.1687130000009347,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should handle cords without activation","status":"passed","title":"should handle cords without activation","duration":0.07822699999996985,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should store pull and break sounds","status":"passed","title":"should store pull and break sounds","duration":0.09790900000007241,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should handle cords without sounds","status":"passed","title":"should handle cords without sounds","duration":0.0805049999999028,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should have different sounds for different materials","status":"passed","title":"should have different sounds for different materials","duration":0.07223399999929825,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.06878100000176346,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.16740399999980582,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10686700000042038,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle cord at max extension","status":"passed","title":"should handle cord at max extension","duration":0.13083299999925657,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle very weak cord","status":"passed","title":"should handle very weak cord","duration":0.08235200000126497,"failureMessages":[],"meta":{}}],"startTime":1754491627906,"endTime":1754491627918.1309,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/cord.test.ts"},{"assertionResults":[{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.537612000000081,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7527289999998175,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should handle all display types","status":"passed","title":"should handle all display types","duration":0.17385300000023562,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5598050000007788,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should work with TurnableTrait","status":"passed","title":"should work with TurnableTrait","duration":0.5275880000008328,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle numbered dial with tick marks","status":"passed","title":"should handle numbered dial with tick marks","duration":0.2435829999994894,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle labeled dial","status":"passed","title":"should handle labeled dial","duration":2.1185890000015206,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle continuous vs discrete dial","status":"passed","title":"should handle continuous vs discrete dial","duration":0.14335600000049453,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle dial with units","status":"passed","title":"should handle dial with units","duration":0.2675889999991341,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.18424600000071223,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08765999999741325,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10371600000144099,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a radio tuner dial","status":"passed","title":"should create a radio tuner dial","duration":0.13827800000217394,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a washing machine dial","status":"passed","title":"should create a washing machine dial","duration":0.1782920000005106,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a combination lock dial","status":"passed","title":"should create a combination lock dial","duration":0.13873899999816786,"failureMessages":[],"meta":{}}],"startTime":1754491586612,"endTime":1754491586620.1782,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/dial.test.ts"},{"assertionResults":[{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should create trait with required room connections","status":"passed","title":"should create trait with required room connections","duration":1.7058610000003682,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should throw error without room connections","status":"passed","title":"should throw error without room connections","duration":1.1126750000003085,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should handle unidirectional doors","status":"passed","title":"should handle unidirectional doors","duration":0.19981300000108604,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should maintain bidirectional as default","status":"passed","title":"should maintain bidirectional as default","duration":0.11677500000041618,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4998489999998128,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.5749830000004295,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create door with openable trait","status":"passed","title":"should create door with openable trait","duration":0.20563399999991816,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create lockable door","status":"passed","title":"should create lockable door","duration":0.21567200000026787,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should connect two specific rooms","status":"passed","title":"should connect two specific rooms","duration":0.3231630000009318,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should handle room order consistently","status":"passed","title":"should handle room order consistently","duration":0.20330099999955564,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create complete room-door-room setup","status":"passed","title":"should create complete room-door-room setup","duration":0.9593760000007023,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create locked door between rooms","status":"passed","title":"should create locked door between rooms","duration":0.27799600000071223,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should handle self-connecting door","status":"passed","title":"should handle self-connecting door","duration":0.13285499999983585,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should preserve all properties during assignment","status":"passed","title":"should preserve all properties during assignment","duration":0.11170300000048883,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.13557000000037078,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support standard room door","status":"passed","title":"should support standard room door","duration":0.14125799999965238,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support locked exterior door","status":"passed","title":"should support locked exterior door","duration":0.20205299999906856,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support archway (always open)","status":"passed","title":"should support archway (always open)","duration":0.1010310000001482,"failureMessages":[],"meta":{}}],"startTime":1754491639372,"endTime":1754491639379.2021,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/door.test.ts"},{"assertionResults":[{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9663240000008955,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.5786480000006122,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.23056499999984226,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should allow zero nutrition value","status":"passed","title":"should allow zero nutrition value","duration":0.11418899999989662,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle solid food","status":"passed","title":"should handle solid food","duration":0.5278479999997217,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle liquids","status":"passed","title":"should handle liquids","duration":0.34103700000014214,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should support various food types","status":"passed","title":"should support various food types","duration":0.30735400000048685,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle single serving items","status":"passed","title":"should handle single serving items","duration":0.22508000000016182,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle multi-serving items","status":"passed","title":"should handle multi-serving items","duration":0.3031020000016724,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should allow fractional servings","status":"passed","title":"should allow fractional servings","duration":0.1530239999992773,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should track serving consumption","status":"passed","title":"should track serving consumption","duration":0.18113099999936821,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should specify remains type","status":"passed","title":"should specify remains type","duration":0.10466199999973469,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should handle items with no remains","status":"passed","title":"should handle items with no remains","duration":0.14988400000038382,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should support various remain types","status":"passed","title":"should support various remain types","duration":0.16972100000020873,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with no effects","status":"passed","title":"should handle items with no effects","duration":0.14807100000143691,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with effects","status":"passed","title":"should handle items with effects","duration":0.15097599999899103,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should support various effect types","status":"passed","title":"should support various effect types","duration":0.11567000000104599,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should allow effect without description","status":"passed","title":"should allow effect without description","duration":0.12005299999873387,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should support custom consume messages","status":"passed","title":"should support custom consume messages","duration":0.1947120000004361,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should handle no consume message","status":"passed","title":"should handle no consume message","duration":0.11563700000078825,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should have appropriate messages for food vs liquid","status":"passed","title":"should have appropriate messages for food vs liquid","duration":3.393124000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.3818150000006426,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.17537499999889405,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.43065699999897333,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should create various edible entities","status":"passed","title":"should create various edible entities","duration":0.19866299999921466,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should work with containers for liquids","status":"passed","title":"should work with containers for liquids","duration":0.2632579999990412,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1770409999990079,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08760200000142504,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07233699999960663,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.10930700000062643,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle very large values","status":"passed","title":"should handle very large values","duration":0.09884400000009919,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle magical food with multiple effects","status":"passed","title":"should handle magical food with multiple effects","duration":0.17328599999927974,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle rations with multiple servings","status":"passed","title":"should handle rations with multiple servings","duration":0.12876700000015262,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle transformation items","status":"passed","title":"should handle transformation items","duration":0.08942199999910372,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle poisoned or cursed food","status":"passed","title":"should handle poisoned or cursed food","duration":0.08322100000077626,"failureMessages":[],"meta":{}}],"startTime":1754491629658,"endTime":1754491629672.1287,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/edible.test.ts"},{"assertionResults":[{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1633829999991576,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.799881999999343,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"in\" preposition for containers","status":"passed","title":"should handle \"in\" preposition for containers","duration":0.3309659999995347,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"on\" preposition for surfaces","status":"passed","title":"should handle \"on\" preposition for surfaces","duration":0.21513400000003458,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"under\" preposition","status":"passed","title":"should handle \"under\" preposition","duration":0.1968460000007326,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"behind\" preposition","status":"passed","title":"should handle \"behind\" preposition","duration":0.1315840000006574,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track single occupant","status":"passed","title":"should track single occupant","duration":0.8439309999994293,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track multiple occupants","status":"passed","title":"should track multiple occupants","duration":0.22480600000017148,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should handle unlimited occupancy","status":"passed","title":"should handle unlimited occupancy","duration":0.34026799999992363,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track occupancy state","status":"passed","title":"should track occupancy state","duration":0.435961999999563,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle visible occupants","status":"passed","title":"should handle visible occupants","duration":0.19112200000017765,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle hidden occupants","status":"passed","title":"should handle hidden occupants","duration":0.17759400000068126,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.14054600000054052,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle soundproofing","status":"passed","title":"should handle soundproofing","duration":0.08218499999929918,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle standing entries","status":"passed","title":"should handle standing entries","duration":0.06803299999955925,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle sitting entries","status":"passed","title":"should handle sitting entries","duration":0.06446099999993748,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle lying entries","status":"passed","title":"should handle lying entries","duration":0.05839399999968009,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle no posture requirement","status":"passed","title":"should handle no posture requirement","duration":0.3947779999998602,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle enter message","status":"passed","title":"should handle enter message","duration":0.15401099999871803,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle exit message","status":"passed","title":"should handle exit message","duration":0.0728739999995014,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle full message","status":"passed","title":"should handle full message","duration":0.056652999999641906,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle blocked message","status":"passed","title":"should handle blocked message","duration":0.06613100000140548,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle stationary entries","status":"passed","title":"should handle stationary entries","duration":0.6165940000009869,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle mobile entries","status":"passed","title":"should handle mobile entries","duration":0.11809299999913492,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle rideable animals","status":"passed","title":"should handle rideable animals","duration":0.11484399999972084,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle open access","status":"passed","title":"should handle open access","duration":0.0778520000003482,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle blocked access","status":"passed","title":"should handle blocked access","duration":0.08216300000094634,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle conditional access","status":"passed","title":"should handle conditional access","duration":0.15059199999996054,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.16794099999970058,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should replace existing entry trait","status":"passed","title":"should replace existing entry trait","duration":0.12611500000093656,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle nested entries","status":"passed","title":"should handle nested entries","duration":0.25850400000126683,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle multi-purpose entries","status":"passed","title":"should handle multi-purpose entries","duration":0.12083999999958905,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle vehicle with compartments","status":"passed","title":"should handle vehicle with compartments","duration":0.2775469999996858,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle theatrical entries","status":"passed","title":"should handle theatrical entries","duration":0.1500319999995554,"failureMessages":[],"meta":{}}],"startTime":1754491598152,"endTime":1754491598164.2776,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/entry.test.ts"},{"assertionResults":[{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with required values","status":"passed","title":"should create trait with required values","duration":2.5927100000008068,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should throw error if required fields are missing","status":"passed","title":"should throw error if required fields are missing","duration":1.277592000000368,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with all optional values","status":"passed","title":"should create trait with all optional values","duration":1.1010729999998148,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle north direction","status":"passed","title":"should handle north direction","duration":0.1673030000001745,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle south direction","status":"passed","title":"should handle south direction","duration":0.14213699999891105,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle east direction","status":"passed","title":"should handle east direction","duration":0.08330300000125135,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle west direction","status":"passed","title":"should handle west direction","duration":0.06617399999959162,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle up direction","status":"passed","title":"should handle up direction","duration":0.07261100000141596,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle down direction","status":"passed","title":"should handle down direction","duration":0.1449479999992036,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle in direction","status":"passed","title":"should handle in direction","duration":0.09562799999912386,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle out direction","status":"passed","title":"should handle out direction","duration":0.06409700000040175,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle diagonal directions","status":"passed","title":"should handle diagonal directions","duration":0.15660199999911129,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle magic words","status":"passed","title":"should handle magic words","duration":0.5821340000002238,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle action-based exits","status":"passed","title":"should handle action-based exits","duration":0.12362099999882048,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle object-interaction exits","status":"passed","title":"should handle object-interaction exits","duration":0.12956900000062888,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle simple bidirectional exit","status":"passed","title":"should handle simple bidirectional exit","duration":0.12206499999956577,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle bidirectional portal","status":"passed","title":"should handle bidirectional portal","duration":0.1481370000001334,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle hidden exits","status":"passed","title":"should handle hidden exits","duration":0.097845000000234,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle visible but unlisted exits","status":"passed","title":"should handle visible but unlisted exits","duration":0.07871299999897019,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle discovered exits","status":"passed","title":"should handle discovered exits","duration":0.07531500000004598,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle simple condition","status":"passed","title":"should handle simple condition","duration":0.1166849999990518,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle complex condition","status":"passed","title":"should handle complex condition","duration":0.07947799999965355,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle time-based condition","status":"passed","title":"should handle time-based condition","duration":0.07907900000100199,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom use messages","status":"passed","title":"should handle custom use messages","duration":0.12410199999976612,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom blocked messages","status":"passed","title":"should handle custom blocked messages","duration":0.07491100000152073,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should allow no custom messages","status":"passed","title":"should allow no custom messages","duration":0.07653100000061386,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.978780999999799,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should replace existing exit trait","status":"passed","title":"should replace existing exit trait","duration":0.20064900000033958,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle one-way exit","status":"passed","title":"should handle one-way exit","duration":0.08367999999973108,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle teleporter","status":"passed","title":"should handle teleporter","duration":0.12769100000150502,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle vehicle-based exit","status":"passed","title":"should handle vehicle-based exit","duration":0.15918500000043423,"failureMessages":[],"meta":{}}],"startTime":1754491612932,"endTime":1754491612942.2007,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/exit.test.ts"},{"assertionResults":[{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9042109999991226,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9575160000003962,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should handle all fragile materials","status":"passed","title":"should handle all fragile materials","duration":0.4159089999993739,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default glass to sharp fragments","status":"passed","title":"should default glass to sharp fragments","duration":0.18605899999965914,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default crystal to sharp fragments","status":"passed","title":"should default crystal to sharp fragments","duration":0.29460499999913736,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should not default other materials to sharp","status":"passed","title":"should not default other materials to sharp","duration":0.1601780000000872,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should allow override of sharp fragments","status":"passed","title":"should allow override of sharp fragments","duration":0.11202100000082282,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break threshold"],"fullName":"FragileTrait break threshold should handle different fragility levels","status":"passed","title":"should handle different fragility levels","duration":0.26031200000034005,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4702180000003864,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should work with multiple fragile objects","status":"passed","title":"should work with multiple fragile objects","duration":0.3138620000008814,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that break into fragments","status":"passed","title":"should handle objects that break into fragments","duration":1.0004160000007687,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that trigger events when broken","status":"passed","title":"should handle objects that trigger events when broken","duration":0.14409499999965192,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should track damaged state","status":"passed","title":"should track damaged state","duration":0.08666600000105973,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should track value loss when broken","status":"passed","title":"should track value loss when broken","duration":0.08349099999941245,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should handle no value specification","status":"passed","title":"should handle no value specification","duration":0.04640100000142411,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.3405899999997928,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11474699999962468,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.12843700000121316,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle custom break messages","status":"passed","title":"should handle custom break messages","duration":0.701933000000281,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile glass vase","status":"passed","title":"should create a fragile glass vase","duration":0.2744270000002871,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile ice sculpture","status":"passed","title":"should create a fragile ice sculpture","duration":0.13129200000003038,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a security-protected display case","status":"passed","title":"should create a security-protected display case","duration":0.08855300000141142,"failureMessages":[],"meta":{}}],"startTime":1754491601138,"endTime":1754491601148.1313,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/fragile.test.ts"},{"assertionResults":[{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.6941939999996976,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.342596999998932,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"a\" article","status":"passed","title":"should handle \"a\" article","duration":0.3188989999998739,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"an\" article","status":"passed","title":"should handle \"an\" article","duration":0.3015899999991234,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"the\" article","status":"passed","title":"should handle \"the\" article","duration":0.17346899999938614,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"some\" article for plural/mass nouns","status":"passed","title":"should handle \"some\" article for plural/mass nouns","duration":0.2779979999995703,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle empty article for proper names","status":"passed","title":"should handle empty article for proper names","duration":1.3177660000001197,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should start with empty aliases","status":"passed","title":"should start with empty aliases","duration":0.2387510000007751,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should store multiple aliases","status":"passed","title":"should store multiple aliases","duration":1.045830000000933,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle full description","status":"passed","title":"should handle full description","duration":0.21818100000018603,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle brief description separately","status":"passed","title":"should handle brief description separately","duration":0.09871399999974528,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should allow empty descriptions","status":"passed","title":"should allow empty descriptions","duration":0.07758400000057009,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should default to not concealed","status":"passed","title":"should default to not concealed","duration":0.0518259999989823,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should handle concealed objects","status":"passed","title":"should handle concealed objects","duration":0.06254300000000512,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle weight","status":"passed","title":"should handle weight","duration":0.05434199999945122,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle volume","status":"passed","title":"should handle volume","duration":0.048271999999997206,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle size categories","status":"passed","title":"should handle size categories","duration":0.1344730000000709,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should allow undefined physical properties","status":"passed","title":"should allow undefined physical properties","duration":0.07581500000014785,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.11212399999931222,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should replace existing identity trait","status":"passed","title":"should replace existing identity trait","duration":0.08129900000130874,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle proper names correctly","status":"passed","title":"should handle proper names correctly","duration":0.0686519999999291,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle mass nouns","status":"passed","title":"should handle mass nouns","duration":0.04395699999986391,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle unique items","status":"passed","title":"should handle unique items","duration":0.06039500000042608,"failureMessages":[],"meta":{}}],"startTime":1754491597180,"endTime":1754491597188.0813,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/identity.test.ts"},{"assertionResults":[{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.5688239999999496,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3862219999991794,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should handle all positions","status":"passed","title":"should handle all positions","duration":0.14328300000124727,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should track position changes","status":"passed","title":"should track position changes","duration":0.18332999999984168,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.1703990000005433,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle stuck state","status":"passed","title":"should handle stuck state","duration":0.12143199999991339,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.5710859999999229,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should handle multiple levers in world","status":"passed","title":"should handle multiple levers in world","duration":0.3917220000002999,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should store custom position names","status":"passed","title":"should store custom position names","duration":0.26711299999988114,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should handle partial position names","status":"passed","title":"should handle partial position names","duration":0.7365290000016103,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should store lever sound","status":"passed","title":"should store lever sound","duration":0.7793739999997342,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should handle missing sound","status":"passed","title":"should handle missing sound","duration":0.6499979999989591,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.23177899999973306,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.23430799999914598,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.23148499999842898,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle stuck spring-loaded lever","status":"passed","title":"should handle stuck spring-loaded lever","duration":1.1397069999984524,"failureMessages":[],"meta":{}}],"startTime":1754491638770,"endTime":1754491638779.1396,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lever.test.ts"},{"assertionResults":[{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.087321000000884,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3961349999990489,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.19310899999982212,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle fuel-based initialization","status":"passed","title":"should handle fuel-based initialization","duration":0.23618999999962398,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should support various brightness levels","status":"passed","title":"should support various brightness levels","duration":0.23647299999902316,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should handle edge brightness values","status":"passed","title":"should handle edge brightness values","duration":0.3276850000002014,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should allow out-of-range brightness values","status":"passed","title":"should allow out-of-range brightness values","duration":0.20643399999971734,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should track lit status","status":"passed","title":"should track lit status","duration":0.10973299999932351,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should maintain brightness when lit state changes","status":"passed","title":"should maintain brightness when lit state changes","duration":0.31390600000122504,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle infinite fuel sources","status":"passed","title":"should handle infinite fuel sources","duration":0.22876300000098126,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle fuel-based sources","status":"passed","title":"should handle fuel-based sources","duration":0.16522799999984272,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should track fuel consumption","status":"passed","title":"should track fuel consumption","duration":0.23955500000010943,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle various consumption rates","status":"passed","title":"should handle various consumption rates","duration":0.24163599999883445,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle partial fuel properties","status":"passed","title":"should handle partial fuel properties","duration":0.1369059999997262,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.8107619999991584,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should create various light source entities","status":"passed","title":"should create various light source entities","duration":0.23228200000085053,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with switchable light sources","status":"passed","title":"should work with switchable light sources","duration":0.1696140000003652,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with wearable light sources","status":"passed","title":"should work with wearable light sources","duration":0.14202300000033574,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle flame-based sources","status":"passed","title":"should handle flame-based sources","duration":2.2117680000010296,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle electric sources","status":"passed","title":"should handle electric sources","duration":0.2649459999993269,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle magical sources","status":"passed","title":"should handle magical sources","duration":0.12800099999913073,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.15881100000115111,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.5662549999997282,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.14843400000063411,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle zero values","status":"passed","title":"should handle zero values","duration":0.11194699999941804,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.07413700000142853,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.14420000000063737,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle refillable light sources","status":"passed","title":"should handle refillable light sources","duration":0.14344899999923655,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle multi-mode light sources","status":"passed","title":"should handle multi-mode light sources","duration":0.11002399999961199,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle degrading light sources","status":"passed","title":"should handle degrading light sources","duration":0.48661899999933667,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle emergency light sources","status":"passed","title":"should handle emergency light sources","duration":0.22801299999991897,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle combined light sources","status":"passed","title":"should handle combined light sources","duration":0.14205299999957788,"failureMessages":[],"meta":{}}],"startTime":1754491628030,"endTime":1754491628043.228,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/light-source.test.ts"},{"assertionResults":[{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.033411000000342,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3911530000004859,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should use startsLocked to set initial isLocked if not provided","status":"passed","title":"should use startsLocked to set initial isLocked if not provided","duration":0.20381199999974342,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should prefer explicit isLocked over startsLocked","status":"passed","title":"should prefer explicit isLocked over startsLocked","duration":0.2040420000012091,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle single key","status":"passed","title":"should handle single key","duration":0.20774299999902723,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle multiple keys","status":"passed","title":"should handle multiple keys","duration":0.538046999998187,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle both single and multiple keys","status":"passed","title":"should handle both single and multiple keys","duration":0.15700699999797507,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle master key acceptance","status":"passed","title":"should handle master key acceptance","duration":0.07266399999934947,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should allow changing lock state","status":"passed","title":"should allow changing lock state","duration":0.255990000001475,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should handle auto-lock behavior flag","status":"passed","title":"should handle auto-lock behavior flag","duration":0.15561700000034762,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3016540000025998,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should work with lockable container","status":"passed","title":"should work with lockable container","duration":0.28121900000041933,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should create matching key entity","status":"passed","title":"should create matching key entity","duration":0.13952300000164541,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should store all lock-related messages","status":"passed","title":"should store all lock-related messages","duration":0.9713909999991301,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.2108330000010028,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","sound effects"],"fullName":"LockableTrait sound effects should support lock/unlock sounds","status":"passed","title":"should support lock/unlock sounds","duration":0.2638279999991937,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.13305700000273646,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08915600000182167,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle entity without key requirement","status":"passed","title":"should handle entity without key requirement","duration":0.08227199999964796,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0697180000024673,"failureMessages":[],"meta":{}}],"startTime":1754491587788,"endTime":1754491587797.133,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lockable.test.ts"},{"assertionResults":[{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.189458000000741,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.0202530000005936,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should handle all weight classes","status":"passed","title":"should handle all weight classes","duration":0.27380100000118546,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should track blocked exits","status":"passed","title":"should track blocked exits","duration":1.2959890000001906,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle single blocked exit","status":"passed","title":"should handle single blocked exit","duration":0.6300320000009378,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle no blocked exits when not blocking","status":"passed","title":"should handle no blocked exits when not blocking","duration":0.39110299999993003,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should track what is revealed when moved","status":"passed","title":"should track what is revealed when moved","duration":0.20562900000004447,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should handle no reveal","status":"passed","title":"should handle no reveal","duration":0.10601700000006531,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track if moved","status":"passed","title":"should track if moved","duration":0.261822000000393,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track original room","status":"passed","title":"should track original room","duration":0.17972699999882025,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4720319999996718,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.3043519999991986,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with both PushableTrait and PullableTrait","status":"passed","title":"should work with both PushableTrait and PullableTrait","duration":0.33619499999986147,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle single person movement","status":"passed","title":"should handle single person movement","duration":0.1303779999998369,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle multi-person movement","status":"passed","title":"should handle multi-person movement","duration":0.16855900000155088,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should default people required when multi-person is true","status":"passed","title":"should default people required when multi-person is true","duration":1.0880880000004254,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should store movement sounds","status":"passed","title":"should store movement sounds","duration":0.30766099999891594,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should handle no sound","status":"passed","title":"should handle no sound","duration":0.09903300000041781,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.126683000000412,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.12481900000057067,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08596999999826949,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a blocking boulder","status":"passed","title":"should create a blocking boulder","duration":1.8167759999996633,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a moveable bookshelf","status":"passed","title":"should create a moveable bookshelf","duration":0.3815360000007786,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a light moveable crate","status":"passed","title":"should create a light moveable crate","duration":0.1731999999992695,"failureMessages":[],"meta":{}}],"startTime":1754491627790,"endTime":1754491627803.3816,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/moveable-scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.7494749999987107,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.45839900000100897,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should use startsOpen to set initial isOpen if not provided","status":"passed","title":"should use startsOpen to set initial isOpen if not provided","duration":0.1980600000006234,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should prefer explicit isOpen over startsOpen","status":"passed","title":"should prefer explicit isOpen over startsOpen","duration":0.23219500000050175,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should allow changing open state","status":"passed","title":"should allow changing open state","duration":0.31241599999884784,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should maintain other properties when state changes","status":"passed","title":"should maintain other properties when state changes","duration":0.21388699999988603,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3701309999996738,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should work with container entities","status":"passed","title":"should work with container entities","duration":0.33462800000052084,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should handle entity with multiple state traits","status":"passed","title":"should handle entity with multiple state traits","duration":0.3654790000000503,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle one-way openable (canClose = false)","status":"passed","title":"should handle one-way openable (canClose = false)","duration":0.21776499999941734,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle revealsContents setting","status":"passed","title":"should handle revealsContents setting","duration":0.10042100000100618,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should support sound effects","status":"passed","title":"should support sound effects","duration":0.10083499999927881,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should store all custom messages","status":"passed","title":"should store all custom messages","duration":0.12651399999958812,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.1544819999999163,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.09917599999971571,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.07592999999906169,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08184599999913189,"failureMessages":[],"meta":{}}],"startTime":1754491615498,"endTime":1754491615504.099,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/openable.test.ts"},{"assertionResults":[{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.843510000000606,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3392119999989518,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should handle all pull types","status":"passed","title":"should handle all pull types","duration":0.13530399999945075,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should track pull count","status":"passed","title":"should track pull count","duration":0.12833800000043993,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.20771700000113924,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should respect max pulls","status":"passed","title":"should respect max pulls","duration":0.13314700000046287,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3087579999992158,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should work with multiple pullable objects","status":"passed","title":"should work with multiple pullable objects","duration":0.14914500000122644,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle lever configuration","status":"passed","title":"should handle lever configuration","duration":0.22763900000063586,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle cord configuration","status":"passed","title":"should handle cord configuration","duration":0.1489369999999326,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle attached configuration","status":"passed","title":"should handle attached configuration","duration":0.10460699999930512,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.07490399999915098,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.11783400000058464,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.11266000000068743,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.14945600000100967,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1757019999986369,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09654799999952957,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.08756999999968684,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle non-repeatable pulls","status":"passed","title":"should handle non-repeatable pulls","duration":0.0711780000001454,"failureMessages":[],"meta":{}}],"startTime":1754491627815,"endTime":1754491627820.1758,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pullable.test.ts"},{"assertionResults":[{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.0024979999998322,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3927210000001651,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should handle all push types","status":"passed","title":"should handle all push types","duration":0.132951999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should track push count","status":"passed","title":"should track push count","duration":0.1878209999995306,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.1749580000014248,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should respect max pushes","status":"passed","title":"should respect max pushes","duration":0.29233899999962887,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3455370000010589,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should work with multiple pushable objects","status":"passed","title":"should work with multiple pushable objects","duration":0.19419400000151654,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle button configuration","status":"passed","title":"should handle button configuration","duration":0.2771519999987504,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.19603300000017043,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle moveable configuration","status":"passed","title":"should handle moveable configuration","duration":0.17732900000009977,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should handle all push directions","status":"passed","title":"should handle all push directions","duration":0.2188060000007681,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should default to no specific direction","status":"passed","title":"should default to no specific direction","duration":0.06940200000099139,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.11462199999914446,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.0808340000003227,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1613500000003114,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11340700000073412,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08369600000150967,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.08782800000153657,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle non-repeatable pushes","status":"passed","title":"should handle non-repeatable pushes","duration":0.07622999999875901,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle passage revealing","status":"passed","title":"should handle passage revealing","duration":0.09652599999935774,"failureMessages":[],"meta":{}}],"startTime":1754491642845,"endTime":1754491642851.1614,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pushable.test.ts"},{"assertionResults":[{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.1352660000011383,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.0684280000004946,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should auto-initialize pages from pageContent","status":"passed","title":"should auto-initialize pages from pageContent","duration":0.8563549999998941,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should not override currentPage if already set","status":"passed","title":"should not override currentPage if already set","duration":0.2424510000000737,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle simple text","status":"passed","title":"should handle simple text","duration":0.25771700000041164,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle multi-line text","status":"passed","title":"should handle multi-line text","duration":0.27178100000128325,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle preview text","status":"passed","title":"should handle preview text","duration":0.12611000000106287,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle empty text","status":"passed","title":"should handle empty text","duration":0.08920800000123563,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should support different languages","status":"passed","title":"should support different languages","duration":0.2620279999991908,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle ability requirements","status":"passed","title":"should handle ability requirements","duration":0.1575540000012552,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle item requirements","status":"passed","title":"should handle item requirements","duration":0.0952980000001844,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle no requirements","status":"passed","title":"should handle no requirements","duration":0.10098099999959231,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should support various readable types","status":"passed","title":"should support various readable types","duration":3.06866699999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should allow custom readable types","status":"passed","title":"should allow custom readable types","duration":0.15436399999998685,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle books with multiple pages","status":"passed","title":"should handle books with multiple pages","duration":0.2099529999995866,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle current page navigation","status":"passed","title":"should handle current page navigation","duration":0.20708700000068347,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle single page with pageContent","status":"passed","title":"should handle single page with pageContent","duration":0.0809079999999085,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle empty pageContent array","status":"passed","title":"should handle empty pageContent array","duration":0.4645439999985683,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should track read status","status":"passed","title":"should track read status","duration":0.11207900000044901,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should handle readability state","status":"passed","title":"should handle readability state","duration":0.08580200000142213,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should maintain state through changes","status":"passed","title":"should maintain state through changes","duration":0.08102300000064133,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4036020000003191,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should create various readable entities","status":"passed","title":"should create various readable entities","duration":0.26545900000019174,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should work with openable books","status":"passed","title":"should work with openable books","duration":0.22561600000153703,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.09505899999930989,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.06845700000121724,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0633189999989554,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle page bounds","status":"passed","title":"should handle page bounds","duration":0.056909999999334104,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should preserve data integrity","status":"passed","title":"should preserve data integrity","duration":0.14944499999910477,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle special text content","status":"passed","title":"should handle special text content","duration":0.10519099999874015,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle magical tome with requirements","status":"passed","title":"should handle magical tome with requirements","duration":0.09408599999915168,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle inscribed objects","status":"passed","title":"should handle inscribed objects","duration":0.08480599999893457,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle dynamic readability","status":"passed","title":"should handle dynamic readability","duration":0.07439700000031735,"failureMessages":[],"meta":{}}],"startTime":1754491600851,"endTime":1754491600865.1494,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/readable.test.ts"},{"assertionResults":[{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.485549999997602,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.1993050000019139,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle simple exits","status":"passed","title":"should handle simple exits","duration":0.716774999997142,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle exits with doors","status":"passed","title":"should handle exits with doors","duration":0.2868400000006659,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle blocked exits","status":"passed","title":"should handle blocked exits","duration":0.5243260000024748,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle custom exits","status":"passed","title":"should handle custom exits","duration":0.2186199999996461,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle dark rooms","status":"passed","title":"should handle dark rooms","duration":1.081412999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle lit rooms","status":"passed","title":"should handle lit rooms","duration":0.23461700000189012,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle outdoor lighting","status":"passed","title":"should handle outdoor lighting","duration":0.3535730000003241,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle underground rooms","status":"passed","title":"should handle underground rooms","duration":0.1996190000027127,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should start unvisited","status":"passed","title":"should start unvisited","duration":0.20420299999750569,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should track visited state","status":"passed","title":"should track visited state","duration":0.0928299999977753,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should handle initial description","status":"passed","title":"should handle initial description","duration":0.07312699999965844,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient sounds","status":"passed","title":"should handle ambient sounds","duration":0.05702699999892502,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient smells","status":"passed","title":"should handle ambient smells","duration":0.052349000001413515,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle both sound and smell","status":"passed","title":"should handle both sound and smell","duration":0.22299199999906705,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle region assignment","status":"passed","title":"should handle region assignment","duration":0.06346099999791477,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle multiple tags","status":"passed","title":"should handle multiple tags","duration":0.22305100000085076,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle rooms without regions or tags","status":"passed","title":"should handle rooms without regions or tags","duration":0.12065399999846704,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.14166199999817763,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should work with container trait","status":"passed","title":"should work with container trait","duration":0.08873899999889545,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle maze-like connections","status":"passed","title":"should handle maze-like connections","duration":0.1463660000008531,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle multi-level connections","status":"passed","title":"should handle multi-level connections","duration":0.11587400000280468,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle outdoor/indoor transitions","status":"passed","title":"should handle outdoor/indoor transitions","duration":0.16330200000084005,"failureMessages":[],"meta":{}}],"startTime":1754491600721,"endTime":1754491600731.1633,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/room.test.ts"},{"assertionResults":[{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9144280000000435,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.28998500000125205,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.14692099999956554,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle only mentioned property","status":"passed","title":"should handle only mentioned property","duration":0.25541899999916495,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support custom messages for different items","status":"passed","title":"should support custom messages for different items","duration":0.5593029999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should allow undefined message for default handling","status":"passed","title":"should allow undefined message for default handling","duration":0.24853900000016438,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support humorous messages","status":"passed","title":"should support humorous messages","duration":0.17724300000008952,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle mentioned scenery","status":"passed","title":"should handle mentioned scenery","duration":0.12717700000030163,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle unmentioned scenery","status":"passed","title":"should handle unmentioned scenery","duration":0.2022789999991801,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should allow toggling mentioned state","status":"passed","title":"should allow toggling mentioned state","duration":0.2428010000003269,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.37048499999946216,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should create various scenery entities","status":"passed","title":"should create various scenery entities","duration":0.19335200000023178,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with room decorations","status":"passed","title":"should work with room decorations","duration":0.30567599999994854,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with interactive scenery","status":"passed","title":"should work with interactive scenery","duration":0.46482800000012503,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle architectural features","status":"passed","title":"should handle architectural features","duration":0.14994900000056077,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle natural features","status":"passed","title":"should handle natural features","duration":0.13998499999979686,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle furniture","status":"passed","title":"should handle furniture","duration":0.09425399999963702,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle always-mentioned scenery","status":"passed","title":"should handle always-mentioned scenery","duration":0.06843599999956496,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle hidden scenery","status":"passed","title":"should handle hidden scenery","duration":0.043974999998681596,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle discoverable scenery","status":"passed","title":"should handle discoverable scenery","duration":0.10966200000075332,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1298480000004929,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.0993079999989277,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09204099999988102,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle null values","status":"passed","title":"should handle null values","duration":0.09687299999859533,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should preserve object reference","status":"passed","title":"should preserve object reference","duration":0.07868799999960174,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with state changes","status":"passed","title":"should handle scenery with state changes","duration":0.13168599999880826,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery containers","status":"passed","title":"should handle scenery containers","duration":0.14306000000033237,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with multiple states","status":"passed","title":"should handle scenery with multiple states","duration":0.12836699999934353,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle room-defining scenery","status":"passed","title":"should handle room-defining scenery","duration":0.09452100000089558,"failureMessages":[],"meta":{}}],"startTime":1754491602042,"endTime":1754491602050.1284,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.4647910000003321,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6987339999996038,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle partial capacity initialization","status":"passed","title":"should handle partial capacity initialization","duration":0.14990399999987858,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle only enterable property","status":"passed","title":"should handle only enterable property","duration":0.44362700000056066,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support weight-based capacity","status":"passed","title":"should support weight-based capacity","duration":0.37160100000073726,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support item count capacity","status":"passed","title":"should support item count capacity","duration":0.3058550000005198,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support both weight and item limits","status":"passed","title":"should support both weight and item limits","duration":0.3977629999990313,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.17945900000086112,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle zero capacity","status":"passed","title":"should handle zero capacity","duration":0.39053100000091945,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.3307150000000547,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.2482959999997547,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.11752499999965949,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle empty type arrays","status":"passed","title":"should handle empty type arrays","duration":0.07776100000046426,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle non-enterable supporters","status":"passed","title":"should handle non-enterable supporters","duration":0.05389199999990524,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle enterable supporters","status":"passed","title":"should handle enterable supporters","duration":0.06917799999973795,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should default to non-enterable","status":"passed","title":"should default to non-enterable","duration":0.10558300000047893,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.34288500000002387,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should create various supporter entities","status":"passed","title":"should create various supporter entities","duration":0.24675199999910546,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with scenery supporters","status":"passed","title":"should work with scenery supporters","duration":0.27944600000046194,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with enterable supporters","status":"passed","title":"should work with enterable supporters","duration":0.3411400000004505,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle furniture supporters","status":"passed","title":"should handle furniture supporters","duration":0.2145540000001347,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle specialized supporters","status":"passed","title":"should handle specialized supporters","duration":1.2248299999992014,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle natural supporters","status":"passed","title":"should handle natural supporters","duration":3.232341999999335,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.24838099999942642,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.2030140000006213,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.2745809999996709,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle negative capacity values","status":"passed","title":"should handle negative capacity values","duration":0.20269699999880686,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle fractional capacity values","status":"passed","title":"should handle fractional capacity values","duration":0.1916060000003199,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should preserve array references","status":"passed","title":"should preserve array references","duration":0.7187930000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle multi-purpose supporters","status":"passed","title":"should handle multi-purpose supporters","duration":0.40696399999978894,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle tiered supporters","status":"passed","title":"should handle tiered supporters","duration":0.13791400000081921,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle magical supporters","status":"passed","title":"should handle magical supporters","duration":0.10534899999947811,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle dynamic supporter states","status":"passed","title":"should handle dynamic supporter states","duration":0.11647500000071886,"failureMessages":[],"meta":{}}],"startTime":1754491614604,"endTime":1754491614619.138,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/supporter.test.ts"},{"assertionResults":[{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.006450999999288,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6664959999998246,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should handle power requirements correctly","status":"passed","title":"should handle power requirements correctly","duration":0.26315900000008696,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should set autoOffCounter when starting on with autoOffTime","status":"passed","title":"should set autoOffCounter when starting on with autoOffTime","duration":0.40872999999919557,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should not set autoOffCounter when starting off","status":"passed","title":"should not set autoOffCounter when starting off","duration":0.2929729999996198,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should allow changing on/off state","status":"passed","title":"should allow changing on/off state","duration":0.2303489999994781,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should track power availability","status":"passed","title":"should track power availability","duration":0.14634599999953934,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should handle auto-off counter","status":"passed","title":"should handle auto-off counter","duration":0.1346319999993284,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5345800000013696,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.5436259999987669,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should handle device with power requirements","status":"passed","title":"should handle device with power requirements","duration":0.44701100000020233,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should store all switch-related messages","status":"passed","title":"should store all switch-related messages","duration":0.18042700000114564,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.12479999999959546,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","sound effects"],"fullName":"SwitchableTrait sound effects should support all sound types","status":"passed","title":"should support all sound types","duration":0.13883399999940593,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.2188720000012836,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.12108699999953387,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle device with no auto-off","status":"passed","title":"should handle device with no auto-off","duration":0.08197500000096625,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09178900000006252,"failureMessages":[],"meta":{}}],"startTime":1754491638791,"endTime":1754491638799.0918,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/switchable.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create a functional light switch","status":"passed","title":"should create a functional light switch","duration":3.341521999998804,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create an elevator call button","status":"passed","title":"should create an elevator call button","duration":0.45089200000074925,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a safe combination dial","status":"passed","title":"should create a safe combination dial","duration":0.4641479999991134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a water valve","status":"passed","title":"should create a water valve","duration":0.2659860000021581,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a heavy boulder that can be pushed","status":"passed","title":"should create a heavy boulder that can be pushed","duration":0.4004400000012538,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a crate that can be pushed and pulled","status":"passed","title":"should create a crate that can be pushed and pulled","duration":0.2445800000023155,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","FRAGILE + BREAKABLE"],"fullName":"Trait Combinations FRAGILE + BREAKABLE should create a reinforced glass window","status":"passed","title":"should create a reinforced glass window","duration":0.2468909999988682,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create an emergency alarm system","status":"passed","title":"should create an emergency alarm system","duration":0.25211400000262074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create a complex control panel","status":"passed","title":"should create a complex control panel","duration":0.5030550000010408,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle entities with many traits","status":"passed","title":"should handle entities with many traits","duration":0.22671400000035646,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle trait updates","status":"passed","title":"should handle trait updates","duration":0.16792599999826052,"failureMessages":[],"meta":{}}],"startTime":1754491615484,"endTime":1754491615491.2268,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.335852000000159,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.0747090000004391,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should handle all turn types","status":"passed","title":"should handle all turn types","duration":0.4003649999995105,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle string settings","status":"passed","title":"should handle string settings","duration":0.36680800000067393,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric settings","status":"passed","title":"should handle numeric settings","duration":0.6383310000001075,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should default current setting to first in array","status":"passed","title":"should default current setting to first in array","duration":0.43187899999975343,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric ranges","status":"passed","title":"should handle numeric ranges","duration":0.29071099999964645,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turns made","status":"passed","title":"should track turns made","duration":0.14494200000081037,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turn direction","status":"passed","title":"should track turn direction","duration":0.26131700000041747,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.42125300000043353,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should work with multiple turnable objects","status":"passed","title":"should work with multiple turnable objects","duration":0.2539550000001327,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle dial configuration","status":"passed","title":"should handle dial configuration","duration":0.7425480000001698,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle wheel configuration","status":"passed","title":"should handle wheel configuration","duration":0.15698299999894516,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle crank configuration","status":"passed","title":"should handle crank configuration","duration":0.12238299999989977,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle valve configuration","status":"passed","title":"should handle valve configuration","duration":0.12267000000065309,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.17481999999836262,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle jammed state","status":"passed","title":"should handle jammed state","duration":0.08246999999937543,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle unidirectional turning","status":"passed","title":"should handle unidirectional turning","duration":0.14780199999950128,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.20444299999871873,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.09296200000062527,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":1.7120149999991554,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.2548709999991843,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10323700000117242,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle complex configurations","status":"passed","title":"should handle complex configurations","duration":0.14090399999986403,"failureMessages":[],"meta":{}}],"startTime":1754491615689,"endTime":1754491615701.1409,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/turnable.test.ts"},{"assertionResults":[{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.034332999999606,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.38706400000046415,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.4042120000012801,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle empty blocksSlots array","status":"passed","title":"should handle empty blocksSlots array","duration":0.17911500000082015,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should support various body slots","status":"passed","title":"should support various body slots","duration":1.8479040000001987,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should handle custom slot names","status":"passed","title":"should handle custom slot names","duration":0.24972300000081304,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should block multiple slots","status":"passed","title":"should block multiple slots","duration":0.7422299999998359,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should support different layers","status":"passed","title":"should support different layers","duration":0.165686000000278,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should handle wearableOver property","status":"passed","title":"should handle wearableOver property","duration":0.26627299999927345,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should track worn status","status":"passed","title":"should track worn status","duration":0.2541770000007091,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should handle different wearers","status":"passed","title":"should handle different wearers","duration":0.13267699999960314,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should clear wornBy when not worn","status":"passed","title":"should clear wornBy when not worn","duration":0.08646500000031665,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should store custom wear and remove messages","status":"passed","title":"should store custom wear and remove messages","duration":0.0872140000010404,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow undefined messages","status":"passed","title":"should allow undefined messages","duration":0.0728080000008049,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow only wear message","status":"passed","title":"should allow only wear message","duration":0.07079499999963446,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.18739800000003015,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.06353699999999662,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle fractional values","status":"passed","title":"should handle fractional values","duration":3.23717200000101,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3713239999997313,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should create various wearable items","status":"passed","title":"should create various wearable items","duration":0.1469310000011319,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should work with actor wearing items","status":"passed","title":"should work with actor wearing items","duration":0.1642760000013368,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle layered armor system","status":"passed","title":"should handle layered armor system","duration":0.15879899999890768,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle jewelry with multiple items per slot","status":"passed","title":"should handle jewelry with multiple items per slot","duration":0.07350600000063423,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle outfit sets","status":"passed","title":"should handle outfit sets","duration":0.07873800000015763,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.17908499999975902,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle undefined as parameter","status":"passed","title":"should handle undefined as parameter","duration":0.08126900000024762,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.06695599999875412,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle boolean false values correctly","status":"passed","title":"should handle boolean false values correctly","duration":0.058574000000589876,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle zero and negative values","status":"passed","title":"should handle zero and negative values","duration":0.11516300000039337,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should preserve array reference for blocksSlots","status":"passed","title":"should preserve array reference for blocksSlots","duration":0.20743100000072445,"failureMessages":[],"meta":{}}],"startTime":1754491600943,"endTime":1754491600956.2075,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/wearable.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":1.4075020000018412,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should share entities with WorldModel","status":"passed","title":"should share entities with WorldModel","duration":0.2099689999995462,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should remove entities","status":"passed","title":"should remove entities","duration":0.19511100000090664,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":1.2521159999996598,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.4215769999973418,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":2.3812480000015057,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.6741000000001804,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":0.5427100000015344,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup containers with properties","status":"passed","title":"should setup containers with properties","duration":0.4617440000001807,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers with item specs","status":"passed","title":"should fill containers with item specs","duration":0.40812799999912386,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should place actors at locations","status":"passed","title":"should place actors at locations","duration":0.2597630000018398,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set state values","status":"passed","title":"should set state values","duration":0.13643000000229222,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player","status":"passed","title":"should set player","duration":0.09878799999933108,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear world data","status":"passed","title":"should clear world data","duration":0.19959599999856437,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.10822600000028615,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should add and remove traits","status":"passed","title":"should add and remove traits","duration":0.22489299999870127,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Scope and Visibility Integration"],"fullName":"AuthorModel Scope and Visibility Integration should include items in closed containers in scope","status":"passed","title":"should include items in closed containers in scope","duration":1.5420029999986582,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.6226769999993849,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.16394099999888567,"failureMessages":[],"meta":{}}],"startTime":1754491587604,"endTime":1754491587616.164,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the room the observer is in","status":"passed","title":"should include the room the observer is in","duration":2.483376000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in the same room","status":"passed","title":"should include items in the same room","duration":0.46695700000054785,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers in the room","status":"passed","title":"should include items in containers in the room","duration":0.4868290000013076,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","status":"skipped","title":"should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items carried by the observer","status":"passed","title":"should include items carried by the observer","duration":0.24797699999908218,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers carried by the observer","status":"passed","title":"should include items in containers carried by the observer","duration":0.3523209999984829,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the observer itself","status":"passed","title":"should include the observer itself","duration":0.2299779999993916,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle empty room","status":"passed","title":"should handle empty room","duration":0.5506180000011227,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should return empty array if observer not in a room","status":"passed","title":"should return empty array if observer not in a room","duration":1.2264140000006591,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle unique entities (no duplicates)","status":"passed","title":"should handle unique entities (no duplicates)","duration":0.4352550000003248,"failureMessages":[],"meta":{}}],"startTime":1754491606781,"endTime":1754491606787.4353,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/get-in-scope.test.ts"},{"assertionResults":[{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add child to parent","status":"passed","title":"should add child to parent","duration":1.4766959999997198,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add multiple children to parent","status":"passed","title":"should add multiple children to parent","duration":0.9660629999998491,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should remove child from parent","status":"passed","title":"should remove child from parent","duration":0.21975899999961257,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should move child to new parent","status":"passed","title":"should move child to new parent","duration":0.20266000000083295,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent parent","status":"passed","title":"should handle non-existent parent","duration":0.293177999999898,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent child","status":"passed","title":"should handle non-existent child","duration":0.10063699999955134,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove entity and its relationships","status":"passed","title":"should remove entity and its relationships","duration":0.29620799999975134,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove only specified child","status":"passed","title":"should remove only specified child","duration":0.18229000000064843,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should handle removing non-existent child","status":"passed","title":"should handle removing non-existent child","duration":0.24403499999971245,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should clean up empty parent sets","status":"passed","title":"should clean up empty parent sets","duration":0.9582090000003518,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return true for parent with children","status":"passed","title":"should return true for parent with children","duration":0.11316399999850546,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false for parent without children","status":"passed","title":"should return false for parent without children","duration":0.05782099999851198,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false after removing all children","status":"passed","title":"should return false after removing all children","duration":0.05756900000051246,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should get all descendants","status":"passed","title":"should get all descendants","duration":0.4162369999994553,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should respect max depth","status":"passed","title":"should respect max depth","duration":0.26047900000048685,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle entity with no descendants","status":"passed","title":"should handle entity with no descendants","duration":0.0848150000001624,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle circular references","status":"passed","title":"should handle circular references","duration":0.08008399999926041,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should collect all descendants up to max depth","status":"passed","title":"should collect all descendants up to max depth","duration":0.16129699999873992,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get all ancestors","status":"passed","title":"should get all ancestors","duration":0.1287290000000212,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get ancestors up to depth","status":"passed","title":"should get ancestors up to depth","duration":0.10226700000021083,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle entity with no ancestors","status":"passed","title":"should handle entity with no ancestors","duration":0.06136200000037206,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle missing entity","status":"passed","title":"should handle missing entity","duration":0.048240000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","clear"],"fullName":"SpatialIndex clear should clear all relationships","status":"passed","title":"should clear all relationships","duration":0.10611000000062631,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.1983989999989717,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.2814730000009149,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should handle empty JSON","status":"passed","title":"should handle empty JSON","duration":0.06946400000015274,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should clear before loading","status":"passed","title":"should clear before loading","duration":0.0809529999987717,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle adding same child multiple times","status":"passed","title":"should handle adding same child multiple times","duration":0.12889399999949092,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle removing child from wrong parent","status":"passed","title":"should handle removing child from wrong parent","duration":0.09812499999861757,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle self-parenting","status":"passed","title":"should handle self-parenting","duration":0.07042700000056357,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle very deep hierarchies","status":"passed","title":"should handle very deep hierarchies","duration":0.3578589999997348,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should maintain consistency when moving entities","status":"passed","title":"should maintain consistency when moving entities","duration":0.2558019999996759,"failureMessages":[],"meta":{}}],"startTime":1754491580145,"endTime":1754491580154.2559,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/spatial-index.test.ts"},{"assertionResults":[{"ancestorTitles":["Verify moveEntity issue"],"fullName":"Verify moveEntity issue should not allow moving items into closed containers","status":"passed","title":"should not allow moving items into closed containers","duration":1.6804709999996703,"failureMessages":[],"meta":{}}],"startTime":1754491651941,"endTime":1754491651942.6804,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/verify-move-issue.test.ts"},{"assertionResults":[{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should always see self","status":"passed","title":"should always see self","duration":1.6553700000004028,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in same room","status":"passed","title":"should see entities in same room","duration":0.34487499999886495,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in different room","status":"passed","title":"should not see entities in different room","duration":0.278506999999081,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see the room observer is in","status":"passed","title":"should see the room observer is in","duration":0.14093899999897985,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see invisible entities","status":"passed","title":"should not see invisible entities","duration":0.272330999998303,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in transparent containers","status":"passed","title":"should see entities in transparent containers","duration":0.2154179999997723,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in open opaque containers","status":"passed","title":"should see entities in open opaque containers","duration":0.2561149999983172,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in closed opaque containers","status":"passed","title":"should not see entities in closed opaque containers","duration":0.1738839999998163,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should handle nested containers","status":"passed","title":"should handle nested containers","duration":0.33125900000050024,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should block sight through any closed container in path","status":"passed","title":"should block sight through any closed container in path","duration":0.17660399999840592,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not see anything in dark room without light","status":"passed","title":"should not see anything in dark room without light","duration":0.4452229999988049,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should only see lit light sources in dark room","status":"passed","title":"should only see lit light sources in dark room","duration":0.2463449999995646,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should see everything when carrying lit lamp","status":"passed","title":"should see everything when carrying lit lamp","duration":0.22241099999882863,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not benefit from light in closed container","status":"passed","title":"should not benefit from light in closed container","duration":0.28380699999979697,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should handle room lighting toggle","status":"passed","title":"should handle room lighting toggle","duration":0.15756099999998696,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should return all visible entities","status":"passed","title":"should return all visible entities","duration":1.0364629999985482,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should include carried items","status":"passed","title":"should include carried items","duration":0.20163100000172562,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle empty room","status":"passed","title":"should handle empty room","duration":2.3405559999991965,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle observer not in room","status":"passed","title":"should handle observer not in room","duration":1.5009959999988496,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for uncontained entities","status":"passed","title":"should return true for uncontained entities","duration":0.775908999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for invisible scenery","status":"passed","title":"should return false for invisible scenery","duration":0.13685900000018592,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in transparent container","status":"passed","title":"should return true for entity in transparent container","duration":0.11516999999912514,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in open opaque container","status":"passed","title":"should return true for entity in open opaque container","duration":0.08671700000013516,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for entity in closed opaque container","status":"passed","title":"should return false for entity in closed opaque container","duration":0.08753500000057102,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should handle opaque container without openable trait","status":"passed","title":"should handle opaque container without openable trait","duration":0.05874799999946845,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle deeply nested visibility","status":"passed","title":"should handle deeply nested visibility","duration":0.25999400000000605,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle supporter visibility","status":"passed","title":"should handle supporter visibility","duration":0.11949800000002142,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle visibility in nested containers","status":"passed","title":"should handle visibility in nested containers","duration":0.7054370000005292,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle circular containment gracefully","status":"passed","title":"should handle circular containment gracefully","duration":0.5436479999989388,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.16250899999977264,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle entities with no location","status":"passed","title":"should handle entities with no location","duration":0.08760299999994459,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle max depth in containment path","status":"passed","title":"should handle max depth in containment path","duration":0.19606200000089302,"failureMessages":[],"meta":{}}],"startTime":1754491614668,"endTime":1754491614683.196,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/visibility-behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should create empty world model","status":"passed","title":"should create empty world model","duration":2.2702769999996235,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should accept configuration","status":"passed","title":"should accept configuration","duration":0.20582899999863002,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entity with auto-generated ID","status":"passed","title":"should create entity with auto-generated ID","duration":0.47325999999884516,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should generate correct type-prefixed IDs","status":"passed","title":"should generate correct type-prefixed IDs","duration":0.32471499999883235,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should allow multiple entities with same displayName","status":"passed","title":"should allow multiple entities with same displayName","duration":0.3894529999997758,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entities with displayName","status":"passed","title":"should create entities with displayName","duration":0.18051399999967543,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get entity by id","status":"passed","title":"should get entity by id","duration":0.1549269999995886,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return undefined for missing entity","status":"passed","title":"should return undefined for missing entity","duration":0.17217999999775202,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should check entity existence","status":"passed","title":"should check entity existence","duration":0.583850999999413,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should remove entity","status":"passed","title":"should remove entity","duration":1.564120000002731,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return false when removing non-existent entity","status":"passed","title":"should return false when removing non-existent entity","duration":0.09052400000291527,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get all entities","status":"passed","title":"should get all entities","duration":1.1892379999990226,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should update entity","status":"passed","title":"should update entity","duration":0.17741199999727542,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle updating non-existent entity","status":"passed","title":"should handle updating non-existent entity","duration":0.06184600000051432,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should throw in strict mode when updating non-existent entity","status":"passed","title":"should throw in strict mode when updating non-existent entity","duration":0.43175500000143074,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should store displayName in entity attributes","status":"passed","title":"should store displayName in entity attributes","duration":0.17828699999881792,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should increment ID counters correctly","status":"passed","title":"should increment ID counters correctly","duration":0.11639999999897555,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle ID counter overflow","status":"passed","title":"should handle ID counter overflow","duration":2.976249999999709,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get entity location","status":"passed","title":"should get entity location","duration":0.46309199999814155,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get container contents","status":"passed","title":"should get container contents","duration":0.5004560000015772,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should move entity","status":"passed","title":"should move entity","duration":0.21264800000062678,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should remove entity from world","status":"passed","title":"should remove entity from world","duration":0.13195899999846006,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should check if move is valid","status":"passed","title":"should check if move is valid","duration":0.13380599999800324,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent moving to non-container","status":"passed","title":"should prevent moving to non-container","duration":0.07364099999904283,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent containment loops","status":"passed","title":"should prevent containment loops","duration":0.16640299999926356,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get containing room","status":"passed","title":"should get containing room","duration":0.15520399999877554,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get all contents recursively","status":"passed","title":"should get all contents recursively","duration":0.4109360000002198,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should handle max depth limit","status":"passed","title":"should handle max depth limit","duration":0.17607099999804632,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should work with entity IDs","status":"passed","title":"should work with entity IDs","duration":0.21602999999959138,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state","status":"passed","title":"should get and set state","duration":0.24362199999814038,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state values","status":"passed","title":"should get and set state values","duration":0.13629000000219094,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should handle nested state values","status":"passed","title":"should handle nested state values","duration":0.08334600000307546,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by trait","status":"passed","title":"should find entities by trait","duration":0.3946120000000519,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by type","status":"passed","title":"should find entities by type","duration":0.25327000000106636,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities with predicate","status":"passed","title":"should find entities with predicate","duration":0.15714099999968312,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should handle find options","status":"passed","title":"should handle find options","duration":0.2050409999974363,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should get entities in scope","status":"passed","title":"should get entities in scope","duration":1.1319269999985409,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should include carried items in scope","status":"passed","title":"should include carried items in scope","duration":0.17991500000061933,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should check visibility","status":"passed","title":"should check visibility","duration":0.14910100000270177,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should work with direct IDs for visibility","status":"passed","title":"should work with direct IDs for visibility","duration":0.18799699999726727,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should add relationship","status":"passed","title":"should add relationship","duration":0.15796899999986636,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should get related entities","status":"passed","title":"should get related entities","duration":0.2108139999982086,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should remove relationship","status":"passed","title":"should remove relationship","duration":0.3155669999978272,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle multiple relationship types","status":"passed","title":"should handle multiple relationship types","duration":0.43385699999998906,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle non-existent entities in non-strict mode","status":"passed","title":"should handle non-existent entities in non-strict mode","duration":0.334817999999359,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should throw in strict mode for non-existent entities","status":"passed","title":"should throw in strict mode for non-existent entities","duration":0.19521700000041164,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should calculate total weight","status":"passed","title":"should calculate total weight","duration":0.20789399999921443,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should detect containment loops","status":"passed","title":"should detect containment loops","duration":0.10096600000179023,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should find path between rooms","status":"passed","title":"should find path between rooms","duration":0.30355100000087987,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should get and set player","status":"passed","title":"should get and set player","duration":0.10255699999834178,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should throw when setting non-existent player","status":"passed","title":"should throw when setting non-existent player","duration":0.13171499999953085,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.39408199999888893,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.6422720000009576,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should handle loading old saves without ID system data","status":"passed","title":"should handle loading old saves without ID system data","duration":0.2795479999986128,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should clear world","status":"passed","title":"should clear world","duration":0.18736600000192993,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should register and apply event handler","status":"passed","title":"should register and apply event handler","duration":0.16338700000051176,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should validate events","status":"passed","title":"should validate events","duration":0.08647600000040256,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should throw when applying invalid event","status":"passed","title":"should throw when applying invalid event","duration":0.12455300000146963,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should preview event changes","status":"passed","title":"should preview event changes","duration":0.15816699999777484,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should track event history","status":"passed","title":"should track event history","duration":0.11188700000275276,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should get events since timestamp","status":"passed","title":"should get events since timestamp","duration":0.12688400000115507,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should clear event history","status":"passed","title":"should clear event history","duration":0.10727300000144169,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should unregister event handler","status":"passed","title":"should unregister event handler","duration":0.13834400000268943,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should handle unregistered events silently","status":"passed","title":"should handle unregistered events silently","duration":0.1529869999976654,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle empty world operations","status":"passed","title":"should handle empty world operations","duration":0.8854199999987031,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle removing entity with contents","status":"passed","title":"should handle removing entity with contents","duration":0.15664900000047055,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle circular references in toJSON","status":"passed","title":"should handle circular references in toJSON","duration":0.23116099999970174,"failureMessages":[],"meta":{}}],"startTime":1754491587529,"endTime":1754491587554.2312,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/world-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should not see medicine when cabinet is closed","status":"passed","title":"should not see medicine when cabinet is closed","duration":3.021567000001596,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should see medicine when cabinet is open","status":"passed","title":"should see medicine when cabinet is open","duration":0.5984450000014476,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should handle multiple state changes","status":"passed","title":"should handle multiple state changes","duration":0.5768929999994725,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify canSee works correctly","status":"passed","title":"should verify canSee works correctly","duration":0.4420609999997396,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify medicine is in scope regardless of cabinet state","status":"passed","title":"should verify medicine is in scope regardless of cabinet state","duration":1.3138440000002447,"failureMessages":[],"meta":{}}],"startTime":1754491649456,"endTime":1754491649462.314,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/visibility/container-state-visibility.test.ts"}]}