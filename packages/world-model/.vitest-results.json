{"numTotalTestSuites":468,"numPassedTestSuites":468,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":1137,"numPassedTests":1124,"numFailedTests":0,"numPendingTests":13,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755159919702,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Debug Worn Visibility"],"fullName":"Debug Worn Visibility should debug worn item visibility","status":"passed","title":"should debug worn item visibility","duration":7.878703000000314,"failureMessages":[],"meta":{}}],"startTime":1755159956712,"endTime":1755159956719.8787,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/debug-worn-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Minimal Visibility Test"],"fullName":"Minimal Visibility Test should see items in the same room","status":"passed","title":"should see items in the same room","duration":2.622196000000258,"failureMessages":[],"meta":{}}],"startTime":1755159965553,"endTime":1755159965555.6223,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/minimal-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":4.4819509999997535,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should enforce maximum nesting depth","status":"passed","title":"should enforce maximum nesting depth","duration":0.9802349999990838,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should prevent circular containment","status":"passed","title":"should prevent circular containment","duration":1.1729980000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should calculate total weight including contents","status":"passed","title":"should calculate total weight including contents","duration":0.6303430000007211,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should handle container capacity limits","status":"passed","title":"should handle container capacity limits","duration":1.259170000001177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle supporter and container combinations","status":"passed","title":"should handle supporter and container combinations","duration":1.5973900000008143,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle furniture with both surfaces and storage","status":"passed","title":"should handle furniture with both surfaces and storage","duration":1.5552110000007815,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should handle moving containers with contents","status":"passed","title":"should handle moving containers with contents","duration":0.6429599999992206,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should update visibility when opening/closing containers","status":"passed","title":"should update visibility when opening/closing containers","duration":1.6201899999996385,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find all containers of a specific type","status":"passed","title":"should find all containers of a specific type","duration":1.6624730000003183,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find containers matching complex criteria","status":"passed","title":"should find containers matching complex criteria","duration":0.6457209999989573,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should handle large numbers of containers efficiently","status":"passed","title":"should handle large numbers of containers efficiently","duration":6.691100000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should efficiently check containment loops in complex hierarchies","status":"passed","title":"should efficiently check containment loops in complex hierarchies","duration":0.42386400000032154,"failureMessages":[],"meta":{}}],"startTime":1755159931896,"endTime":1755159931920.6912,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/container-hierarchies.test.ts"},{"assertionResults":[{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should create doors connecting two rooms","status":"passed","title":"should create doors connecting two rooms","duration":2.860987999999452,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should synchronize door state between rooms","status":"passed","title":"should synchronize door state between rooms","duration":0.5768170000001192,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should prevent opening locked doors","status":"passed","title":"should prevent opening locked doors","duration":0.582962000000407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should unlock doors with correct key","status":"passed","title":"should unlock doors with correct key","duration":0.3171169999995982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should handle multiple locked doors","status":"passed","title":"should handle multiple locked doors","duration":0.32204300000012154,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle secret doors","status":"passed","title":"should handle secret doors","duration":1.6861120000003211,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle one-way doors","status":"passed","title":"should handle one-way doors","duration":0.5158460000002378,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle automatic closing doors","status":"passed","title":"should handle automatic closing doors","duration":0.3121549999996205,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should affect visibility through doors","status":"passed","title":"should affect visibility through doors","duration":0.6263880000005884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should handle doors with windows","status":"passed","title":"should handle doors with windows","duration":0.332777000000533,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle rooms with multiple doors","status":"passed","title":"should handle rooms with multiple doors","duration":1.2865839999994932,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle double doors","status":"passed","title":"should handle double doors","duration":0.27072599999974045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should track door usage","status":"passed","title":"should track door usage","duration":0.1810619999996561,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should handle door with special requirements","status":"passed","title":"should handle door with special requirements","duration":0.18165500000031898,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Performance with Many Doors"],"fullName":"Door Mechanics Integration Tests Performance with Many Doors should handle buildings with many doors efficiently","status":"passed","title":"should handle buildings with many doors efficiently","duration":0.5125550000002477,"failureMessages":[],"meta":{}}],"startTime":1755159938290,"endTime":1755159938301.5125,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/door-mechanics.test.ts"},{"assertionResults":[{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should allow items to be placed in rooms without ContainerTrait","status":"passed","title":"should allow items to be placed in rooms without ContainerTrait","duration":3.2440169999999853,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should respect room capacity limits","status":"passed","title":"should respect room capacity limits","duration":0.31203700000060053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should handle nested containers in rooms","status":"passed","title":"should handle nested containers in rooms","duration":0.828574999999546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should allow actors to carry items without ContainerTrait","status":"passed","title":"should allow actors to carry items without ContainerTrait","duration":1.090050999999221,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should handle actor inventory limits","status":"passed","title":"should handle actor inventory limits","duration":0.5838450000001103,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should prevent actors from being placed inside other actors","status":"passed","title":"should prevent actors from being placed inside other actors","duration":0.7403299999996307,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Container type detection"],"fullName":"Room and Actor as Containers Container type detection should correctly identify all container-capable entities","status":"passed","title":"should correctly identify all container-capable entities","duration":0.29851400000006834,"failureMessages":[],"meta":{}}],"startTime":1755159961300,"endTime":1755159961307.2986,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-actor-containers.test.ts"},{"assertionResults":[{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should connect rooms with simple exits","status":"passed","title":"should connect rooms with simple exits","duration":2.1198519999998098,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should find paths between connected rooms","status":"passed","title":"should find paths between connected rooms","duration":1.156380999999783,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should navigate through open doors","status":"passed","title":"should navigate through open doors","duration":1.1702640000003157,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle closed doors","status":"passed","title":"should handle closed doors","duration":0.41985900000054244,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle locked doors","status":"passed","title":"should handle locked doors","duration":0.7867499999993015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should find alternative paths when doors are blocked","status":"passed","title":"should find alternative paths when doors are blocked","duration":0.8074069999993299,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle buildings with multiple floors","status":"passed","title":"should handle buildings with multiple floors","duration":0.330841999999393,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle one-way passages","status":"passed","title":"should handle one-way passages","duration":0.20661399999971763,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should track first visits to rooms","status":"passed","title":"should track first visits to rooms","duration":0.3392439999997805,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should handle dark rooms and navigation","status":"passed","title":"should handle dark rooms and navigation","duration":0.551115999999638,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle exit entities","status":"passed","title":"should handle exit entities","duration":0.20661900000050082,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle entry points","status":"passed","title":"should handle entry points","duration":0.15204499999981635,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle large mazes efficiently","status":"passed","title":"should handle large mazes efficiently","duration":0.7663030000003346,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle disconnected room groups","status":"passed","title":"should handle disconnected room groups","duration":0.16940799999974843,"failureMessages":[],"meta":{}}],"startTime":1755159939269,"endTime":1755159939280.1694,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-navigation.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not see contents of locked closed container","status":"passed","title":"should not see contents of locked closed container","duration":3.5648920000003272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not open locked container","status":"passed","title":"should not open locked container","duration":0.6747840000007272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should see contents after unlocking and opening","status":"passed","title":"should see contents after unlocking and opening","duration":0.6998330000005808,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should handle nested locked containers","status":"passed","title":"should handle nested locked containers","duration":0.7163939999991271,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should see items on supporter but not in closed container","status":"passed","title":"should see items on supporter but not in closed container","duration":0.7010110000010172,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should handle complex containment hierarchy","status":"passed","title":"should handle complex containment hierarchy","duration":0.3993499999996857,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should include all scenery regardless of visibility","status":"passed","title":"should include all scenery regardless of visibility","duration":0.6322450000006938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should handle wearing items with containers","status":"passed","title":"should handle wearing items with containers","duration":2.107716000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should exclude worn items when specified","status":"passed","title":"should exclude worn items when specified","duration":0.8097079999988637,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should track complex worn item hierarchies","status":"passed","title":"should track complex worn item hierarchies","duration":0.6652200000007724,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should navigate through doors between rooms","status":"passed","title":"should navigate through doors between rooms","duration":1.1244920000008278,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should see in lit rooms but not dark rooms","status":"passed","title":"should see in lit rooms but not dark rooms","duration":0.6699439999993047,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should handle door state synchronization","status":"passed","title":"should handle door state synchronization","duration":0.22556000000076892,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should track edible items in containers","status":"passed","title":"should track edible items in containers","duration":0.4408419999999751,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should handle consuming items from container","status":"passed","title":"should handle consuming items from container","duration":0.2657610000005661,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle readable items in locked containers on supporters","status":"passed","title":"should handle readable items in locked containers on supporters","duration":0.6333990000002814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle switchable light sources affecting room visibility","status":"passed","title":"should handle switchable light sources affecting room visibility","duration":0.31112000000030093,"failureMessages":[],"meta":{}}],"startTime":1755159932360,"endTime":1755159932375.311,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should see through open containers","status":"passed","title":"should see through open containers","duration":3.873168000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should not see into closed containers","status":"passed","title":"should not see into closed containers","duration":0.9246789999997418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should handle mixed open/closed container chains","status":"passed","title":"should handle mixed open/closed container chains","duration":0.9775589999990189,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see items on supporters","status":"passed","title":"should see items on supporters","duration":0.9191439999995055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see through containers on supporters","status":"passed","title":"should see through containers on supporters","duration":0.6764419999999518,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should not see in dark rooms","status":"passed","title":"should not see in dark rooms","duration":0.3804970000001049,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with carried light source","status":"passed","title":"should see with carried light source","duration":0.3863770000007207,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with light source in room","status":"passed","title":"should see with light source in room","duration":0.17867499999920256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should handle light in containers","status":"passed","title":"should handle light in containers","duration":0.5970049999996263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see items carried by actors","status":"passed","title":"should see items carried by actors","duration":0.5056879999992816,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see worn items on actors","status":"passed","title":"should see worn items on actors","duration":0.38168600000062725,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should not see items in closed containers carried by actors","status":"passed","title":"should not see items in closed containers carried by actors","duration":0.40324800000053074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see visible scenery","status":"passed","title":"should see visible scenery","duration":0.5030459999998129,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should not see invisible scenery","status":"passed","title":"should not see invisible scenery","duration":1.5141449999991892,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see contents of visible scenery containers","status":"passed","title":"should see contents of visible scenery containers","duration":0.3569100000004255,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle deep visibility chains","status":"passed","title":"should handle deep visibility chains","duration":0.40618499999982305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle multiple visibility blockers","status":"passed","title":"should handle multiple visibility blockers","duration":1.2220940000006522,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle visibility with movement","status":"passed","title":"should handle visibility with movement","duration":0.46089500000016415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should get all items in scope","status":"passed","title":"should get all items in scope","duration":1.309733000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should handle scope in dark rooms with light","status":"passed","title":"should handle scope in dark rooms with light","duration":0.8312440000008792,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should handle large visibility calculations efficiently","status":"passed","title":"should handle large visibility calculations efficiently","duration":2.549740999998903,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should cache visibility calculations","status":"passed","title":"should cache visibility calculations","duration":0.9922579999984009,"failureMessages":[],"meta":{}}],"startTime":1755159932136,"endTime":1755159932157.9922,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/visibility-chains.test.ts"},{"assertionResults":[{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should wear and remove simple items","status":"passed","title":"should wear and remove simple items","duration":2.2143970000006448,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should prevent wearing already worn items","status":"passed","title":"should prevent wearing already worn items","duration":0.36772800000017014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should track multiple worn items","status":"passed","title":"should track multiple worn items","duration":0.6431680000005144,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should create functional clothing with pockets","status":"passed","title":"should create functional clothing with pockets","duration":2.8233469999995577,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should maintain pocket contents when wearing clothing","status":"passed","title":"should maintain pocket contents when wearing clothing","duration":0.9166409999997995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","status":"skipped","title":"should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should support multiple layers of clothing","status":"passed","title":"should support multiple layers of clothing","duration":0.34501600000021426,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should handle mixed clothing and accessories","status":"passed","title":"should handle mixed clothing and accessories","duration":0.4861140000002706,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle nested containers in pockets","status":"passed","title":"should handle nested containers in pockets","duration":0.4631469999994806,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle pocket access when clothing is in container","status":"passed","title":"should handle pocket access when clothing is in container","duration":0.7742870000001858,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle clothing that blocks slots","status":"passed","title":"should handle clothing that blocks slots","duration":0.29509500000040134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.13049800000044343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should track clothing condition","status":"passed","title":"should track clothing condition","duration":0.11370499999975436,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should handle actors with many worn items efficiently","status":"passed","title":"should handle actors with many worn items efficiently","duration":0.2511580000000322,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should efficiently filter worn vs carried items","status":"passed","title":"should efficiently filter worn vs carried items","duration":0.8433969999996407,"failureMessages":[],"meta":{}}],"startTime":1755159937704,"endTime":1755159937715.8435,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/wearable-clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share entities between WorldModel and AuthorModel","status":"passed","title":"should share entities between WorldModel and AuthorModel","duration":4.177300000001196,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share spatial relationships between models","status":"passed","title":"should share spatial relationships between models","duration":1.8455099999991944,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share state between models","status":"passed","title":"should share state between models","duration":0.3256299999993644,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":0.7498090000008233,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.3688510000010865,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should bypass container trait requirement","status":"passed","title":"should bypass container trait requirement","duration":0.3198929999998654,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should not check for loops","status":"passed","title":"should not check for loops","duration":0.22390900000027614,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.6715640000002168,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.8303460000006453,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should use author: prefix for events","status":"passed","title":"should use author: prefix for events","duration":0.3774990000001708,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.8770169999988866,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":0.8107089999994059,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers from specs","status":"passed","title":"should fill containers from specs","duration":0.7720810000009806,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup container properties","status":"passed","title":"should setup container properties","duration":0.20832599999994272,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":0.20587000000159605,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should remove entities completely","status":"passed","title":"should remove entities completely","duration":0.4512269999995624,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.1578190000000177,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player without validation","status":"passed","title":"should set player without validation","duration":0.1263840000010532,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear all world data","status":"passed","title":"should clear all world data","duration":0.21016400000007707,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Real-World Usage Patterns"],"fullName":"AuthorModel Real-World Usage Patterns should handle complex world setup","status":"passed","title":"should handle complex world setup","duration":0.4665920000006736,"failureMessages":[],"meta":{}}],"startTime":1755159931249,"endTime":1755159931264.4666,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should store entity type in attributes","status":"passed","title":"should store entity type in attributes","duration":1.9733870000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should handle name property correctly","status":"passed","title":"should handle name property correctly","duration":0.4079840000003969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should serialize with version number","status":"passed","title":"should serialize with version number","duration":0.3162460000003193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should deserialize both old and new formats","status":"passed","title":"should deserialize both old and new formats","duration":0.4161739999999554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in room exits","status":"passed","title":"should use IDs in room exits","duration":0.5673390000001746,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in door connections","status":"passed","title":"should use IDs in door connections","duration":0.3646150000004127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in exit traits","status":"passed","title":"should use IDs in exit traits","duration":0.3340570000000298,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","WorldModel persistence with entities"],"fullName":"Entity System with ID Refactor WorldModel persistence with entities should save and restore entities with proper IDs","status":"passed","title":"should save and restore entities with proper IDs","duration":0.7893059999996694,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Entity relationships with IDs"],"fullName":"Entity System with ID Refactor Entity relationships with IDs should use IDs for all entity relationships","status":"passed","title":"should use IDs for all entity relationships","duration":1.8423250000005282,"failureMessages":[],"meta":{}}],"startTime":1755159935516,"endTime":1755159935522.8423,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entity-system-updates.test.ts"},{"assertionResults":[{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should generate sequential IDs with type prefixes","status":"passed","title":"should generate sequential IDs with type prefixes","duration":1.663448999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should throw error for unknown types","status":"passed","title":"should throw error for unknown types","duration":0.6740939999999682,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should use object type as default","status":"passed","title":"should use object type as default","duration":0.1794789999994464,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should handle base36 conversion correctly","status":"passed","title":"should handle base36 conversion correctly","duration":0.3527700000004188,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should store entity name in attributes","status":"passed","title":"should store entity name in attributes","duration":0.39264900000034686,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should allow duplicate names","status":"passed","title":"should allow duplicate names","duration":0.2422150000002148,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should remove entities by ID","status":"passed","title":"should remove entities by ID","duration":0.28737199999977747,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","persistence"],"fullName":"ID Generation System persistence should save and restore ID system state","status":"passed","title":"should save and restore ID system state","duration":0.7434509999993679,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity attributes"],"fullName":"ID Generation System entity attributes should set displayName in entity attributes","status":"passed","title":"should set displayName in entity attributes","duration":0.2552269999996497,"failureMessages":[],"meta":{}}],"startTime":1755159965871,"endTime":1755159965876.2551,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/id-generation.test.ts"},{"assertionResults":[{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support language-agnostic token representation","status":"passed","title":"should support language-agnostic token representation","duration":3.5453910000005635,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support multiple parts of speech for a token","status":"passed","title":"should support multiple parts of speech for a token","duration":1.105348000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should handle unknown words","status":"passed","title":"should handle unknown words","duration":0.24090400000022782,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent simple verbs","status":"passed","title":"should represent simple verbs","duration":0.5615600000000995,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent phrasal verbs with particles","status":"passed","title":"should represent phrasal verbs with particles","duration":0.2651850000002014,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent multi-word verbs","status":"passed","title":"should represent multi-word verbs","duration":0.20265699999981734,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent simple nouns","status":"passed","title":"should represent simple nouns","duration":0.40529199999946286,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent nouns with articles","status":"passed","title":"should represent nouns with articles","duration":0.1356980000000476,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent complex noun phrases","status":"passed","title":"should represent complex noun phrases","duration":0.3010309999999663,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should support multiple candidates","status":"passed","title":"should support multiple candidates","duration":0.2487989999999627,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should represent preposition phrases","status":"passed","title":"should represent preposition phrases","duration":0.09498900000016874,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should support multi-word prepositions","status":"passed","title":"should support multi-word prepositions","duration":0.08473200000025827,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a simple command","status":"passed","title":"should represent a simple command","duration":0.2990669999999227,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a transitive command","status":"passed","title":"should represent a transitive command","duration":0.14283599999998842,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a ditransitive command","status":"passed","title":"should represent a ditransitive command","duration":0.11895099999946979,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should support extras field for additional data","status":"passed","title":"should support extras field for additional data","duration":0.09346700000060082,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent unknown command errors","status":"passed","title":"should represent unknown command errors","duration":0.09163200000057259,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent syntax errors with position","status":"passed","title":"should represent syntax errors with position","duration":0.0560669999995298,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent ambiguous input errors","status":"passed","title":"should represent ambiguous input errors","duration":0.08828700000049139,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support legacy ParsedCommandV1 structure","status":"passed","title":"should support legacy ParsedCommandV1 structure","duration":0.1038140000000567,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support ParsedObjectReference","status":"passed","title":"should support ParsedObjectReference","duration":1.624931999999717,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should still have PartOfSpeech enum during migration","status":"passed","title":"should still have PartOfSpeech enum during migration","duration":0.3937229999992269,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should not have language-specific parts of speech","status":"passed","title":"should not have language-specific parts of speech","duration":0.4747860000006767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design ParsedCommand should not have language-specific fields at top level","status":"passed","title":"ParsedCommand should not have language-specific fields at top level","duration":0.7481399999996938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Token structure should support language data extension","status":"passed","title":"Token structure should support language data extension","duration":0.12787900000057562,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Pattern names should be opaque strings","status":"passed","title":"Pattern names should be opaque strings","duration":0.21355900000071415,"failureMessages":[],"meta":{}}],"startTime":1755159927282,"endTime":1755159927294.2136,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/parsed-command.test.ts"},{"assertionResults":[{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see objects in dark room without light","status":"passed","title":"should not see objects in dark room without light","duration":4.499676999999792,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see objects when carrying lit light source","status":"passed","title":"should see objects when carrying lit light source","duration":1.10402299999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see when light source is off","status":"passed","title":"should not see when light source is off","duration":3.3118029999995997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when light source is turned on","status":"passed","title":"should see when light source is turned on","duration":0.6920839999993404,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when room has light source","status":"passed","title":"should see when room has light source","duration":1.0935609999996814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should work normally in lit rooms","status":"passed","title":"should work normally in lit rooms","duration":1.9702980000001844,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","status":"skipped","title":"should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should handle underground darkness differently","status":"passed","title":"should handle underground darkness differently","duration":1.0483560000002399,"failureMessages":[],"meta":{}}],"startTime":1755159954132,"endTime":1755159954146.0483,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/darkness-light.test.ts"},{"assertionResults":[{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","status":"skipped","title":"should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should reveal concealed objects with detect magic","status":"passed","title":"should reveal concealed objects with detect magic","duration":4.3267079999995985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","status":"skipped","title":"should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should have remote viewing through crystal orb","status":"passed","title":"should have remote viewing through crystal orb","duration":0.7854910000005475,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should limit magical sight by power level","status":"passed","title":"should limit magical sight by power level","duration":2.5362259999992602,"failureMessages":[],"meta":{}}],"startTime":1755159953228,"endTime":1755159953235.5361,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/magic-sight.test.ts"},{"assertionResults":[{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear sounds from adjacent rooms","status":"passed","title":"should hear sounds from adjacent rooms","duration":4.386230000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear loud sounds from further away","status":"passed","title":"should hear loud sounds from further away","duration":0.8649770000001809,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should not hear sounds through solid barriers","status":"passed","title":"should not hear sounds through solid barriers","duration":2.0080120000002353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should support directional sound","status":"passed","title":"should support directional sound","duration":0.799590999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should combine multiple sound rules","status":"passed","title":"should combine multiple sound rules","duration":2.621752000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should filter sounds by action type","status":"passed","title":"should filter sounds by action type","duration":0.7963529999997263,"failureMessages":[],"meta":{}}],"startTime":1755159946431,"endTime":1755159946442.7964,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/sound-traveling.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden entities when window is closed","status":"passed","title":"should not see garden entities when window is closed","duration":3.4362849999997707,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":1.0327519999991637,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":0.6813529999999446,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.5281429999995453,"failureMessages":[],"meta":{}}],"startTime":1755159941758,"endTime":1755159941764.528,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility-fixed.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":6.608313000000635,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.7610219999996843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should respect rule priorities when rules conflict","status":"passed","title":"should respect rule priorities when rules conflict","duration":1.1951380000000427,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support scope rule removal","status":"passed","title":"should support scope rule removal","duration":1.0518400000000838,"failureMessages":[],"meta":{}}],"startTime":1755159944268,"endTime":1755159944278.0518,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should validate entity has required traits","status":"passed","title":"should validate entity has required traits","duration":1.656304000000091,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should get list of missing traits","status":"passed","title":"should get list of missing traits","duration":1.0352069999999003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should work with behaviors having no requirements","status":"passed","title":"should work with behaviors having no requirements","duration":0.17745400000057998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.6703790000001391,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should throw error when required trait is missing","status":"passed","title":"should throw error when required trait is missing","duration":0.2224850000002334,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.2747410000001764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return undefined when trait is missing","status":"passed","title":"should return undefined when trait is missing","duration":0.16741299999921466,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors that check state","status":"passed","title":"should support behaviors that check state","duration":0.14519900000050256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors with no requirements","status":"passed","title":"should support behaviors with no requirements","duration":0.20533200000045326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","inheritance"],"fullName":"Behavior inheritance should support behavior inheritance","status":"passed","title":"should support behavior inheritance","duration":0.8837509999993927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","error messages"],"fullName":"Behavior error messages should provide clear error messages for missing traits","status":"passed","title":"should provide clear error messages for missing traits","duration":0.2702020000006087,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","static nature"],"fullName":"Behavior static nature should not require instantiation","status":"passed","title":"should not require instantiation","duration":0.23099499999989348,"failureMessages":[],"meta":{}}],"startTime":1755159939111,"endTime":1755159939118.231,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/behaviors/behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should add and retrieve entities","status":"passed","title":"should add and retrieve entities","duration":2.425532999999632,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should return undefined for non-existent entities","status":"passed","title":"should return undefined for non-existent entities","duration":0.4111979999997857,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should remove entities and clear traits","status":"passed","title":"should remove entities and clear traits","duration":1.5151370000003226,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should clear all entities","status":"passed","title":"should clear all entities","duration":0.7108140000000276,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get all entities","status":"passed","title":"should get all entities","duration":1.9656260000001566,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get entities by type","status":"passed","title":"should get entities by type","duration":0.7781400000003487,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with specific trait","status":"passed","title":"should find entities with specific trait","duration":2.8651520000003075,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with all specified traits","status":"passed","title":"should find entities with all specified traits","duration":1.0377040000003035,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with any specified traits","status":"passed","title":"should find entities with any specified traits","duration":1.5738769999998112,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","iteration"],"fullName":"EntityStore iteration should be iterable","status":"passed","title":"should be iterable","duration":0.7561969999997018,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":2.2361919999993916,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":1.0224029999999402,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","size property"],"fullName":"EntityStore size property should reflect number of entities","status":"passed","title":"should reflect number of entities","duration":0.5541349999994054,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle removing non-existent entity","status":"passed","title":"should handle removing non-existent entity","duration":1.5517909999998665,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle duplicate adds gracefully","status":"passed","title":"should handle duplicate adds gracefully","duration":0.23424900000009075,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should work with empty store","status":"passed","title":"should work with empty store","duration":0.6319549999998344,"failureMessages":[],"meta":{}}],"startTime":1755159945721,"endTime":1755159945742.6318,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/entity-store.test.ts"},{"assertionResults":[{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should create entity with id and type","status":"passed","title":"should create entity with id and type","duration":1.7940669999998136,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should accept creation params","status":"passed","title":"should accept creation params","duration":0.3771679999999833,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should add trait","status":"passed","title":"should add trait","duration":0.2620699999997669,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should remove trait","status":"passed","title":"should remove trait","duration":0.290871000000152,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should replace existing trait of same type","status":"passed","title":"should replace existing trait of same type","duration":1.1671040000001085,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAll","status":"passed","title":"should check multiple traits with hasAll","duration":0.3322019999995973,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAny","status":"passed","title":"should check multiple traits with hasAny","duration":0.14081100000021252,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all traits","status":"passed","title":"should get all traits","duration":0.7834570000004533,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all trait types","status":"passed","title":"should get all trait types","duration":0.5098090000001321,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should clear all traits","status":"passed","title":"should clear all traits","duration":0.22245099999963713,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should support trait aliases (getTrait, hasTrait)","status":"passed","title":"should support trait aliases (getTrait, hasTrait)","duration":0.14522499999930005,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify rooms","status":"passed","title":"should identify rooms","duration":0.1492950000001656,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify containers","status":"passed","title":"should identify containers","duration":0.12691499999982625,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify takeable items","status":"passed","title":"should identify takeable items","duration":0.09025999999994383,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get name from displayName attribute first","status":"passed","title":"should get name from displayName attribute first","duration":0.14376899999933812,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get weight from attributes","status":"passed","title":"should get weight from attributes","duration":0.07319600000028004,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","cloning"],"fullName":"IFEntity cloning should create deep copy with new ID","status":"passed","title":"should create deep copy with new ID","duration":0.5044050000005882,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":2.1586870000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.5322839999998905,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect openable trait","status":"passed","title":"should detect openable trait","duration":0.14837099999931525,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect lockable trait","status":"passed","title":"should detect lockable trait","duration":0.102762000000439,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","light source properties"],"fullName":"IFEntity light source properties should detect light provision","status":"passed","title":"should detect light provision","duration":0.1054679999997461,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","switchable properties"],"fullName":"IFEntity switchable properties should detect switchable state","status":"passed","title":"should detect switchable state","duration":0.2886479999997391,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","actor properties"],"fullName":"IFEntity actor properties should detect actors and players","status":"passed","title":"should detect actors and players","duration":0.28702199999952427,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","error handling"],"fullName":"IFEntity error handling should throw error for invalid traits","status":"passed","title":"should throw error for invalid traits","duration":0.5161120000002484,"failureMessages":[],"meta":{}}],"startTime":1755159927327,"endTime":1755159927338.516,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/if-entity.test.ts"},{"assertionResults":[{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.4832980000001044,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.5417699999998149,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should merge pronouns when partially provided","status":"passed","title":"should merge pronouns when partially provided","duration":0.1652990000002319,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should handle partial inventory limits","status":"passed","title":"should handle partial inventory limits","duration":0.13068199999997887,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should set pronouns using setPronouns method","status":"passed","title":"should set pronouns using setPronouns method","duration":0.2085670000005848,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should partially update pronouns","status":"passed","title":"should partially update pronouns","duration":0.11966299999949115,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should set inventory limits using setInventoryLimit method","status":"passed","title":"should set inventory limits using setInventoryLimit method","duration":0.09914900000057969,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should partially update inventory limits","status":"passed","title":"should partially update inventory limits","duration":0.07819999999992433,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should create inventory limit if not exists","status":"passed","title":"should create inventory limit if not exists","duration":0.20760900000004767,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should make actor a player using makePlayer method","status":"passed","title":"should make actor a player using makePlayer method","duration":0.2139710000001287,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should ensure player is always playable","status":"passed","title":"should ensure player is always playable","duration":0.07728899999983696,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should set custom properties using setCustomProperty","status":"passed","title":"should set custom properties using setCustomProperty","duration":0.0811649999996007,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should get custom properties using getCustomProperty","status":"passed","title":"should get custom properties using getCustomProperty","duration":0.09160700000029465,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should create customProperties object if not exists","status":"passed","title":"should create customProperties object if not exists","duration":0.0654819999999745,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should overwrite existing custom properties","status":"passed","title":"should overwrite existing custom properties","duration":0.04652500000065629,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should handle various data types in custom properties","status":"passed","title":"should handle various data types in custom properties","duration":0.14364499999919644,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should handle state changes","status":"passed","title":"should handle state changes","duration":0.2132000000001426,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should maintain state through other property changes","status":"passed","title":"should maintain state through other property changes","duration":0.11205700000027718,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4147240000002057,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should work with container trait for inventory","status":"passed","title":"should work with container trait for inventory","duration":0.16618800000014744,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create NPCs with custom properties","status":"passed","title":"should create NPCs with custom properties","duration":0.1731129999998302,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create player with inventory limits","status":"passed","title":"should create player with inventory limits","duration":0.2071699999996781,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.11885799999981828,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08425500000066677,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1281779999999344,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle pronoun edge cases","status":"passed","title":"should handle pronoun edge cases","duration":0.23854000000028464,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should preserve existing data during construction","status":"passed","title":"should preserve existing data during construction","duration":0.16066200000022945,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should handle multiple actors in a world","status":"passed","title":"should handle multiple actors in a world","duration":0.15525799999977608,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should support actor transformation","status":"passed","title":"should support actor transformation","duration":0.11540899999999965,"failureMessages":[],"meta":{}}],"startTime":1755159959292,"endTime":1755159959301.1606,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/actor.test.ts"},{"assertionResults":[{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.086772999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.47929300000032526,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should handle all attachment types","status":"passed","title":"should handle all attachment types","duration":0.26246199999968667,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track what object is attached to","status":"passed","title":"should track what object is attached to","duration":0.21711300000060874,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle detachable attachments","status":"passed","title":"should handle detachable attachments","duration":0.2489449999993667,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle permanent attachments","status":"passed","title":"should handle permanent attachments","duration":0.186678000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track loose state","status":"passed","title":"should track loose state","duration":0.16524000000026717,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.6398600000002261,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should handle various attached objects","status":"passed","title":"should handle various attached objects","duration":0.3394560000006095,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle object breaking on detach","status":"passed","title":"should handle object breaking on detach","duration":0.17383599999993748,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle attachment point breaking","status":"passed","title":"should handle attachment point breaking","duration":0.09236300000065967,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle clean detachment","status":"passed","title":"should handle clean detachment","duration":0.08670699999947828,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should store detach sound","status":"passed","title":"should store detach sound","duration":0.07415799999944284,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should have appropriate sounds for attachment types","status":"passed","title":"should have appropriate sounds for attachment types","duration":0.18448700000044482,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.20872699999927136,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.2648460000000341,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1544240000002901,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle very strong attachment","status":"passed","title":"should handle very strong attachment","duration":0.1782809999995152,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle attachment without target","status":"passed","title":"should handle attachment without target","duration":0.126669999999649,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle partial detach effects","status":"passed","title":"should handle partial detach effects","duration":0.14111599999978353,"failureMessages":[],"meta":{}}],"startTime":1755159962471,"endTime":1755159962480.1782,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/attached.test.ts"},{"assertionResults":[{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.2864120000003822,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6270849999991697,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should handle all ring patterns","status":"passed","title":"should handle all ring patterns","duration":0.35810700000001816,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should track bell association","status":"passed","title":"should track bell association","duration":0.7058520000000499,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle broken state","status":"passed","title":"should handle broken state","duration":0.7201570000006541,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should define audible distance","status":"passed","title":"should define audible distance","duration":0.5243050000008225,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle ring count variations","status":"passed","title":"should handle ring count variations","duration":0.171781999999439,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should work with pullable and cord traits","status":"passed","title":"should work with pullable and cord traits","duration":0.3800339999997959,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should handle multiple bell pulls","status":"passed","title":"should handle multiple bell pulls","duration":0.2844089999998687,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should support different bell sounds","status":"passed","title":"should support different bell sounds","duration":0.19414600000072824,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should handle custom ring patterns","status":"passed","title":"should handle custom ring patterns","duration":0.09567499999957363,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should handle broken state","status":"passed","title":"should handle broken state","duration":0.07276100000035512,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should track previously working bell","status":"passed","title":"should track previously working bell","duration":0.07770800000071176,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.15800399999989168,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.16747399999985646,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.16275399999994988,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle silent bell (audibleDistance 0)","status":"passed","title":"should handle silent bell (audibleDistance 0)","duration":0.06563600000026781,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle very loud bell","status":"passed","title":"should handle very loud bell","duration":0.06234799999947427,"failureMessages":[],"meta":{}}],"startTime":1755159958625,"endTime":1755159958634.1675,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/bell-pull.test.ts"},{"assertionResults":[{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.5560430000004999,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6507259999998496,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should handle all break methods","status":"passed","title":"should handle all break methods","duration":0.15521499999977095,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track hits taken","status":"passed","title":"should track hits taken","duration":0.22983099999964907,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track partial breaking","status":"passed","title":"should track partial breaking","duration":0.2432619999999588,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle tool requirements","status":"passed","title":"should handle tool requirements","duration":0.13932500000009895,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.1111060000002908,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.33189799999945535,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should work with multiple breakable objects","status":"passed","title":"should work with multiple breakable objects","duration":0.34722899999997026,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle breaking into pieces","status":"passed","title":"should handle breaking into pieces","duration":0.9375529999997525,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle revealing contents","status":"passed","title":"should handle revealing contents","duration":0.10621199999968667,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle no break products","status":"passed","title":"should handle no break products","duration":0.16966799999954674,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.25300999999944906,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.14175299999988056,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12104499999986729,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.20607599999948434,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.13839999999981956,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a breakable wooden door","status":"passed","title":"should create a breakable wooden door","duration":0.1796649999996589,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a cuttable rope","status":"passed","title":"should create a cuttable rope","duration":0.1415049999995972,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a meltable ice barrier","status":"passed","title":"should create a meltable ice barrier","duration":0.12288300000000163,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a container that reveals contents","status":"passed","title":"should create a container that reveals contents","duration":0.08833800000047631,"failureMessages":[],"meta":{}}],"startTime":1755159939087,"endTime":1755159939094.1797,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/breakable.test.ts"},{"assertionResults":[{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.6865680000000793,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6385129999998753,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button sizes","status":"passed","title":"should handle all button sizes","duration":0.27681200000006356,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button shapes","status":"passed","title":"should handle all button shapes","duration":0.25206100000013976,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.6521240000001853,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.4744940000000497,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle momentary button","status":"passed","title":"should handle momentary button","duration":0.2539069999993444,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle latching button","status":"passed","title":"should handle latching button","duration":0.1424349999997503,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should store button appearance","status":"passed","title":"should store button appearance","duration":0.3797279999998864,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle labeled buttons","status":"passed","title":"should handle labeled buttons","duration":0.27236200000061217,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle various button materials","status":"passed","title":"should handle various button materials","duration":0.22764099999949394,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should track pressed state","status":"passed","title":"should track pressed state","duration":0.12055000000054861,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should initialize with pressed state","status":"passed","title":"should initialize with pressed state","duration":0.10648999999921216,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.17305500000020402,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.17690399999992223,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08998599999995349,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle complex button configurations","status":"passed","title":"should handle complex button configurations","duration":0.16047600000001694,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create emergency stop button","status":"passed","title":"should create emergency stop button","duration":0.1856820000002699,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create elevator call button","status":"passed","title":"should create elevator call button","duration":0.10673200000019278,"failureMessages":[],"meta":{}}],"startTime":1755159959647,"endTime":1755159959655.1858,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/button.test.ts"},{"assertionResults":[{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.5540829999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.25233399999979156,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should have all wearable properties","status":"passed","title":"should have all wearable properties","duration":0.5952120000001742,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support various materials","status":"passed","title":"should support various materials","duration":0.19851399999970454,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support composite materials","status":"passed","title":"should support composite materials","duration":0.2004450000003999,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should track condition states","status":"passed","title":"should track condition states","duration":0.1823789999998553,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle condition degradation","status":"passed","title":"should handle condition degradation","duration":0.14153999999962252,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle non-damageable items","status":"passed","title":"should handle non-damageable items","duration":0.11854399999992893,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support various styles","status":"passed","title":"should support various styles","duration":0.3918039999998655,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support custom style descriptions","status":"passed","title":"should support custom style descriptions","duration":0.1764389999998457,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should create clothing that can contain pockets","status":"passed","title":"should create clothing that can contain pockets","duration":0.46066499999960797,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should attach pockets to clothing","status":"passed","title":"should attach pockets to clothing","duration":1.6896609999994325,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should maintain pocket contents when clothing is worn","status":"passed","title":"should maintain pocket contents when clothing is worn","duration":0.6031510000002527,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support standard clothing slots","status":"passed","title":"should support standard clothing slots","duration":0.38321799999994255,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support layered clothing","status":"passed","title":"should support layered clothing","duration":0.16992600000048697,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle clothing that blocks other slots","status":"passed","title":"should handle clothing that blocks other slots","duration":0.2709580000000642,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.993083000000297,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle custom wear/remove messages","status":"passed","title":"should handle custom wear/remove messages","duration":0.12067299999944225,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should create various clothing items","status":"passed","title":"should create various clothing items","duration":0.38426499999968655,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should distinguish between clothing and simple wearables","status":"passed","title":"should distinguish between clothing and simple wearables","duration":0.2645969999994122,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle multi-pocket utility clothing","status":"passed","title":"should handle multi-pocket utility clothing","duration":0.6003460000001724,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle outfit sets with matching properties","status":"passed","title":"should handle outfit sets with matching properties","duration":0.2020619999993869,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle damaged clothing states","status":"passed","title":"should handle damaged clothing states","duration":0.12396800000078656,"failureMessages":[],"meta":{}}],"startTime":1755159934940,"endTime":1755159934951.2021,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should have container properties","status":"passed","title":"should have container properties","duration":1.4216679999999542,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.15739200000007258,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.16761399999995774,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should have container properties","status":"passed","title":"should have container properties","duration":0.6295019999997749,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.16135699999995268,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.13211900000078458,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should update capacity through setInventoryLimit","status":"passed","title":"should update capacity through setInventoryLimit","duration":0.1459549999999581,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from room","status":"passed","title":"should get container trait from room","duration":0.18378599999959988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from actor","status":"passed","title":"should get container trait from actor","duration":0.3442409999997835,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get explicit container trait first","status":"passed","title":"should get explicit container trait first","duration":0.3003760000001421,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should return undefined for non-container entities","status":"passed","title":"should return undefined for non-container entities","duration":0.6722620000000461,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow moving items into rooms without explicit ContainerTrait","status":"passed","title":"should allow moving items into rooms without explicit ContainerTrait","duration":0.670640999999705,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow actors to carry items without explicit ContainerTrait","status":"passed","title":"should allow actors to carry items without explicit ContainerTrait","duration":0.5421759999999267,"failureMessages":[],"meta":{}}],"startTime":1755159963062,"endTime":1755159963068.5422,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container-capability.test.ts"},{"assertionResults":[{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.792344000000412,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.066262999999708,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle weight limit","status":"passed","title":"should handle weight limit","duration":0.40763499999957276,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle volume limit","status":"passed","title":"should handle volume limit","duration":0.14444300000013754,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle item count limit","status":"passed","title":"should handle item count limit","duration":0.32510499999989406,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle multiple constraints","status":"passed","title":"should handle multiple constraints","duration":0.22418699999980163,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.3133990000005724,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should default to opaque","status":"passed","title":"should default to opaque","duration":0.25558400000045367,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should handle transparent containers","status":"passed","title":"should handle transparent containers","duration":2.327194000000418,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should default to not enterable","status":"passed","title":"should default to not enterable","duration":0.542662000000746,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should handle enterable containers","status":"passed","title":"should handle enterable containers","duration":0.37653599999975995,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.9406199999993987,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.807065999999395,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.42984100000012404,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle no type restrictions","status":"passed","title":"should handle no type restrictions","duration":0.1892680000000837,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3807939999996961,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should replace existing container trait","status":"passed","title":"should replace existing container trait","duration":0.24186599999939062,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle transparent container setup","status":"passed","title":"should handle transparent container setup","duration":1.20341499999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle secure container setup","status":"passed","title":"should handle secure container setup","duration":0.2844470000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle nested container setup","status":"passed","title":"should handle nested container setup","duration":0.15937599999961094,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty capacity object","status":"passed","title":"should handle empty capacity object","duration":0.35543500000039785,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty arrays for type restrictions","status":"passed","title":"should handle empty arrays for type restrictions","duration":0.27079699999922013,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle zero capacity values","status":"passed","title":"should handle zero capacity values","duration":0.2143180000002758,"failureMessages":[],"meta":{}}],"startTime":1755159939170,"endTime":1755159939185.2144,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container.test.ts"},{"assertionResults":[{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.5404829999997673,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.34305700000004435,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should handle all cord types","status":"passed","title":"should handle all cord types","duration":0.3402509999996255,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should track tension state","status":"passed","title":"should track tension state","duration":0.28703499999937776,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle length properties","status":"passed","title":"should handle length properties","duration":0.2860190000001239,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle breakable cords","status":"passed","title":"should handle breakable cords","duration":0.1480119999996532,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle unbreakable cords","status":"passed","title":"should handle unbreakable cords","duration":0.17695300000013958,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.5744109999995999,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should handle different cord materials","status":"passed","title":"should handle different cord materials","duration":0.4681329999993977,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should store activation target","status":"passed","title":"should store activation target","duration":0.15452000000004773,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should handle cords without activation","status":"passed","title":"should handle cords without activation","duration":0.07979699999941658,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should store pull and break sounds","status":"passed","title":"should store pull and break sounds","duration":0.08138199999939388,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should handle cords without sounds","status":"passed","title":"should handle cords without sounds","duration":0.07310900000084075,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should have different sounds for different materials","status":"passed","title":"should have different sounds for different materials","duration":0.06801700000050914,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.08555799999976443,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11583199999950011,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0762139999997089,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle cord at max extension","status":"passed","title":"should handle cord at max extension","duration":0.07482599999912054,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle very weak cord","status":"passed","title":"should handle very weak cord","duration":0.055314000000180386,"failureMessages":[],"meta":{}}],"startTime":1755159959213,"endTime":1755159959219.0762,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/cord.test.ts"},{"assertionResults":[{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.7172239999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2504199999993943,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should handle all display types","status":"passed","title":"should handle all display types","duration":0.3226830000003247,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5110130000002755,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should work with TurnableTrait","status":"passed","title":"should work with TurnableTrait","duration":0.5700850000002902,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle numbered dial with tick marks","status":"passed","title":"should handle numbered dial with tick marks","duration":0.4871979999998075,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle labeled dial","status":"passed","title":"should handle labeled dial","duration":2.022265000000516,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle continuous vs discrete dial","status":"passed","title":"should handle continuous vs discrete dial","duration":0.19301499999983207,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle dial with units","status":"passed","title":"should handle dial with units","duration":0.3198600000005172,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.18442599999980303,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1286389999995663,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08407999999963067,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a radio tuner dial","status":"passed","title":"should create a radio tuner dial","duration":0.1738709999999628,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a washing machine dial","status":"passed","title":"should create a washing machine dial","duration":0.27855300000010175,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a combination lock dial","status":"passed","title":"should create a combination lock dial","duration":0.1714400000000751,"failureMessages":[],"meta":{}}],"startTime":1755159952867,"endTime":1755159952878.1714,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/dial.test.ts"},{"assertionResults":[{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should create trait with required room connections","status":"passed","title":"should create trait with required room connections","duration":2.168612999999823,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should throw error without room connections","status":"passed","title":"should throw error without room connections","duration":1.1856259999985923,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should handle unidirectional doors","status":"passed","title":"should handle unidirectional doors","duration":0.15885399999933725,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should maintain bidirectional as default","status":"passed","title":"should maintain bidirectional as default","duration":0.09856899999977031,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3590650000005553,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.4848619999993389,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create door with openable trait","status":"passed","title":"should create door with openable trait","duration":0.14035499999954482,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create lockable door","status":"passed","title":"should create lockable door","duration":0.18862699999954202,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should connect two specific rooms","status":"passed","title":"should connect two specific rooms","duration":0.2661889999999403,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should handle room order consistently","status":"passed","title":"should handle room order consistently","duration":0.1842159999996511,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create complete room-door-room setup","status":"passed","title":"should create complete room-door-room setup","duration":0.8925629999994271,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create locked door between rooms","status":"passed","title":"should create locked door between rooms","duration":0.31564499999876716,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should handle self-connecting door","status":"passed","title":"should handle self-connecting door","duration":0.1488099999987753,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should preserve all properties during assignment","status":"passed","title":"should preserve all properties during assignment","duration":0.16187100000024657,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.11587300000064715,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support standard room door","status":"passed","title":"should support standard room door","duration":0.13990499999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support locked exterior door","status":"passed","title":"should support locked exterior door","duration":0.15519200000017008,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support archway (always open)","status":"passed","title":"should support archway (always open)","duration":0.13004800000089745,"failureMessages":[],"meta":{}}],"startTime":1755159950298,"endTime":1755159950306.1553,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/door.test.ts"},{"assertionResults":[{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.686110999999073,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4612199999992299,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.2332109999988461,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should allow zero nutrition value","status":"passed","title":"should allow zero nutrition value","duration":0.12222199999996519,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle solid food","status":"passed","title":"should handle solid food","duration":1.039333999999144,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle liquids","status":"passed","title":"should handle liquids","duration":0.2785490000005666,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should support various food types","status":"passed","title":"should support various food types","duration":0.2031779999997525,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle single serving items","status":"passed","title":"should handle single serving items","duration":0.19378900000083377,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle multi-serving items","status":"passed","title":"should handle multi-serving items","duration":0.3847699999987526,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should allow fractional servings","status":"passed","title":"should allow fractional servings","duration":0.21663900000021385,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should track serving consumption","status":"passed","title":"should track serving consumption","duration":0.19307599999956437,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should specify remains type","status":"passed","title":"should specify remains type","duration":0.2468779999999242,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should handle items with no remains","status":"passed","title":"should handle items with no remains","duration":0.09743299999900046,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should support various remain types","status":"passed","title":"should support various remain types","duration":0.15963800000099582,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with no effects","status":"passed","title":"should handle items with no effects","duration":0.12890100000004168,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with effects","status":"passed","title":"should handle items with effects","duration":0.1348180000004504,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should support various effect types","status":"passed","title":"should support various effect types","duration":0.1143289999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should allow effect without description","status":"passed","title":"should allow effect without description","duration":0.13110899999992398,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should support custom consume messages","status":"passed","title":"should support custom consume messages","duration":0.10919599999942875,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should handle no consume message","status":"passed","title":"should handle no consume message","duration":0.05756400000063877,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should have appropriate messages for food vs liquid","status":"passed","title":"should have appropriate messages for food vs liquid","duration":0.11322500000096625,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.18424100000083854,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.1231950000001234,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.30066599999918253,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should create various edible entities","status":"passed","title":"should create various edible entities","duration":0.18676799999957439,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should work with containers for liquids","status":"passed","title":"should work with containers for liquids","duration":0.14438099999824772,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1879609999996319,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09579400000075111,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.12767100000019127,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.1353980000003503,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle very large values","status":"passed","title":"should handle very large values","duration":0.14480699999876379,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle magical food with multiple effects","status":"passed","title":"should handle magical food with multiple effects","duration":0.16641800000070361,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle rations with multiple servings","status":"passed","title":"should handle rations with multiple servings","duration":0.1259749999990163,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle transformation items","status":"passed","title":"should handle transformation items","duration":0.11970099999962258,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle poisoned or cursed food","status":"passed","title":"should handle poisoned or cursed food","duration":0.7363380000006146,"failureMessages":[],"meta":{}}],"startTime":1755159930946,"endTime":1755159930958.7363,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/edible.test.ts"},{"assertionResults":[{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.554662999999891,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.5251619999999093,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"in\" preposition for containers","status":"passed","title":"should handle \"in\" preposition for containers","duration":0.4460189999999784,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"on\" preposition for surfaces","status":"passed","title":"should handle \"on\" preposition for surfaces","duration":0.25652200000058656,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"under\" preposition","status":"passed","title":"should handle \"under\" preposition","duration":0.16463999999996304,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"behind\" preposition","status":"passed","title":"should handle \"behind\" preposition","duration":0.1348680000000968,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track single occupant","status":"passed","title":"should track single occupant","duration":1.3639729999995325,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track multiple occupants","status":"passed","title":"should track multiple occupants","duration":0.49166300000069896,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should handle unlimited occupancy","status":"passed","title":"should handle unlimited occupancy","duration":0.6102820000005522,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track occupancy state","status":"passed","title":"should track occupancy state","duration":0.5782200000003286,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle visible occupants","status":"passed","title":"should handle visible occupants","duration":0.2250500000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle hidden occupants","status":"passed","title":"should handle hidden occupants","duration":0.1419949999999517,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.10221599999931641,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle soundproofing","status":"passed","title":"should handle soundproofing","duration":0.12624599999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle standing entries","status":"passed","title":"should handle standing entries","duration":0.13713100000040868,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle sitting entries","status":"passed","title":"should handle sitting entries","duration":0.11625099999946542,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle lying entries","status":"passed","title":"should handle lying entries","duration":0.06209500000022672,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle no posture requirement","status":"passed","title":"should handle no posture requirement","duration":0.05664399999932357,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle enter message","status":"passed","title":"should handle enter message","duration":2.210650999999416,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle exit message","status":"passed","title":"should handle exit message","duration":0.20883899999989808,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle full message","status":"passed","title":"should handle full message","duration":0.09689199999957054,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle blocked message","status":"passed","title":"should handle blocked message","duration":0.059403000000202155,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle stationary entries","status":"passed","title":"should handle stationary entries","duration":0.08440900000005058,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle mobile entries","status":"passed","title":"should handle mobile entries","duration":0.2875030000004699,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle rideable animals","status":"passed","title":"should handle rideable animals","duration":0.5310949999993682,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle open access","status":"passed","title":"should handle open access","duration":0.17863699999998062,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle blocked access","status":"passed","title":"should handle blocked access","duration":0.32293100000060804,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle conditional access","status":"passed","title":"should handle conditional access","duration":0.37430399999993824,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.2751939999998285,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should replace existing entry trait","status":"passed","title":"should replace existing entry trait","duration":0.18756399999983842,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle nested entries","status":"passed","title":"should handle nested entries","duration":0.47493200000008073,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle multi-purpose entries","status":"passed","title":"should handle multi-purpose entries","duration":0.5232790000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle vehicle with compartments","status":"passed","title":"should handle vehicle with compartments","duration":0.5348060000005717,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle theatrical entries","status":"passed","title":"should handle theatrical entries","duration":0.5163039999997636,"failureMessages":[],"meta":{}}],"startTime":1755159942799,"endTime":1755159942816.535,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/entry.test.ts"},{"assertionResults":[{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with required values","status":"passed","title":"should create trait with required values","duration":1.7026580000001559,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should throw error if required fields are missing","status":"passed","title":"should throw error if required fields are missing","duration":1.0245519999998578,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with all optional values","status":"passed","title":"should create trait with all optional values","duration":0.914545000000544,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle north direction","status":"passed","title":"should handle north direction","duration":0.2902640000002066,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle south direction","status":"passed","title":"should handle south direction","duration":0.2657410000001619,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle east direction","status":"passed","title":"should handle east direction","duration":0.11147299999993265,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle west direction","status":"passed","title":"should handle west direction","duration":0.0637509999996837,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle up direction","status":"passed","title":"should handle up direction","duration":0.06338700000014796,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle down direction","status":"passed","title":"should handle down direction","duration":0.1493959999997969,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle in direction","status":"passed","title":"should handle in direction","duration":0.16549699999995937,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle out direction","status":"passed","title":"should handle out direction","duration":0.08206599999994069,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle diagonal directions","status":"passed","title":"should handle diagonal directions","duration":0.22018500000012864,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle magic words","status":"passed","title":"should handle magic words","duration":0.8924690000003466,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle action-based exits","status":"passed","title":"should handle action-based exits","duration":0.14720000000033906,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle object-interaction exits","status":"passed","title":"should handle object-interaction exits","duration":0.15312399999947957,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle simple bidirectional exit","status":"passed","title":"should handle simple bidirectional exit","duration":0.14279699999951845,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle bidirectional portal","status":"passed","title":"should handle bidirectional portal","duration":0.15419000000019878,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle hidden exits","status":"passed","title":"should handle hidden exits","duration":0.08585200000015902,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle visible but unlisted exits","status":"passed","title":"should handle visible but unlisted exits","duration":0.07836499999939406,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle discovered exits","status":"passed","title":"should handle discovered exits","duration":0.07597499999974389,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle simple condition","status":"passed","title":"should handle simple condition","duration":0.08479700000043522,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle complex condition","status":"passed","title":"should handle complex condition","duration":0.05657000000064727,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle time-based condition","status":"passed","title":"should handle time-based condition","duration":0.09308099999998376,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom use messages","status":"passed","title":"should handle custom use messages","duration":1.27426800000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom blocked messages","status":"passed","title":"should handle custom blocked messages","duration":0.19885100000010425,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should allow no custom messages","status":"passed","title":"should allow no custom messages","duration":0.17161299999952462,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3394029999999475,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should replace existing exit trait","status":"passed","title":"should replace existing exit trait","duration":0.2718239999994694,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle one-way exit","status":"passed","title":"should handle one-way exit","duration":0.4804680000006556,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle teleporter","status":"passed","title":"should handle teleporter","duration":0.7919680000004519,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle vehicle-based exit","status":"passed","title":"should handle vehicle-based exit","duration":0.7810760000002119,"failureMessages":[],"meta":{}}],"startTime":1755159949646,"endTime":1755159949658.792,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/exit.test.ts"},{"assertionResults":[{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.093735999999808,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.1492200000002413,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should handle all fragile materials","status":"passed","title":"should handle all fragile materials","duration":0.3050439999997252,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default glass to sharp fragments","status":"passed","title":"should default glass to sharp fragments","duration":0.12494200000037381,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default crystal to sharp fragments","status":"passed","title":"should default crystal to sharp fragments","duration":0.19497799999953713,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should not default other materials to sharp","status":"passed","title":"should not default other materials to sharp","duration":0.24410900000020774,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should allow override of sharp fragments","status":"passed","title":"should allow override of sharp fragments","duration":0.16411199999947712,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break threshold"],"fullName":"FragileTrait break threshold should handle different fragility levels","status":"passed","title":"should handle different fragility levels","duration":0.4687290000001667,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.6742349999994985,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should work with multiple fragile objects","status":"passed","title":"should work with multiple fragile objects","duration":0.28078199999981734,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that break into fragments","status":"passed","title":"should handle objects that break into fragments","duration":1.460013999999319,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that trigger events when broken","status":"passed","title":"should handle objects that trigger events when broken","duration":0.25885900000048423,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should track damaged state","status":"passed","title":"should track damaged state","duration":0.1868030000005092,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should track value loss when broken","status":"passed","title":"should track value loss when broken","duration":0.15623800000048504,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should handle no value specification","status":"passed","title":"should handle no value specification","duration":0.06647900000007212,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.11928399999942485,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08621000000039203,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08095200000025216,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle custom break messages","status":"passed","title":"should handle custom break messages","duration":0.05771900000036112,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile glass vase","status":"passed","title":"should create a fragile glass vase","duration":0.14633899999989808,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile ice sculpture","status":"passed","title":"should create a fragile ice sculpture","duration":0.10862300000007963,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a security-protected display case","status":"passed","title":"should create a security-protected display case","duration":0.08189500000025873,"failureMessages":[],"meta":{}}],"startTime":1755159946241,"endTime":1755159946250.1462,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/fragile.test.ts"},{"assertionResults":[{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.7649010000004637,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.29154900000048656,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"a\" article","status":"passed","title":"should handle \"a\" article","duration":0.39358700000047975,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"an\" article","status":"passed","title":"should handle \"an\" article","duration":0.16359399999964808,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"the\" article","status":"passed","title":"should handle \"the\" article","duration":0.08731499999976222,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"some\" article for plural/mass nouns","status":"passed","title":"should handle \"some\" article for plural/mass nouns","duration":0.08852000000024418,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle empty article for proper names","status":"passed","title":"should handle empty article for proper names","duration":0.08406399999967107,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should start with empty aliases","status":"passed","title":"should start with empty aliases","duration":0.17786100000012084,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should store multiple aliases","status":"passed","title":"should store multiple aliases","duration":1.6531319999994594,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle full description","status":"passed","title":"should handle full description","duration":0.29037999999945896,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle brief description separately","status":"passed","title":"should handle brief description separately","duration":0.17989100000067992,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should allow empty descriptions","status":"passed","title":"should allow empty descriptions","duration":0.09288899999955902,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should default to not concealed","status":"passed","title":"should default to not concealed","duration":0.056080000000292785,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should handle concealed objects","status":"passed","title":"should handle concealed objects","duration":0.069882000000689,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle weight","status":"passed","title":"should handle weight","duration":0.061837000000195985,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle volume","status":"passed","title":"should handle volume","duration":0.04824400000052265,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle size categories","status":"passed","title":"should handle size categories","duration":0.15607200000067678,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should allow undefined physical properties","status":"passed","title":"should allow undefined physical properties","duration":0.1150099999995291,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.17228399999930843,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should replace existing identity trait","status":"passed","title":"should replace existing identity trait","duration":0.0910569999996369,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle proper names correctly","status":"passed","title":"should handle proper names correctly","duration":0.08463099999971746,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle mass nouns","status":"passed","title":"should handle mass nouns","duration":0.05558599999949365,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle unique items","status":"passed","title":"should handle unique items","duration":0.07260800000040035,"failureMessages":[],"meta":{}}],"startTime":1755159955668,"endTime":1755159955675.1724,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/identity.test.ts"},{"assertionResults":[{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.704631999999947,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.479272999999921,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should handle all positions","status":"passed","title":"should handle all positions","duration":0.15313900000001013,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should track position changes","status":"passed","title":"should track position changes","duration":0.2830950000006851,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.28966700000000856,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle stuck state","status":"passed","title":"should handle stuck state","duration":0.24179000000003725,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.5946670000002996,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should handle multiple levers in world","status":"passed","title":"should handle multiple levers in world","duration":0.27042400000027556,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should store custom position names","status":"passed","title":"should store custom position names","duration":0.3737670000000435,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should handle partial position names","status":"passed","title":"should handle partial position names","duration":0.2599289999998291,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should store lever sound","status":"passed","title":"should store lever sound","duration":0.17496500000015658,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should handle missing sound","status":"passed","title":"should handle missing sound","duration":0.10110699999950157,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1984019999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.15736899999956222,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1675679999998465,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle stuck spring-loaded lever","status":"passed","title":"should handle stuck spring-loaded lever","duration":0.11265700000058132,"failureMessages":[],"meta":{}}],"startTime":1755159960813,"endTime":1755159960821.1675,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lever.test.ts"},{"assertionResults":[{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.865923000001203,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7916820000009466,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.4925170000005892,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle fuel-based initialization","status":"passed","title":"should handle fuel-based initialization","duration":0.43557400000099733,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should support various brightness levels","status":"passed","title":"should support various brightness levels","duration":0.520102999998926,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should handle edge brightness values","status":"passed","title":"should handle edge brightness values","duration":0.5209739999991143,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should allow out-of-range brightness values","status":"passed","title":"should allow out-of-range brightness values","duration":0.26451599999927566,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should track lit status","status":"passed","title":"should track lit status","duration":0.25336000000061176,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should maintain brightness when lit state changes","status":"passed","title":"should maintain brightness when lit state changes","duration":0.46540599999934784,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle infinite fuel sources","status":"passed","title":"should handle infinite fuel sources","duration":0.34431300000142073,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle fuel-based sources","status":"passed","title":"should handle fuel-based sources","duration":0.2108120000011695,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should track fuel consumption","status":"passed","title":"should track fuel consumption","duration":0.18375399999968067,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle various consumption rates","status":"passed","title":"should handle various consumption rates","duration":0.17950000000018917,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle partial fuel properties","status":"passed","title":"should handle partial fuel properties","duration":0.16726000000016938,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4941269999999349,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should create various light source entities","status":"passed","title":"should create various light source entities","duration":0.32917599999927916,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with switchable light sources","status":"passed","title":"should work with switchable light sources","duration":0.3386739999987185,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with wearable light sources","status":"passed","title":"should work with wearable light sources","duration":0.2665450000004057,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle flame-based sources","status":"passed","title":"should handle flame-based sources","duration":0.1987699999990582,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle electric sources","status":"passed","title":"should handle electric sources","duration":0.124894000000495,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle magical sources","status":"passed","title":"should handle magical sources","duration":0.12159900000006019,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.7251969999997527,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.36371800000051735,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.22811600000022736,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle zero values","status":"passed","title":"should handle zero values","duration":0.37306600000010803,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.16185700000096404,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.22580399999969814,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle refillable light sources","status":"passed","title":"should handle refillable light sources","duration":0.1959259999985079,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle multi-mode light sources","status":"passed","title":"should handle multi-mode light sources","duration":0.24182900000050722,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle degrading light sources","status":"passed","title":"should handle degrading light sources","duration":0.35500300000057905,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle emergency light sources","status":"passed","title":"should handle emergency light sources","duration":0.2484710000007908,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle combined light sources","status":"passed","title":"should handle combined light sources","duration":0.13960899999983667,"failureMessages":[],"meta":{}}],"startTime":1755159952924,"endTime":1755159952938.355,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/light-source.test.ts"},{"assertionResults":[{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.2600839999995515,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.49987700000019686,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should use startsLocked to set initial isLocked if not provided","status":"passed","title":"should use startsLocked to set initial isLocked if not provided","duration":0.2686729999995805,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should prefer explicit isLocked over startsLocked","status":"passed","title":"should prefer explicit isLocked over startsLocked","duration":0.27315400000043155,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle single key","status":"passed","title":"should handle single key","duration":0.3920399999997244,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle multiple keys","status":"passed","title":"should handle multiple keys","duration":0.6765150000001086,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle both single and multiple keys","status":"passed","title":"should handle both single and multiple keys","duration":0.29950800000005984,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle master key acceptance","status":"passed","title":"should handle master key acceptance","duration":0.17456899999979214,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should allow changing lock state","status":"passed","title":"should allow changing lock state","duration":0.31934499999988475,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should handle auto-lock behavior flag","status":"passed","title":"should handle auto-lock behavior flag","duration":0.2548109999997905,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.439527999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should work with lockable container","status":"passed","title":"should work with lockable container","duration":0.35243499999978667,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should create matching key entity","status":"passed","title":"should create matching key entity","duration":0.13570399999935034,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should store all lock-related messages","status":"passed","title":"should store all lock-related messages","duration":0.1345369999999093,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.09366099999988364,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","sound effects"],"fullName":"LockableTrait sound effects should support lock/unlock sounds","status":"passed","title":"should support lock/unlock sounds","duration":0.16420099999959348,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10824799999954848,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1090200000007826,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle entity without key requirement","status":"passed","title":"should handle entity without key requirement","duration":0.08256100000016886,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.14802899999995134,"failureMessages":[],"meta":{}}],"startTime":1755159946320,"endTime":1755159946328.148,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lockable.test.ts"},{"assertionResults":[{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.815830999999889,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9208550000003015,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should handle all weight classes","status":"passed","title":"should handle all weight classes","duration":0.2082350000000588,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should track blocked exits","status":"passed","title":"should track blocked exits","duration":1.2430359999998473,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle single blocked exit","status":"passed","title":"should handle single blocked exit","duration":0.6205529999997452,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle no blocked exits when not blocking","status":"passed","title":"should handle no blocked exits when not blocking","duration":0.24115299999994022,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should track what is revealed when moved","status":"passed","title":"should track what is revealed when moved","duration":0.1341919999995298,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should handle no reveal","status":"passed","title":"should handle no reveal","duration":0.07910600000013801,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track if moved","status":"passed","title":"should track if moved","duration":0.23254400000041642,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track original room","status":"passed","title":"should track original room","duration":0.13987699999961478,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3289310000000114,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.18432100000063656,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with both PushableTrait and PullableTrait","status":"passed","title":"should work with both PushableTrait and PullableTrait","duration":0.18334600000071077,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle single person movement","status":"passed","title":"should handle single person movement","duration":0.08202799999980925,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle multi-person movement","status":"passed","title":"should handle multi-person movement","duration":0.06262900000001537,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should default people required when multi-person is true","status":"passed","title":"should default people required when multi-person is true","duration":0.15417800000068382,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should store movement sounds","status":"passed","title":"should store movement sounds","duration":0.10805299999992712,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should handle no sound","status":"passed","title":"should handle no sound","duration":0.04882700000052864,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.09134799999992538,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.0843299999996816,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.06374899999991612,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a blocking boulder","status":"passed","title":"should create a blocking boulder","duration":0.46961000000010245,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a moveable bookshelf","status":"passed","title":"should create a moveable bookshelf","duration":0.26150200000029145,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a light moveable crate","status":"passed","title":"should create a light moveable crate","duration":0.32974099999955797,"failureMessages":[],"meta":{}}],"startTime":1755159953111,"endTime":1755159953120.4697,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/moveable-scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.7732020000003104,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4628149999998641,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should use startsOpen to set initial isOpen if not provided","status":"passed","title":"should use startsOpen to set initial isOpen if not provided","duration":0.24815200000011828,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should prefer explicit isOpen over startsOpen","status":"passed","title":"should prefer explicit isOpen over startsOpen","duration":0.22042700000019977,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should allow changing open state","status":"passed","title":"should allow changing open state","duration":0.3629110000001674,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should maintain other properties when state changes","status":"passed","title":"should maintain other properties when state changes","duration":0.2534930000001623,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.37054600000010396,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should work with container entities","status":"passed","title":"should work with container entities","duration":0.2723290000003544,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should handle entity with multiple state traits","status":"passed","title":"should handle entity with multiple state traits","duration":0.5110290000002351,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle one-way openable (canClose = false)","status":"passed","title":"should handle one-way openable (canClose = false)","duration":0.17989699999998265,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle revealsContents setting","status":"passed","title":"should handle revealsContents setting","duration":0.08150500000010652,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should support sound effects","status":"passed","title":"should support sound effects","duration":0.07275399999980436,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should store all custom messages","status":"passed","title":"should store all custom messages","duration":0.103080000000773,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.15189300000020012,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10714899999948102,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09122000000024855,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0783080000001064,"failureMessages":[],"meta":{}}],"startTime":1755159963666,"endTime":1755159963672.0913,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/openable.test.ts"},{"assertionResults":[{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1164180000005217,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4211089999998876,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should handle all pull types","status":"passed","title":"should handle all pull types","duration":0.2131070000004911,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should track pull count","status":"passed","title":"should track pull count","duration":0.2859150000003865,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.5531780000001163,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should respect max pulls","status":"passed","title":"should respect max pulls","duration":0.6641720000006899,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5426010000001042,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should work with multiple pullable objects","status":"passed","title":"should work with multiple pullable objects","duration":0.2094520000000557,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle lever configuration","status":"passed","title":"should handle lever configuration","duration":0.3674300000002404,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle cord configuration","status":"passed","title":"should handle cord configuration","duration":0.2847359999996115,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle attached configuration","status":"passed","title":"should handle attached configuration","duration":0.15137099999992643,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.10037800000009156,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.25767500000074506,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.16174799999953393,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.14955600000030245,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.19450200000028417,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0913989999999103,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.0826390000001993,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle non-repeatable pulls","status":"passed","title":"should handle non-repeatable pulls","duration":0.0785939999996117,"failureMessages":[],"meta":{}}],"startTime":1755159963756,"endTime":1755159963764.0913,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pullable.test.ts"},{"assertionResults":[{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.7185060000001613,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.35108300000047166,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should handle all push types","status":"passed","title":"should handle all push types","duration":0.12779799999952957,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should track push count","status":"passed","title":"should track push count","duration":0.20998599999984435,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.20017800000005082,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should respect max pushes","status":"passed","title":"should respect max pushes","duration":0.1947070000005624,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.30578799999966577,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should work with multiple pushable objects","status":"passed","title":"should work with multiple pushable objects","duration":0.20313600000008591,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle button configuration","status":"passed","title":"should handle button configuration","duration":0.5059470000005604,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.21830599999975675,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle moveable configuration","status":"passed","title":"should handle moveable configuration","duration":0.13287299999956304,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should handle all push directions","status":"passed","title":"should handle all push directions","duration":0.11661300000014307,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should default to no specific direction","status":"passed","title":"should default to no specific direction","duration":0.04966899999999441,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.12040299999989656,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.08855299999959243,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.0970710000001418,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.07281899999998132,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.06462199999987206,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.0609230000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle non-repeatable pushes","status":"passed","title":"should handle non-repeatable pushes","duration":0.053848999999900116,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle passage revealing","status":"passed","title":"should handle passage revealing","duration":0.0796940000000177,"failureMessages":[],"meta":{}}],"startTime":1755159961274,"endTime":1755159961280.0796,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pushable.test.ts"},{"assertionResults":[{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.988683999999921,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7005609999996523,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should auto-initialize pages from pageContent","status":"passed","title":"should auto-initialize pages from pageContent","duration":1.430264000000534,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should not override currentPage if already set","status":"passed","title":"should not override currentPage if already set","duration":0.6854839999996329,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle simple text","status":"passed","title":"should handle simple text","duration":0.7007570000005217,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle multi-line text","status":"passed","title":"should handle multi-line text","duration":0.5116930000003777,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle preview text","status":"passed","title":"should handle preview text","duration":0.24621699999988778,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle empty text","status":"passed","title":"should handle empty text","duration":0.1720580000001064,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should support different languages","status":"passed","title":"should support different languages","duration":0.48693899999852874,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle ability requirements","status":"passed","title":"should handle ability requirements","duration":0.2686759999996866,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle item requirements","status":"passed","title":"should handle item requirements","duration":0.1701809999995021,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle no requirements","status":"passed","title":"should handle no requirements","duration":0.1854960000000574,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should support various readable types","status":"passed","title":"should support various readable types","duration":0.28214699999989534,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should allow custom readable types","status":"passed","title":"should allow custom readable types","duration":0.12841200000002573,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle books with multiple pages","status":"passed","title":"should handle books with multiple pages","duration":0.47281199999997625,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle current page navigation","status":"passed","title":"should handle current page navigation","duration":0.26906699999926786,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle single page with pageContent","status":"passed","title":"should handle single page with pageContent","duration":0.12122600000111561,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle empty pageContent array","status":"passed","title":"should handle empty pageContent array","duration":0.5363899999993009,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should track read status","status":"passed","title":"should track read status","duration":0.10769900000013877,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should handle readability state","status":"passed","title":"should handle readability state","duration":0.08788300000014715,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should maintain state through changes","status":"passed","title":"should maintain state through changes","duration":0.08847699999932956,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3349149999994552,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should create various readable entities","status":"passed","title":"should create various readable entities","duration":0.15569300000061048,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should work with openable books","status":"passed","title":"should work with openable books","duration":0.1894140000003972,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":1.134052999999767,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.39770599999974365,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1197069999998348,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle page bounds","status":"passed","title":"should handle page bounds","duration":0.07254199999988487,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should preserve data integrity","status":"passed","title":"should preserve data integrity","duration":0.13531899999907182,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle special text content","status":"passed","title":"should handle special text content","duration":0.07305799999994633,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle magical tome with requirements","status":"passed","title":"should handle magical tome with requirements","duration":0.0749759999998787,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle inscribed objects","status":"passed","title":"should handle inscribed objects","duration":0.07722500000090804,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle dynamic readability","status":"passed","title":"should handle dynamic readability","duration":0.06630199999926845,"failureMessages":[],"meta":{}}],"startTime":1755159931157,"endTime":1755159931171.1353,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/readable.test.ts"},{"assertionResults":[{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.272799000000305,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.1516579999997703,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle simple exits","status":"passed","title":"should handle simple exits","duration":0.9245929999997315,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle exits with doors","status":"passed","title":"should handle exits with doors","duration":0.18520799999987503,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle blocked exits","status":"passed","title":"should handle blocked exits","duration":0.33673499999986234,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle custom exits","status":"passed","title":"should handle custom exits","duration":0.19260699999995268,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle dark rooms","status":"passed","title":"should handle dark rooms","duration":0.15234499999951367,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle lit rooms","status":"passed","title":"should handle lit rooms","duration":0.10482899999988149,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle outdoor lighting","status":"passed","title":"should handle outdoor lighting","duration":0.25847299999986717,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle underground rooms","status":"passed","title":"should handle underground rooms","duration":0.17096700000001874,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should start unvisited","status":"passed","title":"should start unvisited","duration":0.2982529999999315,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should track visited state","status":"passed","title":"should track visited state","duration":0.13205999999991036,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should handle initial description","status":"passed","title":"should handle initial description","duration":0.08654000000024098,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient sounds","status":"passed","title":"should handle ambient sounds","duration":0.1255120000005263,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient smells","status":"passed","title":"should handle ambient smells","duration":0.07914299999993091,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle both sound and smell","status":"passed","title":"should handle both sound and smell","duration":0.128631000000496,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle region assignment","status":"passed","title":"should handle region assignment","duration":0.06862700000056066,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle multiple tags","status":"passed","title":"should handle multiple tags","duration":0.2681620000003022,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle rooms without regions or tags","status":"passed","title":"should handle rooms without regions or tags","duration":0.1878740000001926,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.14617600000019593,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should work with container trait","status":"passed","title":"should work with container trait","duration":0.07084300000042276,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle maze-like connections","status":"passed","title":"should handle maze-like connections","duration":0.1235050000004776,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle multi-level connections","status":"passed","title":"should handle multi-level connections","duration":0.11904400000003079,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle outdoor/indoor transitions","status":"passed","title":"should handle outdoor/indoor transitions","duration":0.24109899999984918,"failureMessages":[],"meta":{}}],"startTime":1755159950712,"endTime":1755159950723.2412,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/room.test.ts"},{"assertionResults":[{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.2387419999995473,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.2346160000006421,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.11463700000058452,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle only mentioned property","status":"passed","title":"should handle only mentioned property","duration":0.154355000000578,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support custom messages for different items","status":"passed","title":"should support custom messages for different items","duration":0.3495410000004995,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should allow undefined message for default handling","status":"passed","title":"should allow undefined message for default handling","duration":0.19531000000006316,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support humorous messages","status":"passed","title":"should support humorous messages","duration":0.14412300000003597,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle mentioned scenery","status":"passed","title":"should handle mentioned scenery","duration":0.09503800000038609,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle unmentioned scenery","status":"passed","title":"should handle unmentioned scenery","duration":0.17408400000022084,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should allow toggling mentioned state","status":"passed","title":"should allow toggling mentioned state","duration":0.2156409999997777,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4205289999999877,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should create various scenery entities","status":"passed","title":"should create various scenery entities","duration":0.25034600000071805,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with room decorations","status":"passed","title":"should work with room decorations","duration":0.32522700000026816,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with interactive scenery","status":"passed","title":"should work with interactive scenery","duration":0.45125000000007276,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle architectural features","status":"passed","title":"should handle architectural features","duration":0.18796600000041508,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle natural features","status":"passed","title":"should handle natural features","duration":0.26649600000018836,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle furniture","status":"passed","title":"should handle furniture","duration":0.15617999999994936,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle always-mentioned scenery","status":"passed","title":"should handle always-mentioned scenery","duration":0.10991699999976845,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle hidden scenery","status":"passed","title":"should handle hidden scenery","duration":0.09229599999980564,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle discoverable scenery","status":"passed","title":"should handle discoverable scenery","duration":0.14379199999984849,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.14902600000004895,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11122900000009395,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.12107300000025134,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle null values","status":"passed","title":"should handle null values","duration":0.1381569999994099,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should preserve object reference","status":"passed","title":"should preserve object reference","duration":0.09420899999986432,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with state changes","status":"passed","title":"should handle scenery with state changes","duration":0.1391089999997348,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery containers","status":"passed","title":"should handle scenery containers","duration":0.1312339999994947,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with multiple states","status":"passed","title":"should handle scenery with multiple states","duration":0.06685099999958766,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle room-defining scenery","status":"passed","title":"should handle room-defining scenery","duration":0.06797899999946821,"failureMessages":[],"meta":{}}],"startTime":1755159947961,"endTime":1755159947970.0679,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.5471129999996265,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2816670000001977,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle partial capacity initialization","status":"passed","title":"should handle partial capacity initialization","duration":0.2543630000000121,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle only enterable property","status":"passed","title":"should handle only enterable property","duration":0.49009599999953934,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support weight-based capacity","status":"passed","title":"should support weight-based capacity","duration":0.25311599999986356,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support item count capacity","status":"passed","title":"should support item count capacity","duration":0.130804999999782,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support both weight and item limits","status":"passed","title":"should support both weight and item limits","duration":0.11945199999991019,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.06011899999975867,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle zero capacity","status":"passed","title":"should handle zero capacity","duration":0.1938430000000153,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.1516670000000886,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.15054700000018784,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.12679000000025553,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle empty type arrays","status":"passed","title":"should handle empty type arrays","duration":0.09058599999934813,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle non-enterable supporters","status":"passed","title":"should handle non-enterable supporters","duration":0.1585189999996146,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle enterable supporters","status":"passed","title":"should handle enterable supporters","duration":0.08231100000011793,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should default to non-enterable","status":"passed","title":"should default to non-enterable","duration":0.1748889999998937,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.26850500000000466,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should create various supporter entities","status":"passed","title":"should create various supporter entities","duration":0.11647799999991548,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with scenery supporters","status":"passed","title":"should work with scenery supporters","duration":0.08760799999981828,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with enterable supporters","status":"passed","title":"should work with enterable supporters","duration":0.0973230000008698,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle furniture supporters","status":"passed","title":"should handle furniture supporters","duration":0.08028599999943253,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle specialized supporters","status":"passed","title":"should handle specialized supporters","duration":0.6988860000001296,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle natural supporters","status":"passed","title":"should handle natural supporters","duration":0.15175899999940157,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12067200000001321,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.05892000000039843,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.06747400000040216,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle negative capacity values","status":"passed","title":"should handle negative capacity values","duration":0.05605899999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle fractional capacity values","status":"passed","title":"should handle fractional capacity values","duration":0.05622399999992922,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should preserve array references","status":"passed","title":"should preserve array references","duration":0.13946600000053877,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle multi-purpose supporters","status":"passed","title":"should handle multi-purpose supporters","duration":0.20712300000013784,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle tiered supporters","status":"passed","title":"should handle tiered supporters","duration":0.09817800000018906,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle magical supporters","status":"passed","title":"should handle magical supporters","duration":0.07059099999969476,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle dynamic supporter states","status":"passed","title":"should handle dynamic supporter states","duration":0.2544900000002599,"failureMessages":[],"meta":{}}],"startTime":1755159934797,"endTime":1755159934806.2544,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/supporter.test.ts"},{"assertionResults":[{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.022828999999547,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7677890000004481,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should handle power requirements correctly","status":"passed","title":"should handle power requirements correctly","duration":0.38657599999987724,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should set autoOffCounter when starting on with autoOffTime","status":"passed","title":"should set autoOffCounter when starting on with autoOffTime","duration":0.43422800000007555,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should not set autoOffCounter when starting off","status":"passed","title":"should not set autoOffCounter when starting off","duration":0.29730900000049587,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should allow changing on/off state","status":"passed","title":"should allow changing on/off state","duration":0.21468900000036228,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should track power availability","status":"passed","title":"should track power availability","duration":0.13542499999948632,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should handle auto-off counter","status":"passed","title":"should handle auto-off counter","duration":0.1538829999999507,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5205290000003515,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.2775659999997515,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should handle device with power requirements","status":"passed","title":"should handle device with power requirements","duration":0.166269000000284,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should store all switch-related messages","status":"passed","title":"should store all switch-related messages","duration":0.1936969999997018,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.15419999999994616,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","sound effects"],"fullName":"SwitchableTrait sound effects should support all sound types","status":"passed","title":"should support all sound types","duration":0.1459530000001905,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.15061100000002625,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.10764199999994162,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle device with no auto-off","status":"passed","title":"should handle device with no auto-off","duration":0.12279800000032992,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09397400000034395,"failureMessages":[],"meta":{}}],"startTime":1755159956680,"endTime":1755159956687.1506,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/switchable.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create a functional light switch","status":"passed","title":"should create a functional light switch","duration":2.163948999999775,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create an elevator call button","status":"passed","title":"should create an elevator call button","duration":0.46888699999999517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a safe combination dial","status":"passed","title":"should create a safe combination dial","duration":0.4334239999998317,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a water valve","status":"passed","title":"should create a water valve","duration":0.20355000000017753,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a heavy boulder that can be pushed","status":"passed","title":"should create a heavy boulder that can be pushed","duration":0.31004899999970803,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a crate that can be pushed and pulled","status":"passed","title":"should create a crate that can be pushed and pulled","duration":0.22705100000075618,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","FRAGILE + BREAKABLE"],"fullName":"Trait Combinations FRAGILE + BREAKABLE should create a reinforced glass window","status":"passed","title":"should create a reinforced glass window","duration":0.24917199999981676,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create an emergency alarm system","status":"passed","title":"should create an emergency alarm system","duration":0.273616000000402,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create a complex control panel","status":"passed","title":"should create a complex control panel","duration":0.4270510000005743,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle entities with many traits","status":"passed","title":"should handle entities with many traits","duration":0.20875100000012026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle trait updates","status":"passed","title":"should handle trait updates","duration":0.19761000000016793,"failureMessages":[],"meta":{}}],"startTime":1755159954724,"endTime":1755159954730.2087,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":5.635779999999613,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":2.2633450000002995,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should handle all turn types","status":"passed","title":"should handle all turn types","duration":0.48720500000035827,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle string settings","status":"passed","title":"should handle string settings","duration":0.3889360000002853,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric settings","status":"passed","title":"should handle numeric settings","duration":0.5899099999996906,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should default current setting to first in array","status":"passed","title":"should default current setting to first in array","duration":0.25698800000009214,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric ranges","status":"passed","title":"should handle numeric ranges","duration":0.29828600000018923,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turns made","status":"passed","title":"should track turns made","duration":0.2577799999999115,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turn direction","status":"passed","title":"should track turn direction","duration":0.47844399999939924,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.7272469999998066,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should work with multiple turnable objects","status":"passed","title":"should work with multiple turnable objects","duration":0.34725800000069285,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle dial configuration","status":"passed","title":"should handle dial configuration","duration":1.1393619999998919,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle wheel configuration","status":"passed","title":"should handle wheel configuration","duration":0.2613439999995535,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle crank configuration","status":"passed","title":"should handle crank configuration","duration":0.19887000000016997,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle valve configuration","status":"passed","title":"should handle valve configuration","duration":0.19610600000032719,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.211765999999443,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle jammed state","status":"passed","title":"should handle jammed state","duration":0.11327799999980925,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle unidirectional turning","status":"passed","title":"should handle unidirectional turning","duration":0.13414900000043417,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.19718699999975797,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.14730499999950553,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.16297399999984918,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1563849999993181,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.12601699999959237,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle complex configurations","status":"passed","title":"should handle complex configurations","duration":0.20746300000064366,"failureMessages":[],"meta":{}}],"startTime":1755159946512,"endTime":1755159946529.2075,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/turnable.test.ts"},{"assertionResults":[{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.44739699999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6212699999996403,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.3239159999993717,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle empty blocksSlots array","status":"passed","title":"should handle empty blocksSlots array","duration":0.34741699999995035,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should support various body slots","status":"passed","title":"should support various body slots","duration":0.4940070000002379,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should handle custom slot names","status":"passed","title":"should handle custom slot names","duration":0.1698980000001029,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should block multiple slots","status":"passed","title":"should block multiple slots","duration":0.8329540000004272,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should support different layers","status":"passed","title":"should support different layers","duration":0.33306500000071537,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should handle wearableOver property","status":"passed","title":"should handle wearableOver property","duration":2.058939999999893,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should track worn status","status":"passed","title":"should track worn status","duration":0.5376249999999345,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should handle different wearers","status":"passed","title":"should handle different wearers","duration":0.35990600000059203,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should clear wornBy when not worn","status":"passed","title":"should clear wornBy when not worn","duration":0.3481530000008206,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should store custom wear and remove messages","status":"passed","title":"should store custom wear and remove messages","duration":0.9891040000002249,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow undefined messages","status":"passed","title":"should allow undefined messages","duration":0.24597499999981665,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow only wear message","status":"passed","title":"should allow only wear message","duration":0.16009200000007695,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.5652110000000903,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.1973920000000362,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.1801820000000589,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4710379999996803,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should create various wearable items","status":"passed","title":"should create various wearable items","duration":0.26485999999931664,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should work with actor wearing items","status":"passed","title":"should work with actor wearing items","duration":0.5665770000005068,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle layered armor system","status":"passed","title":"should handle layered armor system","duration":0.3567400000001726,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle jewelry with multiple items per slot","status":"passed","title":"should handle jewelry with multiple items per slot","duration":0.23237499999959255,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle outfit sets","status":"passed","title":"should handle outfit sets","duration":0.21422600000005332,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.30425000000013824,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle undefined as parameter","status":"passed","title":"should handle undefined as parameter","duration":0.429587999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.3669630000003963,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle boolean false values correctly","status":"passed","title":"should handle boolean false values correctly","duration":0.30719799999951647,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle zero and negative values","status":"passed","title":"should handle zero and negative values","duration":0.37439999999969586,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should preserve array reference for blocksSlots","status":"passed","title":"should preserve array reference for blocksSlots","duration":0.4755940000004557,"failureMessages":[],"meta":{}}],"startTime":1755159939168,"endTime":1755159939186.4756,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/wearable.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":2.897533000000294,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should share entities with WorldModel","status":"passed","title":"should share entities with WorldModel","duration":0.3211860000001252,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should remove entities","status":"passed","title":"should remove entities","duration":0.31625400000029913,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":1.6498830000000453,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.5091440000005605,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":0.9722040000006018,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.9325989999997546,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":0.787705000000642,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup containers with properties","status":"passed","title":"should setup containers with properties","duration":0.6361790000000838,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers with item specs","status":"passed","title":"should fill containers with item specs","duration":0.5160540000006222,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should place actors at locations","status":"passed","title":"should place actors at locations","duration":0.21697200000016892,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set state values","status":"passed","title":"should set state values","duration":0.14385700000002544,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player","status":"passed","title":"should set player","duration":0.10288300000047457,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear world data","status":"passed","title":"should clear world data","duration":0.19887699999981123,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.14902400000028138,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should add and remove traits","status":"passed","title":"should add and remove traits","duration":0.2551869999997507,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Scope and Visibility Integration"],"fullName":"AuthorModel Scope and Visibility Integration should include items in closed containers in scope","status":"passed","title":"should include items in closed containers in scope","duration":1.9238709999999628,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":1.1637959999998202,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.6334189999997761,"failureMessages":[],"meta":{}}],"startTime":1755159943446,"endTime":1755159943461.6333,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the room the observer is in","status":"passed","title":"should include the room the observer is in","duration":3.6323099999999613,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in the same room","status":"passed","title":"should include items in the same room","duration":0.503671000000395,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers in the room","status":"passed","title":"should include items in containers in the room","duration":0.5365829999991547,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","status":"skipped","title":"should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items carried by the observer","status":"passed","title":"should include items carried by the observer","duration":0.30748700000003737,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers carried by the observer","status":"passed","title":"should include items in containers carried by the observer","duration":0.5163080000002083,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the observer itself","status":"passed","title":"should include the observer itself","duration":0.298678000000109,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle empty room","status":"passed","title":"should handle empty room","duration":0.4622129999997924,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should return empty array if observer not in a room","status":"passed","title":"should return empty array if observer not in a room","duration":1.0631389999998646,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle unique entities (no duplicates)","status":"passed","title":"should handle unique entities (no duplicates)","duration":0.3421630000002551,"failureMessages":[],"meta":{}}],"startTime":1755159946216,"endTime":1755159946224.342,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/get-in-scope.test.ts"},{"assertionResults":[{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add child to parent","status":"passed","title":"should add child to parent","duration":1.605942000000141,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add multiple children to parent","status":"passed","title":"should add multiple children to parent","duration":1.080260000000635,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should remove child from parent","status":"passed","title":"should remove child from parent","duration":0.21088099999997212,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should move child to new parent","status":"passed","title":"should move child to new parent","duration":0.2210590000004231,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent parent","status":"passed","title":"should handle non-existent parent","duration":0.16524399999980233,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent child","status":"passed","title":"should handle non-existent child","duration":0.15475700000024517,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove entity and its relationships","status":"passed","title":"should remove entity and its relationships","duration":0.27075800000056915,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove only specified child","status":"passed","title":"should remove only specified child","duration":0.13033399999949324,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should handle removing non-existent child","status":"passed","title":"should handle removing non-existent child","duration":0.2293069999996078,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should clean up empty parent sets","status":"passed","title":"should clean up empty parent sets","duration":0.10022200000003068,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return true for parent with children","status":"passed","title":"should return true for parent with children","duration":0.06371200000012323,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false for parent without children","status":"passed","title":"should return false for parent without children","duration":0.04651599999942846,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false after removing all children","status":"passed","title":"should return false after removing all children","duration":0.06084800000007817,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should get all descendants","status":"passed","title":"should get all descendants","duration":0.4098180000000866,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should respect max depth","status":"passed","title":"should respect max depth","duration":0.2578029999995124,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle entity with no descendants","status":"passed","title":"should handle entity with no descendants","duration":0.07765599999947881,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle circular references","status":"passed","title":"should handle circular references","duration":0.0769189999991795,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should collect all descendants up to max depth","status":"passed","title":"should collect all descendants up to max depth","duration":0.18674000000009983,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get all ancestors","status":"passed","title":"should get all ancestors","duration":0.15325800000027812,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get ancestors up to depth","status":"passed","title":"should get ancestors up to depth","duration":0.07595500000024913,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle entity with no ancestors","status":"passed","title":"should handle entity with no ancestors","duration":0.052959999999984575,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle missing entity","status":"passed","title":"should handle missing entity","duration":0.046424000000115484,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","clear"],"fullName":"SpatialIndex clear should clear all relationships","status":"passed","title":"should clear all relationships","duration":0.10117499999978463,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.19678000000021711,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.3351269999993747,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should handle empty JSON","status":"passed","title":"should handle empty JSON","duration":0.8646499999995285,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should clear before loading","status":"passed","title":"should clear before loading","duration":0.18807099999958155,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle adding same child multiple times","status":"passed","title":"should handle adding same child multiple times","duration":0.07198799999969197,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle removing child from wrong parent","status":"passed","title":"should handle removing child from wrong parent","duration":0.061220999999932246,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle self-parenting","status":"passed","title":"should handle self-parenting","duration":0.05759799999941606,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle very deep hierarchies","status":"passed","title":"should handle very deep hierarchies","duration":0.827422000000297,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should maintain consistency when moving entities","status":"passed","title":"should maintain consistency when moving entities","duration":0.20579499999985273,"failureMessages":[],"meta":{}}],"startTime":1755159926983,"endTime":1755159926992.2058,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/spatial-index.test.ts"},{"assertionResults":[{"ancestorTitles":["Verify moveEntity issue"],"fullName":"Verify moveEntity issue should not allow moving items into closed containers","status":"passed","title":"should not allow moving items into closed containers","duration":1.6658240000006117,"failureMessages":[],"meta":{}}],"startTime":1755159965560,"endTime":1755159965561.6658,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/verify-move-issue.test.ts"},{"assertionResults":[{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should always see self","status":"passed","title":"should always see self","duration":4.398927000000185,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in same room","status":"passed","title":"should see entities in same room","duration":0.5068850000006933,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in different room","status":"passed","title":"should not see entities in different room","duration":0.3863069999988511,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see the room observer is in","status":"passed","title":"should see the room observer is in","duration":0.14450899999974354,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see invisible entities","status":"passed","title":"should not see invisible entities","duration":0.2678070000001753,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in transparent containers","status":"passed","title":"should see entities in transparent containers","duration":0.21596400000089488,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in open opaque containers","status":"passed","title":"should see entities in open opaque containers","duration":0.3454020000008313,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in closed opaque containers","status":"passed","title":"should not see entities in closed opaque containers","duration":0.16403100000025006,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should handle nested containers","status":"passed","title":"should handle nested containers","duration":0.5938310000001366,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should block sight through any closed container in path","status":"passed","title":"should block sight through any closed container in path","duration":1.2889840000007098,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not see anything in dark room without light","status":"passed","title":"should not see anything in dark room without light","duration":0.9501920000002428,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should only see lit light sources in dark room","status":"passed","title":"should only see lit light sources in dark room","duration":0.6921010000005481,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should see everything when carrying lit lamp","status":"passed","title":"should see everything when carrying lit lamp","duration":0.4298830000007001,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not benefit from light in closed container","status":"passed","title":"should not benefit from light in closed container","duration":1.0403709999991406,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should handle room lighting toggle","status":"passed","title":"should handle room lighting toggle","duration":0.48062600000048405,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should return all visible entities","status":"passed","title":"should return all visible entities","duration":2.911099999999351,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should include carried items","status":"passed","title":"should include carried items","duration":0.5024360000006709,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle empty room","status":"passed","title":"should handle empty room","duration":0.9413170000007085,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle observer not in room","status":"passed","title":"should handle observer not in room","duration":0.8585999999995693,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for uncontained entities","status":"passed","title":"should return true for uncontained entities","duration":0.3323449999988952,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for invisible scenery","status":"passed","title":"should return false for invisible scenery","duration":0.19519600000057835,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in transparent container","status":"passed","title":"should return true for entity in transparent container","duration":0.1901930000003631,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in open opaque container","status":"passed","title":"should return true for entity in open opaque container","duration":0.1865749999997206,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for entity in closed opaque container","status":"passed","title":"should return false for entity in closed opaque container","duration":0.20667200000025332,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should handle opaque container without openable trait","status":"passed","title":"should handle opaque container without openable trait","duration":0.16351600000052713,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle deeply nested visibility","status":"passed","title":"should handle deeply nested visibility","duration":0.3395829999990383,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle supporter visibility","status":"passed","title":"should handle supporter visibility","duration":0.1833200000000943,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle visibility in nested containers","status":"passed","title":"should handle visibility in nested containers","duration":0.8952979999994568,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle circular containment gracefully","status":"passed","title":"should handle circular containment gracefully","duration":0.78454899999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.4890479999994568,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle entities with no location","status":"passed","title":"should handle entities with no location","duration":0.15911299999970652,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle max depth in containment path","status":"passed","title":"should handle max depth in containment path","duration":0.3360720000000583,"failureMessages":[],"meta":{}}],"startTime":1755159931239,"endTime":1755159931262.3362,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/visibility-behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should create empty world model","status":"passed","title":"should create empty world model","duration":4.60748600000079,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should accept configuration","status":"passed","title":"should accept configuration","duration":0.35093400000005204,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entity with auto-generated ID","status":"passed","title":"should create entity with auto-generated ID","duration":0.781435999999303,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should generate correct type-prefixed IDs","status":"passed","title":"should generate correct type-prefixed IDs","duration":0.5205299999997806,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should allow multiple entities with same displayName","status":"passed","title":"should allow multiple entities with same displayName","duration":0.7128730000003998,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entities with displayName","status":"passed","title":"should create entities with displayName","duration":0.33204900000055204,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get entity by id","status":"passed","title":"should get entity by id","duration":0.23868399999992107,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return undefined for missing entity","status":"passed","title":"should return undefined for missing entity","duration":0.1260020000008808,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should check entity existence","status":"passed","title":"should check entity existence","duration":0.29812700000002224,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should remove entity","status":"passed","title":"should remove entity","duration":0.26772800000071584,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return false when removing non-existent entity","status":"passed","title":"should return false when removing non-existent entity","duration":0.07886599999983446,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get all entities","status":"passed","title":"should get all entities","duration":1.44916000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should update entity","status":"passed","title":"should update entity","duration":0.1986429999997199,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle updating non-existent entity","status":"passed","title":"should handle updating non-existent entity","duration":0.15356699999938428,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should throw in strict mode when updating non-existent entity","status":"passed","title":"should throw in strict mode when updating non-existent entity","duration":0.5935190000000148,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should store displayName in entity attributes","status":"passed","title":"should store displayName in entity attributes","duration":0.1698980000001029,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should increment ID counters correctly","status":"passed","title":"should increment ID counters correctly","duration":0.12662799999998242,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle ID counter overflow","status":"passed","title":"should handle ID counter overflow","duration":3.650856999998723,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get entity location","status":"passed","title":"should get entity location","duration":0.6896780000006402,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get container contents","status":"passed","title":"should get container contents","duration":0.6112149999989924,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should move entity","status":"passed","title":"should move entity","duration":0.21877599999970698,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should remove entity from world","status":"passed","title":"should remove entity from world","duration":0.13954000000012456,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should check if move is valid","status":"passed","title":"should check if move is valid","duration":0.12181500000042433,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent moving to non-container","status":"passed","title":"should prevent moving to non-container","duration":0.07758600000124716,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent containment loops","status":"passed","title":"should prevent containment loops","duration":0.17693399999916437,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get containing room","status":"passed","title":"should get containing room","duration":0.15426700000170968,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get all contents recursively","status":"passed","title":"should get all contents recursively","duration":0.4165969999994559,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should handle max depth limit","status":"passed","title":"should handle max depth limit","duration":0.1670670000003156,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should work with entity IDs","status":"passed","title":"should work with entity IDs","duration":0.2488499999999476,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state","status":"passed","title":"should get and set state","duration":0.18311399999947753,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state values","status":"passed","title":"should get and set state values","duration":0.08364500000061525,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should handle nested state values","status":"passed","title":"should handle nested state values","duration":0.08387600000060047,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by trait","status":"passed","title":"should find entities by trait","duration":0.43808399999943504,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by type","status":"passed","title":"should find entities by type","duration":0.25119699999959266,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities with predicate","status":"passed","title":"should find entities with predicate","duration":1.0208789999996952,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find all entities without filtering","status":"passed","title":"should find all entities without filtering","duration":0.37172300000020186,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should get entities in scope","status":"passed","title":"should get entities in scope","duration":0.5668600000008155,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should include carried items in scope","status":"passed","title":"should include carried items in scope","duration":0.16288499999973283,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should check visibility","status":"passed","title":"should check visibility","duration":0.18091300000014598,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should work with direct IDs for visibility","status":"passed","title":"should work with direct IDs for visibility","duration":0.08001599999988684,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should add relationship","status":"passed","title":"should add relationship","duration":0.30053399999997055,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should get related entities","status":"passed","title":"should get related entities","duration":0.5378299999993033,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should remove relationship","status":"passed","title":"should remove relationship","duration":0.129425999999512,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle multiple relationship types","status":"passed","title":"should handle multiple relationship types","duration":0.0850140000002284,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle non-existent entities in non-strict mode","status":"passed","title":"should handle non-existent entities in non-strict mode","duration":0.07481100000040897,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should throw in strict mode for non-existent entities","status":"passed","title":"should throw in strict mode for non-existent entities","duration":0.1464689999993425,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should calculate total weight","status":"passed","title":"should calculate total weight","duration":0.20400899999913236,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should detect containment loops","status":"passed","title":"should detect containment loops","duration":0.09424100000069302,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should find path between rooms","status":"passed","title":"should find path between rooms","duration":0.31891299999915645,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should get and set player","status":"passed","title":"should get and set player","duration":0.09276200000022072,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should throw when setting non-existent player","status":"passed","title":"should throw when setting non-existent player","duration":0.11052200000085577,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.3089899999995396,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.503312000000733,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should handle loading old saves without ID system data","status":"passed","title":"should handle loading old saves without ID system data","duration":0.24694199999976263,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should clear world","status":"passed","title":"should clear world","duration":0.1575620000003255,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should register and apply event handler","status":"passed","title":"should register and apply event handler","duration":0.1587340000005497,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should validate events","status":"passed","title":"should validate events","duration":0.08596399999987625,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should throw when applying invalid event","status":"passed","title":"should throw when applying invalid event","duration":0.12505499999861058,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should preview event changes","status":"passed","title":"should preview event changes","duration":0.13395800000034797,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should track event history","status":"passed","title":"should track event history","duration":0.1073789999991277,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should get events since timestamp","status":"passed","title":"should get events since timestamp","duration":0.1479010000002745,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should clear event history","status":"passed","title":"should clear event history","duration":0.09176399999887508,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should unregister event handler","status":"passed","title":"should unregister event handler","duration":0.1274599999997008,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should handle unregistered events silently","status":"passed","title":"should handle unregistered events silently","duration":0.16642099999990023,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle empty world operations","status":"passed","title":"should handle empty world operations","duration":0.880736999999499,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle removing entity with contents","status":"passed","title":"should handle removing entity with contents","duration":0.13574999999946158,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle circular references in toJSON","status":"passed","title":"should handle circular references in toJSON","duration":0.2245439999987866,"failureMessages":[],"meta":{}}],"startTime":1755159931160,"endTime":1755159931188.2246,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/world-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should not see medicine when cabinet is closed","status":"passed","title":"should not see medicine when cabinet is closed","duration":3.702397000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should see medicine when cabinet is open","status":"passed","title":"should see medicine when cabinet is open","duration":0.6757780000007187,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should handle multiple state changes","status":"passed","title":"should handle multiple state changes","duration":0.7707300000001851,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify canSee works correctly","status":"passed","title":"should verify canSee works correctly","duration":0.41613000000052125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify medicine is in scope regardless of cabinet state","status":"passed","title":"should verify medicine is in scope regardless of cabinet state","duration":0.6264090000004217,"failureMessages":[],"meta":{}}],"startTime":1755159952945,"endTime":1755159952951.6265,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/visibility/container-state-visibility.test.ts"}]}