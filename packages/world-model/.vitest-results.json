{"numTotalTestSuites":468,"numPassedTestSuites":468,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":1137,"numPassedTests":1124,"numFailedTests":0,"numPendingTests":13,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755567266769,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Debug Worn Visibility"],"fullName":"Debug Worn Visibility should debug worn item visibility","status":"passed","title":"should debug worn item visibility","duration":5.380639999999403,"failureMessages":[],"meta":{}}],"startTime":1755567293567,"endTime":1755567293572.3806,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/debug-worn-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Minimal Visibility Test"],"fullName":"Minimal Visibility Test should see items in the same room","status":"passed","title":"should see items in the same room","duration":3.589586000000054,"failureMessages":[],"meta":{}}],"startTime":1755567313112,"endTime":1755567313115.5896,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/minimal-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see objects in dark room without light","status":"passed","title":"should not see objects in dark room without light","duration":3.8921549999995477,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see objects when carrying lit light source","status":"passed","title":"should see objects when carrying lit light source","duration":1.1477909999994154,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see when light source is off","status":"passed","title":"should not see when light source is off","duration":2.209092999999484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when light source is turned on","status":"passed","title":"should see when light source is turned on","duration":0.5799520000000484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when room has light source","status":"passed","title":"should see when room has light source","duration":0.9626640000005864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should work normally in lit rooms","status":"passed","title":"should work normally in lit rooms","duration":0.705007000000478,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","status":"skipped","title":"should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should handle underground darkness differently","status":"passed","title":"should handle underground darkness differently","duration":0.4652529999984836,"failureMessages":[],"meta":{}}],"startTime":1755567299969,"endTime":1755567299979.4653,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/darkness-light.test.ts"},{"assertionResults":[{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","status":"skipped","title":"should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should reveal concealed objects with detect magic","status":"passed","title":"should reveal concealed objects with detect magic","duration":3.4445369999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","status":"skipped","title":"should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should have remote viewing through crystal orb","status":"passed","title":"should have remote viewing through crystal orb","duration":0.6871789999986504,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should limit magical sight by power level","status":"passed","title":"should limit magical sight by power level","duration":1.0673079999996844,"failureMessages":[],"meta":{}}],"startTime":1755567300309,"endTime":1755567300315.0674,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/magic-sight.test.ts"},{"assertionResults":[{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear sounds from adjacent rooms","status":"passed","title":"should hear sounds from adjacent rooms","duration":3.1641380000000936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear loud sounds from further away","status":"passed","title":"should hear loud sounds from further away","duration":0.8217899999999645,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should not hear sounds through solid barriers","status":"passed","title":"should not hear sounds through solid barriers","duration":0.8379979999999705,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should support directional sound","status":"passed","title":"should support directional sound","duration":0.3871019999996861,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should combine multiple sound rules","status":"passed","title":"should combine multiple sound rules","duration":0.507115999999769,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should filter sounds by action type","status":"passed","title":"should filter sounds by action type","duration":0.590396999999939,"failureMessages":[],"meta":{}}],"startTime":1755567307573,"endTime":1755567307579.5903,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/sound-traveling.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden entities when window is closed","status":"passed","title":"should not see garden entities when window is closed","duration":4.363439000000653,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":1.066248999999516,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.0441380000002027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.9911679999995613,"failureMessages":[],"meta":{}}],"startTime":1755567286131,"endTime":1755567286137.9912,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility-fixed.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":4.890755999999783,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.5274650000001202,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should respect rule priorities when rules conflict","status":"passed","title":"should respect rule priorities when rules conflict","duration":1.0450440000004164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support scope rule removal","status":"passed","title":"should support scope rule removal","duration":1.4434469999996509,"failureMessages":[],"meta":{}}],"startTime":1755567307671,"endTime":1755567307680.4434,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share entities between WorldModel and AuthorModel","status":"passed","title":"should share entities between WorldModel and AuthorModel","duration":2.1353939999999056,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share spatial relationships between models","status":"passed","title":"should share spatial relationships between models","duration":1.8515489999999772,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share state between models","status":"passed","title":"should share state between models","duration":0.34252199999991717,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":1.3340820000003077,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.3309690000005503,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should bypass container trait requirement","status":"passed","title":"should bypass container trait requirement","duration":0.23919500000010885,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should not check for loops","status":"passed","title":"should not check for loops","duration":0.20815100000072562,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.4490729999997711,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.6076670000002196,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should use author: prefix for events","status":"passed","title":"should use author: prefix for events","duration":0.26962599999933445,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.6965940000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":0.7080109999997148,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers from specs","status":"passed","title":"should fill containers from specs","duration":0.3638179999998101,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup container properties","status":"passed","title":"should setup container properties","duration":0.21772099999998318,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":0.27600799999981973,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should remove entities completely","status":"passed","title":"should remove entities completely","duration":0.5725940000002083,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.19201299999986077,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player without validation","status":"passed","title":"should set player without validation","duration":0.16920399999980873,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear all world data","status":"passed","title":"should clear all world data","duration":0.3433469999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Real-World Usage Patterns"],"fullName":"AuthorModel Real-World Usage Patterns should handle complex world setup","status":"passed","title":"should handle complex world setup","duration":0.6224190000002636,"failureMessages":[],"meta":{}}],"startTime":1755567286517,"endTime":1755567286530.6223,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should store entity type in attributes","status":"passed","title":"should store entity type in attributes","duration":1.3584789999986242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should handle name property correctly","status":"passed","title":"should handle name property correctly","duration":0.9033220000001165,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should serialize with version number","status":"passed","title":"should serialize with version number","duration":0.4245069999997213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should deserialize both old and new formats","status":"passed","title":"should deserialize both old and new formats","duration":0.7986289999989822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in room exits","status":"passed","title":"should use IDs in room exits","duration":0.5769239999990532,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in door connections","status":"passed","title":"should use IDs in door connections","duration":0.35902100000021164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in exit traits","status":"passed","title":"should use IDs in exit traits","duration":0.4165549999997893,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","WorldModel persistence with entities"],"fullName":"Entity System with ID Refactor WorldModel persistence with entities should save and restore entities with proper IDs","status":"passed","title":"should save and restore entities with proper IDs","duration":0.9125780000013037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Entity relationships with IDs"],"fullName":"Entity System with ID Refactor Entity relationships with IDs should use IDs for all entity relationships","status":"passed","title":"should use IDs for all entity relationships","duration":1.2698790000013105,"failureMessages":[],"meta":{}}],"startTime":1755567300330,"endTime":1755567300338.2698,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entity-system-updates.test.ts"},{"assertionResults":[{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should generate sequential IDs with type prefixes","status":"passed","title":"should generate sequential IDs with type prefixes","duration":3.265849999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should throw error for unknown types","status":"passed","title":"should throw error for unknown types","duration":0.8029529999994338,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should use object type as default","status":"passed","title":"should use object type as default","duration":0.19759900000008201,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should handle base36 conversion correctly","status":"passed","title":"should handle base36 conversion correctly","duration":0.29854900000009366,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should store entity name in attributes","status":"passed","title":"should store entity name in attributes","duration":0.33269800000016403,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should allow duplicate names","status":"passed","title":"should allow duplicate names","duration":0.17959800000062387,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should remove entities by ID","status":"passed","title":"should remove entities by ID","duration":0.18416200000046956,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","persistence"],"fullName":"ID Generation System persistence should save and restore ID system state","status":"passed","title":"should save and restore ID system state","duration":0.5423620000001392,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity attributes"],"fullName":"ID Generation System entity attributes should set displayName in entity attributes","status":"passed","title":"should set displayName in entity attributes","duration":0.31672600000001694,"failureMessages":[],"meta":{}}],"startTime":1755567313084,"endTime":1755567313090.5425,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/id-generation.test.ts"},{"assertionResults":[{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support language-agnostic token representation","status":"passed","title":"should support language-agnostic token representation","duration":2.189802000000782,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support multiple parts of speech for a token","status":"passed","title":"should support multiple parts of speech for a token","duration":0.5666379999993296,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should handle unknown words","status":"passed","title":"should handle unknown words","duration":0.18776299999990442,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent simple verbs","status":"passed","title":"should represent simple verbs","duration":0.5237930000002962,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent phrasal verbs with particles","status":"passed","title":"should represent phrasal verbs with particles","duration":0.27132499999970605,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent multi-word verbs","status":"passed","title":"should represent multi-word verbs","duration":0.23328099999980623,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent simple nouns","status":"passed","title":"should represent simple nouns","duration":0.549314000000777,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent nouns with articles","status":"passed","title":"should represent nouns with articles","duration":0.20162900000013906,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent complex noun phrases","status":"passed","title":"should represent complex noun phrases","duration":0.34535700000014913,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should support multiple candidates","status":"passed","title":"should support multiple candidates","duration":0.2876960000003237,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should represent preposition phrases","status":"passed","title":"should represent preposition phrases","duration":0.13721499999974185,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should support multi-word prepositions","status":"passed","title":"should support multi-word prepositions","duration":0.09084400000028836,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a simple command","status":"passed","title":"should represent a simple command","duration":0.34394499999962136,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a transitive command","status":"passed","title":"should represent a transitive command","duration":0.16279299999951036,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a ditransitive command","status":"passed","title":"should represent a ditransitive command","duration":0.17124499999954423,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should support extras field for additional data","status":"passed","title":"should support extras field for additional data","duration":0.11854399999992893,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent unknown command errors","status":"passed","title":"should represent unknown command errors","duration":0.11542200000076264,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent syntax errors with position","status":"passed","title":"should represent syntax errors with position","duration":0.09232499999961874,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent ambiguous input errors","status":"passed","title":"should represent ambiguous input errors","duration":0.11882799999966664,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support legacy ParsedCommandV1 structure","status":"passed","title":"should support legacy ParsedCommandV1 structure","duration":0.16504600000007486,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support ParsedObjectReference","status":"passed","title":"should support ParsedObjectReference","duration":2.400539000000208,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should still have PartOfSpeech enum during migration","status":"passed","title":"should still have PartOfSpeech enum during migration","duration":0.21805899999981193,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should not have language-specific parts of speech","status":"passed","title":"should not have language-specific parts of speech","duration":0.6149020000002565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design ParsedCommand should not have language-specific fields at top level","status":"passed","title":"ParsedCommand should not have language-specific fields at top level","duration":0.7313840000006167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Token structure should support language data extension","status":"passed","title":"Token structure should support language data extension","duration":0.13931400000001304,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Pattern names should be opaque strings","status":"passed","title":"Pattern names should be opaque strings","duration":0.16641900000013266,"failureMessages":[],"meta":{}}],"startTime":1755567273494,"endTime":1755567273506.1665,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/parsed-command.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":4.241523999999117,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should enforce maximum nesting depth","status":"passed","title":"should enforce maximum nesting depth","duration":0.5928940000012517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should prevent circular containment","status":"passed","title":"should prevent circular containment","duration":1.0067479999997886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should calculate total weight including contents","status":"passed","title":"should calculate total weight including contents","duration":0.5015759999987495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should handle container capacity limits","status":"passed","title":"should handle container capacity limits","duration":1.0662969999993948,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle supporter and container combinations","status":"passed","title":"should handle supporter and container combinations","duration":1.1298590000005788,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle furniture with both surfaces and storage","status":"passed","title":"should handle furniture with both surfaces and storage","duration":0.8266180000009626,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should handle moving containers with contents","status":"passed","title":"should handle moving containers with contents","duration":0.6178970000000845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should update visibility when opening/closing containers","status":"passed","title":"should update visibility when opening/closing containers","duration":1.1350489999986166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find all containers of a specific type","status":"passed","title":"should find all containers of a specific type","duration":0.4298429999998916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find containers matching complex criteria","status":"passed","title":"should find containers matching complex criteria","duration":1.7771979999997711,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should handle large numbers of containers efficiently","status":"passed","title":"should handle large numbers of containers efficiently","duration":5.323296999999002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should efficiently check containment loops in complex hierarchies","status":"passed","title":"should efficiently check containment loops in complex hierarchies","duration":0.3922579999998561,"failureMessages":[],"meta":{}}],"startTime":1755567278977,"endTime":1755567278996.3923,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/container-hierarchies.test.ts"},{"assertionResults":[{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should create doors connecting two rooms","status":"passed","title":"should create doors connecting two rooms","duration":2.9354290000010224,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should synchronize door state between rooms","status":"passed","title":"should synchronize door state between rooms","duration":0.7530449999994744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should prevent opening locked doors","status":"passed","title":"should prevent opening locked doors","duration":0.9315569999998843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should unlock doors with correct key","status":"passed","title":"should unlock doors with correct key","duration":1.157112999999299,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should handle multiple locked doors","status":"passed","title":"should handle multiple locked doors","duration":1.1122899999991205,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle secret doors","status":"passed","title":"should handle secret doors","duration":2.1885890000012296,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle one-way doors","status":"passed","title":"should handle one-way doors","duration":0.6329449999993813,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle automatic closing doors","status":"passed","title":"should handle automatic closing doors","duration":0.21190700000079232,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should affect visibility through doors","status":"passed","title":"should affect visibility through doors","duration":1.16502600000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should handle doors with windows","status":"passed","title":"should handle doors with windows","duration":0.466867999999522,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle rooms with multiple doors","status":"passed","title":"should handle rooms with multiple doors","duration":1.3824309999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle double doors","status":"passed","title":"should handle double doors","duration":0.33736300000055053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should track door usage","status":"passed","title":"should track door usage","duration":0.25378400000045076,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should handle door with special requirements","status":"passed","title":"should handle door with special requirements","duration":0.2824749999999767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Performance with Many Doors"],"fullName":"Door Mechanics Integration Tests Performance with Many Doors should handle buildings with many doors efficiently","status":"passed","title":"should handle buildings with many doors efficiently","duration":0.704635000000053,"failureMessages":[],"meta":{}}],"startTime":1755567283090,"endTime":1755567283105.7046,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/door-mechanics.test.ts"},{"assertionResults":[{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should allow items to be placed in rooms without ContainerTrait","status":"passed","title":"should allow items to be placed in rooms without ContainerTrait","duration":5.325894000000517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should respect room capacity limits","status":"passed","title":"should respect room capacity limits","duration":0.3918809999995574,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should handle nested containers in rooms","status":"passed","title":"should handle nested containers in rooms","duration":0.8505889999996725,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should allow actors to carry items without ContainerTrait","status":"passed","title":"should allow actors to carry items without ContainerTrait","duration":0.965596999999434,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should handle actor inventory limits","status":"passed","title":"should handle actor inventory limits","duration":0.6414609999992535,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should prevent actors from being placed inside other actors","status":"passed","title":"should prevent actors from being placed inside other actors","duration":0.9409290000003239,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Container type detection"],"fullName":"Room and Actor as Containers Container type detection should correctly identify all container-capable entities","status":"passed","title":"should correctly identify all container-capable entities","duration":0.4080599999997503,"failureMessages":[],"meta":{}}],"startTime":1755567307138,"endTime":1755567307148.408,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-actor-containers.test.ts"},{"assertionResults":[{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should connect rooms with simple exits","status":"passed","title":"should connect rooms with simple exits","duration":2.5777069999985542,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should find paths between connected rooms","status":"passed","title":"should find paths between connected rooms","duration":1.310300000001007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should navigate through open doors","status":"passed","title":"should navigate through open doors","duration":1.0829979999998613,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle closed doors","status":"passed","title":"should handle closed doors","duration":0.49890099999902304,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle locked doors","status":"passed","title":"should handle locked doors","duration":0.9688280000009399,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should find alternative paths when doors are blocked","status":"passed","title":"should find alternative paths when doors are blocked","duration":0.8801849999999831,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle buildings with multiple floors","status":"passed","title":"should handle buildings with multiple floors","duration":0.5213829999993322,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle one-way passages","status":"passed","title":"should handle one-way passages","duration":0.38406599999871105,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should track first visits to rooms","status":"passed","title":"should track first visits to rooms","duration":1.3112610000007408,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should handle dark rooms and navigation","status":"passed","title":"should handle dark rooms and navigation","duration":1.1884050000007846,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle exit entities","status":"passed","title":"should handle exit entities","duration":0.42023599999993166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle entry points","status":"passed","title":"should handle entry points","duration":0.2826580000000831,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle large mazes efficiently","status":"passed","title":"should handle large mazes efficiently","duration":2.0858250000001135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle disconnected room groups","status":"passed","title":"should handle disconnected room groups","duration":0.3166700000001583,"failureMessages":[],"meta":{}}],"startTime":1755567300740,"endTime":1755567300756.3167,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-navigation.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not see contents of locked closed container","status":"passed","title":"should not see contents of locked closed container","duration":4.142829000000347,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not open locked container","status":"passed","title":"should not open locked container","duration":0.40061900000000605,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should see contents after unlocking and opening","status":"passed","title":"should see contents after unlocking and opening","duration":0.45550700000057986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should handle nested locked containers","status":"passed","title":"should handle nested locked containers","duration":0.41886000000158674,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should see items on supporter but not in closed container","status":"passed","title":"should see items on supporter but not in closed container","duration":0.8066670000007434,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should handle complex containment hierarchy","status":"passed","title":"should handle complex containment hierarchy","duration":0.9839490000013029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should include all scenery regardless of visibility","status":"passed","title":"should include all scenery regardless of visibility","duration":0.9183179999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should handle wearing items with containers","status":"passed","title":"should handle wearing items with containers","duration":0.872455999999147,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should exclude worn items when specified","status":"passed","title":"should exclude worn items when specified","duration":0.5972430000001623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should track complex worn item hierarchies","status":"passed","title":"should track complex worn item hierarchies","duration":0.5035960000004707,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should navigate through doors between rooms","status":"passed","title":"should navigate through doors between rooms","duration":1.8644399999993766,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should see in lit rooms but not dark rooms","status":"passed","title":"should see in lit rooms but not dark rooms","duration":0.5210449999995035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should handle door state synchronization","status":"passed","title":"should handle door state synchronization","duration":0.23112199999923178,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should track edible items in containers","status":"passed","title":"should track edible items in containers","duration":0.9523489999992307,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should handle consuming items from container","status":"passed","title":"should handle consuming items from container","duration":0.7025859999994282,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle readable items in locked containers on supporters","status":"passed","title":"should handle readable items in locked containers on supporters","duration":0.8744860000006156,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle switchable light sources affecting room visibility","status":"passed","title":"should handle switchable light sources affecting room visibility","duration":1.1340040000013687,"failureMessages":[],"meta":{}}],"startTime":1755567279524,"endTime":1755567279541.134,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should see through open containers","status":"passed","title":"should see through open containers","duration":5.850996999999552,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should not see into closed containers","status":"passed","title":"should not see into closed containers","duration":1.2241400000002614,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should handle mixed open/closed container chains","status":"passed","title":"should handle mixed open/closed container chains","duration":0.8685210000003281,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see items on supporters","status":"passed","title":"should see items on supporters","duration":0.7773340000003373,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see through containers on supporters","status":"passed","title":"should see through containers on supporters","duration":0.6701190000003407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should not see in dark rooms","status":"passed","title":"should not see in dark rooms","duration":0.4487840000001597,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with carried light source","status":"passed","title":"should see with carried light source","duration":0.4295189999993454,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with light source in room","status":"passed","title":"should see with light source in room","duration":0.1717239999998128,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should handle light in containers","status":"passed","title":"should handle light in containers","duration":0.6308869999993476,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see items carried by actors","status":"passed","title":"should see items carried by actors","duration":0.6970089999995253,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see worn items on actors","status":"passed","title":"should see worn items on actors","duration":0.6570780000001832,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should not see items in closed containers carried by actors","status":"passed","title":"should not see items in closed containers carried by actors","duration":0.45016600000053586,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see visible scenery","status":"passed","title":"should see visible scenery","duration":0.45100900000034017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should not see invisible scenery","status":"passed","title":"should not see invisible scenery","duration":1.1757590000015625,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see contents of visible scenery containers","status":"passed","title":"should see contents of visible scenery containers","duration":0.744552999998632,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle deep visibility chains","status":"passed","title":"should handle deep visibility chains","duration":0.7412490000006073,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle multiple visibility blockers","status":"passed","title":"should handle multiple visibility blockers","duration":1.8764719999999215,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle visibility with movement","status":"passed","title":"should handle visibility with movement","duration":0.6226429999987886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should get all items in scope","status":"passed","title":"should get all items in scope","duration":1.4659279999996215,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should handle scope in dark rooms with light","status":"passed","title":"should handle scope in dark rooms with light","duration":0.9755569999997533,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should handle large visibility calculations efficiently","status":"passed","title":"should handle large visibility calculations efficiently","duration":4.3790960000005725,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should cache visibility calculations","status":"passed","title":"should cache visibility calculations","duration":1.2888440000006085,"failureMessages":[],"meta":{}}],"startTime":1755567279211,"endTime":1755567279239.2888,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/visibility-chains.test.ts"},{"assertionResults":[{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should wear and remove simple items","status":"passed","title":"should wear and remove simple items","duration":3.543853000001036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should prevent wearing already worn items","status":"passed","title":"should prevent wearing already worn items","duration":0.5375430000003689,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should track multiple worn items","status":"passed","title":"should track multiple worn items","duration":0.7058899999992718,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should create functional clothing with pockets","status":"passed","title":"should create functional clothing with pockets","duration":2.6814699999995355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should maintain pocket contents when wearing clothing","status":"passed","title":"should maintain pocket contents when wearing clothing","duration":2.074703000000227,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","status":"skipped","title":"should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should support multiple layers of clothing","status":"passed","title":"should support multiple layers of clothing","duration":1.4291819999998552,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should handle mixed clothing and accessories","status":"passed","title":"should handle mixed clothing and accessories","duration":1.0789960000001884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle nested containers in pockets","status":"passed","title":"should handle nested containers in pockets","duration":1.4853249999996478,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle pocket access when clothing is in container","status":"passed","title":"should handle pocket access when clothing is in container","duration":1.7869449999998324,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle clothing that blocks slots","status":"passed","title":"should handle clothing that blocks slots","duration":0.4745249999996304,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.1839909999998781,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should track clothing condition","status":"passed","title":"should track clothing condition","duration":0.16800999999941268,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should handle actors with many worn items efficiently","status":"passed","title":"should handle actors with many worn items efficiently","duration":0.32885300000089046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should efficiently filter worn vs carried items","status":"passed","title":"should efficiently filter worn vs carried items","duration":1.779000000000451,"failureMessages":[],"meta":{}}],"startTime":1755567278971,"endTime":1755567278990.779,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/wearable-clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should validate entity has required traits","status":"passed","title":"should validate entity has required traits","duration":1.5334720000000743,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should get list of missing traits","status":"passed","title":"should get list of missing traits","duration":0.828178000000662,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should work with behaviors having no requirements","status":"passed","title":"should work with behaviors having no requirements","duration":0.21168200000010984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.7849720000003799,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should throw error when required trait is missing","status":"passed","title":"should throw error when required trait is missing","duration":0.29214500000034604,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.28935200000069017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return undefined when trait is missing","status":"passed","title":"should return undefined when trait is missing","duration":0.23107900000013615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors that check state","status":"passed","title":"should support behaviors that check state","duration":0.1958200000008219,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors with no requirements","status":"passed","title":"should support behaviors with no requirements","duration":0.273246000000654,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","inheritance"],"fullName":"Behavior inheritance should support behavior inheritance","status":"passed","title":"should support behavior inheritance","duration":0.5962790000003224,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","error messages"],"fullName":"Behavior error messages should provide clear error messages for missing traits","status":"passed","title":"should provide clear error messages for missing traits","duration":0.9670390000001134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","static nature"],"fullName":"Behavior static nature should not require instantiation","status":"passed","title":"should not require instantiation","duration":0.4588180000000648,"failureMessages":[],"meta":{}}],"startTime":1755567306569,"endTime":1755567306576.4587,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/behaviors/behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should add and retrieve entities","status":"passed","title":"should add and retrieve entities","duration":1.3293889999995372,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should return undefined for non-existent entities","status":"passed","title":"should return undefined for non-existent entities","duration":0.2528039999997418,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should remove entities and clear traits","status":"passed","title":"should remove entities and clear traits","duration":0.8566090000003896,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should clear all entities","status":"passed","title":"should clear all entities","duration":0.45387399999981426,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get all entities","status":"passed","title":"should get all entities","duration":1.3153629999997065,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get entities by type","status":"passed","title":"should get entities by type","duration":0.6143390000006548,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with specific trait","status":"passed","title":"should find entities with specific trait","duration":0.6386080000002039,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with all specified traits","status":"passed","title":"should find entities with all specified traits","duration":0.39616500000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with any specified traits","status":"passed","title":"should find entities with any specified traits","duration":0.593695999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","iteration"],"fullName":"EntityStore iteration should be iterable","status":"passed","title":"should be iterable","duration":0.4533190000001923,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":1.344742000000224,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.4519159999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","size property"],"fullName":"EntityStore size property should reflect number of entities","status":"passed","title":"should reflect number of entities","duration":0.21833200000037323,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle removing non-existent entity","status":"passed","title":"should handle removing non-existent entity","duration":0.2967800000005809,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle duplicate adds gracefully","status":"passed","title":"should handle duplicate adds gracefully","duration":0.11408999999912339,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should work with empty store","status":"passed","title":"should work with empty store","duration":0.39651800000046933,"failureMessages":[],"meta":{}}],"startTime":1755567295228,"endTime":1755567295239.3965,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/entity-store.test.ts"},{"assertionResults":[{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should create entity with id and type","status":"passed","title":"should create entity with id and type","duration":1.7268539999995483,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should accept creation params","status":"passed","title":"should accept creation params","duration":0.5142910000004122,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should add trait","status":"passed","title":"should add trait","duration":0.28202199999941513,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should remove trait","status":"passed","title":"should remove trait","duration":0.2343799999998737,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should replace existing trait of same type","status":"passed","title":"should replace existing trait of same type","duration":0.7125269999996817,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAll","status":"passed","title":"should check multiple traits with hasAll","duration":0.2474050000000716,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAny","status":"passed","title":"should check multiple traits with hasAny","duration":0.14612399999987247,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all traits","status":"passed","title":"should get all traits","duration":0.785174000000552,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all trait types","status":"passed","title":"should get all trait types","duration":0.4271470000003319,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should clear all traits","status":"passed","title":"should clear all traits","duration":0.1999500000001717,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should support trait aliases (getTrait, hasTrait)","status":"passed","title":"should support trait aliases (getTrait, hasTrait)","duration":0.1441450000002078,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify rooms","status":"passed","title":"should identify rooms","duration":0.16329399999995076,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify containers","status":"passed","title":"should identify containers","duration":0.16000799999983428,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify takeable items","status":"passed","title":"should identify takeable items","duration":0.10187899999982619,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get name from displayName attribute first","status":"passed","title":"should get name from displayName attribute first","duration":0.15136700000039127,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get weight from attributes","status":"passed","title":"should get weight from attributes","duration":0.07365500000014435,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","cloning"],"fullName":"IFEntity cloning should create deep copy with new ID","status":"passed","title":"should create deep copy with new ID","duration":0.47844699999950535,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":2.2064570000002277,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.3402559999994992,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect openable trait","status":"passed","title":"should detect openable trait","duration":0.1402219999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect lockable trait","status":"passed","title":"should detect lockable trait","duration":0.1742260000000897,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","light source properties"],"fullName":"IFEntity light source properties should detect light provision","status":"passed","title":"should detect light provision","duration":0.1248089999999138,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","switchable properties"],"fullName":"IFEntity switchable properties should detect switchable state","status":"passed","title":"should detect switchable state","duration":0.5041960000007748,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","actor properties"],"fullName":"IFEntity actor properties should detect actors and players","status":"passed","title":"should detect actors and players","duration":0.3901059999998324,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","error handling"],"fullName":"IFEntity error handling should throw error for invalid traits","status":"passed","title":"should throw error for invalid traits","duration":0.7970519999998942,"failureMessages":[],"meta":{}}],"startTime":1755567285284,"endTime":1755567285295.797,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/if-entity.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":2.3926799999999275,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should share entities with WorldModel","status":"passed","title":"should share entities with WorldModel","duration":0.3827629999996134,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should remove entities","status":"passed","title":"should remove entities","duration":0.30130300000018906,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":1.2592009999998481,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.3962419999998019,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":0.6539750000001732,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.5459689999997863,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":0.5638269999999466,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup containers with properties","status":"passed","title":"should setup containers with properties","duration":0.40165999999953783,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers with item specs","status":"passed","title":"should fill containers with item specs","duration":0.5996649999997317,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should place actors at locations","status":"passed","title":"should place actors at locations","duration":0.3904689999999391,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set state values","status":"passed","title":"should set state values","duration":0.14812699999947654,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player","status":"passed","title":"should set player","duration":0.11514700000043376,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear world data","status":"passed","title":"should clear world data","duration":0.2072680000001128,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.15079599999990023,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should add and remove traits","status":"passed","title":"should add and remove traits","duration":0.27251499999965745,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Scope and Visibility Integration"],"fullName":"AuthorModel Scope and Visibility Integration should include items in closed containers in scope","status":"passed","title":"should include items in closed containers in scope","duration":1.3156239999998434,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.2949300000000221,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.12499600000046485,"failureMessages":[],"meta":{}}],"startTime":1755567287207,"endTime":1755567287218.295,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the room the observer is in","status":"passed","title":"should include the room the observer is in","duration":5.722176000000218,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in the same room","status":"passed","title":"should include items in the same room","duration":0.7924290000000838,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers in the room","status":"passed","title":"should include items in containers in the room","duration":0.6619339999997464,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","status":"skipped","title":"should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items carried by the observer","status":"passed","title":"should include items carried by the observer","duration":0.3767600000001039,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers carried by the observer","status":"passed","title":"should include items in containers carried by the observer","duration":0.6359400000001187,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the observer itself","status":"passed","title":"should include the observer itself","duration":0.3509380000004967,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle empty room","status":"passed","title":"should handle empty room","duration":0.6460440000000744,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should return empty array if observer not in a room","status":"passed","title":"should return empty array if observer not in a room","duration":1.4632689999998547,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle unique entities (no duplicates)","status":"passed","title":"should handle unique entities (no duplicates)","duration":0.7367119999998977,"failureMessages":[],"meta":{}}],"startTime":1755567307149,"endTime":1755567307160.7368,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/get-in-scope.test.ts"},{"assertionResults":[{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add child to parent","status":"passed","title":"should add child to parent","duration":1.7664519999998447,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add multiple children to parent","status":"passed","title":"should add multiple children to parent","duration":1.3212750000002416,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should remove child from parent","status":"passed","title":"should remove child from parent","duration":0.3490360000005239,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should move child to new parent","status":"passed","title":"should move child to new parent","duration":0.33320700000058423,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent parent","status":"passed","title":"should handle non-existent parent","duration":0.4967399999995905,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent child","status":"passed","title":"should handle non-existent child","duration":0.14326700000037818,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove entity and its relationships","status":"passed","title":"should remove entity and its relationships","duration":0.4553700000005847,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove only specified child","status":"passed","title":"should remove only specified child","duration":0.21724799999992683,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should handle removing non-existent child","status":"passed","title":"should handle removing non-existent child","duration":0.2902670000003127,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should clean up empty parent sets","status":"passed","title":"should clean up empty parent sets","duration":0.15014400000018213,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return true for parent with children","status":"passed","title":"should return true for parent with children","duration":0.13019100000019534,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false for parent without children","status":"passed","title":"should return false for parent without children","duration":0.059513000000151806,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false after removing all children","status":"passed","title":"should return false after removing all children","duration":0.093431999999666,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should get all descendants","status":"passed","title":"should get all descendants","duration":2.884132000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should respect max depth","status":"passed","title":"should respect max depth","duration":1.2268620000004375,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle entity with no descendants","status":"passed","title":"should handle entity with no descendants","duration":0.3488969999998517,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle circular references","status":"passed","title":"should handle circular references","duration":0.1542859999999564,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should collect all descendants up to max depth","status":"passed","title":"should collect all descendants up to max depth","duration":0.30583200000000943,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get all ancestors","status":"passed","title":"should get all ancestors","duration":0.7692050000005111,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get ancestors up to depth","status":"passed","title":"should get ancestors up to depth","duration":0.4242420000000493,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle entity with no ancestors","status":"passed","title":"should handle entity with no ancestors","duration":0.3509960000001229,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle missing entity","status":"passed","title":"should handle missing entity","duration":0.3216550000006464,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","clear"],"fullName":"SpatialIndex clear should clear all relationships","status":"passed","title":"should clear all relationships","duration":0.3623269999998229,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.3805629999997109,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should load from JSON","status":"passed","title":"should load from JSON","duration":2.095672000000377,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should handle empty JSON","status":"passed","title":"should handle empty JSON","duration":0.18188799999916228,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should clear before loading","status":"passed","title":"should clear before loading","duration":0.11758199999985663,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle adding same child multiple times","status":"passed","title":"should handle adding same child multiple times","duration":0.0899650000001202,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle removing child from wrong parent","status":"passed","title":"should handle removing child from wrong parent","duration":0.07873399999971298,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle self-parenting","status":"passed","title":"should handle self-parenting","duration":0.06832000000031258,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle very deep hierarchies","status":"passed","title":"should handle very deep hierarchies","duration":0.43124900000020716,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should maintain consistency when moving entities","status":"passed","title":"should maintain consistency when moving entities","duration":0.1886240000003454,"failureMessages":[],"meta":{}}],"startTime":1755567285185,"endTime":1755567285203.4312,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/spatial-index.test.ts"},{"assertionResults":[{"ancestorTitles":["Verify moveEntity issue"],"fullName":"Verify moveEntity issue should not allow moving items into closed containers","status":"passed","title":"should not allow moving items into closed containers","duration":1.1605529999997088,"failureMessages":[],"meta":{}}],"startTime":1755567315325,"endTime":1755567315326.1606,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/verify-move-issue.test.ts"},{"assertionResults":[{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should always see self","status":"passed","title":"should always see self","duration":2.2770070000005944,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in same room","status":"passed","title":"should see entities in same room","duration":0.367313999999169,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in different room","status":"passed","title":"should not see entities in different room","duration":0.2817749999994703,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see the room observer is in","status":"passed","title":"should see the room observer is in","duration":0.15117300000019895,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see invisible entities","status":"passed","title":"should not see invisible entities","duration":0.2858639999994921,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in transparent containers","status":"passed","title":"should see entities in transparent containers","duration":0.19880099999863887,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in open opaque containers","status":"passed","title":"should see entities in open opaque containers","duration":0.23434000000088417,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in closed opaque containers","status":"passed","title":"should not see entities in closed opaque containers","duration":0.1434399999998277,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should handle nested containers","status":"passed","title":"should handle nested containers","duration":0.4266719999995985,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should block sight through any closed container in path","status":"passed","title":"should block sight through any closed container in path","duration":0.30099499999960244,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not see anything in dark room without light","status":"passed","title":"should not see anything in dark room without light","duration":0.8172529999992548,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should only see lit light sources in dark room","status":"passed","title":"should only see lit light sources in dark room","duration":0.39941499999986263,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should see everything when carrying lit lamp","status":"passed","title":"should see everything when carrying lit lamp","duration":0.4054070000001957,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not benefit from light in closed container","status":"passed","title":"should not benefit from light in closed container","duration":1.402404000000388,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should handle room lighting toggle","status":"passed","title":"should handle room lighting toggle","duration":0.38644399999975576,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should return all visible entities","status":"passed","title":"should return all visible entities","duration":2.2699400000001333,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should include carried items","status":"passed","title":"should include carried items","duration":0.2809560000005149,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle empty room","status":"passed","title":"should handle empty room","duration":0.5452800000002753,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle observer not in room","status":"passed","title":"should handle observer not in room","duration":0.49169200000142155,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for uncontained entities","status":"passed","title":"should return true for uncontained entities","duration":0.15979800000059186,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for invisible scenery","status":"passed","title":"should return false for invisible scenery","duration":0.09799899999961781,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in transparent container","status":"passed","title":"should return true for entity in transparent container","duration":0.08512899999914225,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in open opaque container","status":"passed","title":"should return true for entity in open opaque container","duration":0.08005299999967974,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for entity in closed opaque container","status":"passed","title":"should return false for entity in closed opaque container","duration":1.076973999999609,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should handle opaque container without openable trait","status":"passed","title":"should handle opaque container without openable trait","duration":0.13260799999989104,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle deeply nested visibility","status":"passed","title":"should handle deeply nested visibility","duration":0.2716039999995701,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle supporter visibility","status":"passed","title":"should handle supporter visibility","duration":0.12165800000002491,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle visibility in nested containers","status":"passed","title":"should handle visibility in nested containers","duration":0.6758059999992838,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle circular containment gracefully","status":"passed","title":"should handle circular containment gracefully","duration":0.6858029999984865,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.1992870000012772,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle entities with no location","status":"passed","title":"should handle entities with no location","duration":0.2443119999988994,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle max depth in containment path","status":"passed","title":"should handle max depth in containment path","duration":0.5663260000001173,"failureMessages":[],"meta":{}}],"startTime":1755567278870,"endTime":1755567278886.5664,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/visibility-behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should create empty world model","status":"passed","title":"should create empty world model","duration":2.1557279999997263,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should accept configuration","status":"passed","title":"should accept configuration","duration":0.22747800000070129,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entity with auto-generated ID","status":"passed","title":"should create entity with auto-generated ID","duration":0.4827000000004773,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should generate correct type-prefixed IDs","status":"passed","title":"should generate correct type-prefixed IDs","duration":0.30757699999958277,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should allow multiple entities with same displayName","status":"passed","title":"should allow multiple entities with same displayName","duration":0.315204000000449,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entities with displayName","status":"passed","title":"should create entities with displayName","duration":0.1795910000000731,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get entity by id","status":"passed","title":"should get entity by id","duration":0.15991699999904085,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return undefined for missing entity","status":"passed","title":"should return undefined for missing entity","duration":0.12311299999964831,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should check entity existence","status":"passed","title":"should check entity existence","duration":0.2406620000001567,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should remove entity","status":"passed","title":"should remove entity","duration":0.22012200000062876,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return false when removing non-existent entity","status":"passed","title":"should return false when removing non-existent entity","duration":0.0782279999984894,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get all entities","status":"passed","title":"should get all entities","duration":0.9209069999997155,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should update entity","status":"passed","title":"should update entity","duration":0.17523400000027323,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle updating non-existent entity","status":"passed","title":"should handle updating non-existent entity","duration":0.07817199999954028,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should throw in strict mode when updating non-existent entity","status":"passed","title":"should throw in strict mode when updating non-existent entity","duration":0.5258740000008402,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should store displayName in entity attributes","status":"passed","title":"should store displayName in entity attributes","duration":0.3730009999999311,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should increment ID counters correctly","status":"passed","title":"should increment ID counters correctly","duration":0.11502300000029209,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle ID counter overflow","status":"passed","title":"should handle ID counter overflow","duration":2.1837889999987965,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get entity location","status":"passed","title":"should get entity location","duration":0.40366399999948044,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get container contents","status":"passed","title":"should get container contents","duration":0.3598700000002282,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should move entity","status":"passed","title":"should move entity","duration":0.18403500000022177,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should remove entity from world","status":"passed","title":"should remove entity from world","duration":0.37749000000076194,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should check if move is valid","status":"passed","title":"should check if move is valid","duration":0.13845000000037544,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent moving to non-container","status":"passed","title":"should prevent moving to non-container","duration":0.07192600000053062,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent containment loops","status":"passed","title":"should prevent containment loops","duration":0.33117300000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get containing room","status":"passed","title":"should get containing room","duration":0.2862650000006397,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get all contents recursively","status":"passed","title":"should get all contents recursively","duration":0.41939800000000105,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should handle max depth limit","status":"passed","title":"should handle max depth limit","duration":0.17707699999846227,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should work with entity IDs","status":"passed","title":"should work with entity IDs","duration":0.20108100000106788,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state","status":"passed","title":"should get and set state","duration":0.18996100000003935,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state values","status":"passed","title":"should get and set state values","duration":0.11175700000057986,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should handle nested state values","status":"passed","title":"should handle nested state values","duration":0.07301000000006752,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by trait","status":"passed","title":"should find entities by trait","duration":0.39894600000116043,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by type","status":"passed","title":"should find entities by type","duration":0.21799800000007963,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities with predicate","status":"passed","title":"should find entities with predicate","duration":0.13243900000088615,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find all entities without filtering","status":"passed","title":"should find all entities without filtering","duration":0.7549519999993208,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should get entities in scope","status":"passed","title":"should get entities in scope","duration":0.6444609999998647,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should include carried items in scope","status":"passed","title":"should include carried items in scope","duration":0.1744170000001759,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should check visibility","status":"passed","title":"should check visibility","duration":0.19816700000046694,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should work with direct IDs for visibility","status":"passed","title":"should work with direct IDs for visibility","duration":0.09743600000001607,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should add relationship","status":"passed","title":"should add relationship","duration":0.14778900000055728,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should get related entities","status":"passed","title":"should get related entities","duration":0.244048999998995,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should remove relationship","status":"passed","title":"should remove relationship","duration":0.13026200000058452,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle multiple relationship types","status":"passed","title":"should handle multiple relationship types","duration":0.08567799999946146,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle non-existent entities in non-strict mode","status":"passed","title":"should handle non-existent entities in non-strict mode","duration":0.07114800000090327,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should throw in strict mode for non-existent entities","status":"passed","title":"should throw in strict mode for non-existent entities","duration":0.13653299999896262,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should calculate total weight","status":"passed","title":"should calculate total weight","duration":0.23244400000112364,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should detect containment loops","status":"passed","title":"should detect containment loops","duration":0.09655899999961548,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should find path between rooms","status":"passed","title":"should find path between rooms","duration":0.3291090000002441,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should get and set player","status":"passed","title":"should get and set player","duration":0.11663699999917299,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should throw when setting non-existent player","status":"passed","title":"should throw when setting non-existent player","duration":0.1281010000002425,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.32267700000011246,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.5705440000001545,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should handle loading old saves without ID system data","status":"passed","title":"should handle loading old saves without ID system data","duration":0.2585980000003474,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should clear world","status":"passed","title":"should clear world","duration":0.1728820000007545,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should register and apply event handler","status":"passed","title":"should register and apply event handler","duration":0.16421699999955308,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should validate events","status":"passed","title":"should validate events","duration":0.09564099999988684,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should throw when applying invalid event","status":"passed","title":"should throw when applying invalid event","duration":0.12902200000098674,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should preview event changes","status":"passed","title":"should preview event changes","duration":0.14512000000104308,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should track event history","status":"passed","title":"should track event history","duration":0.10682799999995041,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should get events since timestamp","status":"passed","title":"should get events since timestamp","duration":0.09737200000017765,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should clear event history","status":"passed","title":"should clear event history","duration":0.08674100000098406,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should unregister event handler","status":"passed","title":"should unregister event handler","duration":0.1449190000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should handle unregistered events silently","status":"passed","title":"should handle unregistered events silently","duration":0.23681699999906414,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle empty world operations","status":"passed","title":"should handle empty world operations","duration":1.4422770000001037,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle removing entity with contents","status":"passed","title":"should handle removing entity with contents","duration":0.2764080000015383,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle circular references in toJSON","status":"passed","title":"should handle circular references in toJSON","duration":0.38823500000034983,"failureMessages":[],"meta":{}}],"startTime":1755567278758,"endTime":1755567278780.3882,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/world-model.test.ts"},{"assertionResults":[{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.500502000000779,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6486190000014176,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should merge pronouns when partially provided","status":"passed","title":"should merge pronouns when partially provided","duration":0.1850429999994958,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should handle partial inventory limits","status":"passed","title":"should handle partial inventory limits","duration":0.11209899999994377,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should set pronouns using setPronouns method","status":"passed","title":"should set pronouns using setPronouns method","duration":0.25595500000054017,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should partially update pronouns","status":"passed","title":"should partially update pronouns","duration":0.20996000000013737,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should set inventory limits using setInventoryLimit method","status":"passed","title":"should set inventory limits using setInventoryLimit method","duration":0.13616100000035658,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should partially update inventory limits","status":"passed","title":"should partially update inventory limits","duration":0.11356199999863748,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should create inventory limit if not exists","status":"passed","title":"should create inventory limit if not exists","duration":0.2394559999993362,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should make actor a player using makePlayer method","status":"passed","title":"should make actor a player using makePlayer method","duration":0.2997770000001765,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should ensure player is always playable","status":"passed","title":"should ensure player is always playable","duration":0.11473999999907392,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should set custom properties using setCustomProperty","status":"passed","title":"should set custom properties using setCustomProperty","duration":0.11110200000075565,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should get custom properties using getCustomProperty","status":"passed","title":"should get custom properties using getCustomProperty","duration":0.13469199999963166,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should create customProperties object if not exists","status":"passed","title":"should create customProperties object if not exists","duration":0.08007199999883596,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should overwrite existing custom properties","status":"passed","title":"should overwrite existing custom properties","duration":0.09015700000054494,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should handle various data types in custom properties","status":"passed","title":"should handle various data types in custom properties","duration":0.22123999999894295,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should handle state changes","status":"passed","title":"should handle state changes","duration":0.1152910000000702,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should maintain state through other property changes","status":"passed","title":"should maintain state through other property changes","duration":0.07771799999864015,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.31598699999995006,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should work with container trait for inventory","status":"passed","title":"should work with container trait for inventory","duration":0.20272300000033283,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create NPCs with custom properties","status":"passed","title":"should create NPCs with custom properties","duration":0.2364049999996496,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create player with inventory limits","status":"passed","title":"should create player with inventory limits","duration":0.20739700000012817,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.3739799999984825,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":1.3354729999991832,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.3199160000003758,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle pronoun edge cases","status":"passed","title":"should handle pronoun edge cases","duration":0.26421599999957834,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should preserve existing data during construction","status":"passed","title":"should preserve existing data during construction","duration":0.17926299999999173,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should handle multiple actors in a world","status":"passed","title":"should handle multiple actors in a world","duration":0.24567299999944225,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should support actor transformation","status":"passed","title":"should support actor transformation","duration":0.204913999999917,"failureMessages":[],"meta":{}}],"startTime":1755567302762,"endTime":1755567302772.2456,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/actor.test.ts"},{"assertionResults":[{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.6145239999996193,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3659189999998489,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should handle all attachment types","status":"passed","title":"should handle all attachment types","duration":0.1916240000000471,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track what object is attached to","status":"passed","title":"should track what object is attached to","duration":0.15554599999995844,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle detachable attachments","status":"passed","title":"should handle detachable attachments","duration":0.20380300000033458,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle permanent attachments","status":"passed","title":"should handle permanent attachments","duration":0.15573399999993853,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track loose state","status":"passed","title":"should track loose state","duration":0.12063299999954324,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.4381200000007084,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should handle various attached objects","status":"passed","title":"should handle various attached objects","duration":0.28508899999997084,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle object breaking on detach","status":"passed","title":"should handle object breaking on detach","duration":0.15015200000016193,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle attachment point breaking","status":"passed","title":"should handle attachment point breaking","duration":0.07686000000012427,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle clean detachment","status":"passed","title":"should handle clean detachment","duration":0.07916500000010274,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should store detach sound","status":"passed","title":"should store detach sound","duration":0.06829800000014075,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should have appropriate sounds for attachment types","status":"passed","title":"should have appropriate sounds for attachment types","duration":0.19380100000034872,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1079280000003564,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.18736399999943387,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09520200000042678,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle very strong attachment","status":"passed","title":"should handle very strong attachment","duration":0.0710399999998117,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle attachment without target","status":"passed","title":"should handle attachment without target","duration":0.06472399999984191,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle partial detach effects","status":"passed","title":"should handle partial detach effects","duration":0.0852629999999408,"failureMessages":[],"meta":{}}],"startTime":1755567287244,"endTime":1755567287249.0952,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/attached.test.ts"},{"assertionResults":[{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.5964389999999185,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.32531900000049063,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should handle all ring patterns","status":"passed","title":"should handle all ring patterns","duration":0.1556460000001607,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should track bell association","status":"passed","title":"should track bell association","duration":0.11463999999978114,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle broken state","status":"passed","title":"should handle broken state","duration":0.17076300000007905,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should define audible distance","status":"passed","title":"should define audible distance","duration":0.1589349999994738,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle ring count variations","status":"passed","title":"should handle ring count variations","duration":0.1648189999996248,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should work with pullable and cord traits","status":"passed","title":"should work with pullable and cord traits","duration":0.4405960000003688,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should handle multiple bell pulls","status":"passed","title":"should handle multiple bell pulls","duration":0.32677700000022014,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should support different bell sounds","status":"passed","title":"should support different bell sounds","duration":0.20953300000019226,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should handle custom ring patterns","status":"passed","title":"should handle custom ring patterns","duration":0.1087969999998677,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should handle broken state","status":"passed","title":"should handle broken state","duration":0.07137099999999919,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should track previously working bell","status":"passed","title":"should track previously working bell","duration":0.07695500000045286,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.09551100000044244,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08787299999949028,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1245390000003681,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle silent bell (audibleDistance 0)","status":"passed","title":"should handle silent bell (audibleDistance 0)","duration":0.05355199999939941,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle very loud bell","status":"passed","title":"should handle very loud bell","duration":0.05814900000041234,"failureMessages":[],"meta":{}}],"startTime":1755567311070,"endTime":1755567311075.058,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/bell-pull.test.ts"},{"assertionResults":[{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.417065999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.0465439999998125,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should handle all break methods","status":"passed","title":"should handle all break methods","duration":0.2886370000005627,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track hits taken","status":"passed","title":"should track hits taken","duration":0.35798700000032113,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track partial breaking","status":"passed","title":"should track partial breaking","duration":0.2708680000005188,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle tool requirements","status":"passed","title":"should handle tool requirements","duration":0.26467000000047847,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.1746499999999287,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3110820000001695,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should work with multiple breakable objects","status":"passed","title":"should work with multiple breakable objects","duration":0.34951900000032765,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle breaking into pieces","status":"passed","title":"should handle breaking into pieces","duration":1.0421589999996286,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle revealing contents","status":"passed","title":"should handle revealing contents","duration":0.15592299999934767,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle no break products","status":"passed","title":"should handle no break products","duration":0.11122400000022026,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.12820100000044476,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.12882100000024366,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.13031800000044313,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.19888600000012957,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10329400000046007,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a breakable wooden door","status":"passed","title":"should create a breakable wooden door","duration":0.1511609999997745,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a cuttable rope","status":"passed","title":"should create a cuttable rope","duration":0.10950200000024779,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a meltable ice barrier","status":"passed","title":"should create a meltable ice barrier","duration":0.08802300000024843,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a container that reveals contents","status":"passed","title":"should create a container that reveals contents","duration":0.09272899999996298,"failureMessages":[],"meta":{}}],"startTime":1755567291226,"endTime":1755567291236.1511,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/breakable.test.ts"},{"assertionResults":[{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.4305899999999383,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9509720000005473,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button sizes","status":"passed","title":"should handle all button sizes","duration":0.218630999999732,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button shapes","status":"passed","title":"should handle all button shapes","duration":0.17014600000038627,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4514469999994617,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.291932000000088,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle momentary button","status":"passed","title":"should handle momentary button","duration":0.14962399999967602,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle latching button","status":"passed","title":"should handle latching button","duration":0.10301299999991897,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should store button appearance","status":"passed","title":"should store button appearance","duration":0.2647690000012517,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle labeled buttons","status":"passed","title":"should handle labeled buttons","duration":0.1620760000005248,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle various button materials","status":"passed","title":"should handle various button materials","duration":0.12450299999909475,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should track pressed state","status":"passed","title":"should track pressed state","duration":0.11960499999986496,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should initialize with pressed state","status":"passed","title":"should initialize with pressed state","duration":0.09335699999974167,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1005250000016531,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09309299999949872,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08878999999978987,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle complex button configurations","status":"passed","title":"should handle complex button configurations","duration":0.14917400000013004,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create emergency stop button","status":"passed","title":"should create emergency stop button","duration":0.171556999999666,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create elevator call button","status":"passed","title":"should create elevator call button","duration":0.10105499999917811,"failureMessages":[],"meta":{}}],"startTime":1755567278052,"endTime":1755567278058.1716,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/button.test.ts"},{"assertionResults":[{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.7466220000005706,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.25976600000103645,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should have all wearable properties","status":"passed","title":"should have all wearable properties","duration":0.6395170000014332,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support various materials","status":"passed","title":"should support various materials","duration":0.33168099999966216,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support composite materials","status":"passed","title":"should support composite materials","duration":0.2703509999992093,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should track condition states","status":"passed","title":"should track condition states","duration":0.2126830000015616,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle condition degradation","status":"passed","title":"should handle condition degradation","duration":0.11695900000086112,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle non-damageable items","status":"passed","title":"should handle non-damageable items","duration":0.09780899999896064,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support various styles","status":"passed","title":"should support various styles","duration":0.32175399999869114,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support custom style descriptions","status":"passed","title":"should support custom style descriptions","duration":0.13543199999912758,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should create clothing that can contain pockets","status":"passed","title":"should create clothing that can contain pockets","duration":0.8305190000010043,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should attach pockets to clothing","status":"passed","title":"should attach pockets to clothing","duration":2.527309000000969,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should maintain pocket contents when clothing is worn","status":"passed","title":"should maintain pocket contents when clothing is worn","duration":0.6775760000000446,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support standard clothing slots","status":"passed","title":"should support standard clothing slots","duration":0.3439639999996871,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support layered clothing","status":"passed","title":"should support layered clothing","duration":0.1862700000001496,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle clothing that blocks other slots","status":"passed","title":"should handle clothing that blocks other slots","duration":0.28220000000146683,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.11157300000013493,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle custom wear/remove messages","status":"passed","title":"should handle custom wear/remove messages","duration":0.31613800000013725,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should create various clothing items","status":"passed","title":"should create various clothing items","duration":0.42578799999864714,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should distinguish between clothing and simple wearables","status":"passed","title":"should distinguish between clothing and simple wearables","duration":0.20853900000111025,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle multi-pocket utility clothing","status":"passed","title":"should handle multi-pocket utility clothing","duration":2.4150340000014694,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle outfit sets with matching properties","status":"passed","title":"should handle outfit sets with matching properties","duration":0.5708290000002307,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle damaged clothing states","status":"passed","title":"should handle damaged clothing states","duration":0.36644300000079966,"failureMessages":[],"meta":{}}],"startTime":1755567291649,"endTime":1755567291663.5708,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should have container properties","status":"passed","title":"should have container properties","duration":2.35101399999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.23005499999999302,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.25075900000047113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should have container properties","status":"passed","title":"should have container properties","duration":0.5212929999997868,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.1559189999998125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.3667519999999058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should update capacity through setInventoryLimit","status":"passed","title":"should update capacity through setInventoryLimit","duration":0.28826000000026397,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from room","status":"passed","title":"should get container trait from room","duration":0.22814800000014657,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from actor","status":"passed","title":"should get container trait from actor","duration":0.19992100000035862,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get explicit container trait first","status":"passed","title":"should get explicit container trait first","duration":0.2427059999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should return undefined for non-container entities","status":"passed","title":"should return undefined for non-container entities","duration":0.16878099999939877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow moving items into rooms without explicit ContainerTrait","status":"passed","title":"should allow moving items into rooms without explicit ContainerTrait","duration":0.19167300000026444,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow actors to carry items without explicit ContainerTrait","status":"passed","title":"should allow actors to carry items without explicit ContainerTrait","duration":0.11863099999936821,"failureMessages":[],"meta":{}}],"startTime":1755567306394,"endTime":1755567306400.1917,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container-capability.test.ts"},{"assertionResults":[{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.313564000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":2.243150999998761,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle weight limit","status":"passed","title":"should handle weight limit","duration":1.0677680000007967,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle volume limit","status":"passed","title":"should handle volume limit","duration":0.3614059999999881,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle item count limit","status":"passed","title":"should handle item count limit","duration":0.6788440000000264,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle multiple constraints","status":"passed","title":"should handle multiple constraints","duration":0.5168539999995119,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.29689500000131375,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should default to opaque","status":"passed","title":"should default to opaque","duration":0.22935099999995145,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should handle transparent containers","status":"passed","title":"should handle transparent containers","duration":0.6087479999987409,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should default to not enterable","status":"passed","title":"should default to not enterable","duration":0.3750629999994999,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should handle enterable containers","status":"passed","title":"should handle enterable containers","duration":0.3312370000003284,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.35920699999951466,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.41812600000048405,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":1.5219160000015108,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle no type restrictions","status":"passed","title":"should handle no type restrictions","duration":0.3197890000010375,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.26800900000125694,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should replace existing container trait","status":"passed","title":"should replace existing container trait","duration":0.24793200000021898,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle transparent container setup","status":"passed","title":"should handle transparent container setup","duration":1.1579669999991893,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle secure container setup","status":"passed","title":"should handle secure container setup","duration":0.5039049999995768,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle nested container setup","status":"passed","title":"should handle nested container setup","duration":0.2444020000002638,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty capacity object","status":"passed","title":"should handle empty capacity object","duration":0.39720500000112224,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty arrays for type restrictions","status":"passed","title":"should handle empty arrays for type restrictions","duration":0.37989700000071025,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle zero capacity values","status":"passed","title":"should handle zero capacity values","duration":0.2755399999987276,"failureMessages":[],"meta":{}}],"startTime":1755567278967,"endTime":1755567278984.38,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container.test.ts"},{"assertionResults":[{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.8244850000000952,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.38275100000009843,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should handle all cord types","status":"passed","title":"should handle all cord types","duration":0.2004159999996773,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should track tension state","status":"passed","title":"should track tension state","duration":0.18926300000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle length properties","status":"passed","title":"should handle length properties","duration":0.22650100000009843,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle breakable cords","status":"passed","title":"should handle breakable cords","duration":0.46732299999985116,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle unbreakable cords","status":"passed","title":"should handle unbreakable cords","duration":0.21658599999955186,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.7220600000000559,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should handle different cord materials","status":"passed","title":"should handle different cord materials","duration":1.0135350000000471,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should store activation target","status":"passed","title":"should store activation target","duration":0.3380910000005315,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should handle cords without activation","status":"passed","title":"should handle cords without activation","duration":0.1513199999999415,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should store pull and break sounds","status":"passed","title":"should store pull and break sounds","duration":0.1797630000000936,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should handle cords without sounds","status":"passed","title":"should handle cords without sounds","duration":0.1031650000004447,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should have different sounds for different materials","status":"passed","title":"should have different sounds for different materials","duration":0.32438100000035774,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1668340000005628,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.5886780000000726,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1963850000001912,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle cord at max extension","status":"passed","title":"should handle cord at max extension","duration":0.11243199999989884,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle very weak cord","status":"passed","title":"should handle very weak cord","duration":0.11124399999971502,"failureMessages":[],"meta":{}}],"startTime":1755567293573,"endTime":1755567293581.1963,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/cord.test.ts"},{"assertionResults":[{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.5996350000004895,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9606970000004367,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should handle all display types","status":"passed","title":"should handle all display types","duration":0.21343199999955687,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.35350500000004104,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should work with TurnableTrait","status":"passed","title":"should work with TurnableTrait","duration":0.4438559999998688,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle numbered dial with tick marks","status":"passed","title":"should handle numbered dial with tick marks","duration":0.2919019999999364,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle labeled dial","status":"passed","title":"should handle labeled dial","duration":0.9916050000001633,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle continuous vs discrete dial","status":"passed","title":"should handle continuous vs discrete dial","duration":0.17057699999986653,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle dial with units","status":"passed","title":"should handle dial with units","duration":0.38882900000044174,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.2005940000008195,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11932999999953608,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07967699999971956,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a radio tuner dial","status":"passed","title":"should create a radio tuner dial","duration":0.15606400000069698,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a washing machine dial","status":"passed","title":"should create a washing machine dial","duration":0.3275049999992916,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a combination lock dial","status":"passed","title":"should create a combination lock dial","duration":0.32514399999945454,"failureMessages":[],"meta":{}}],"startTime":1755567299920,"endTime":1755567299928.3274,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/dial.test.ts"},{"assertionResults":[{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should create trait with required room connections","status":"passed","title":"should create trait with required room connections","duration":2.1831470000006448,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should throw error without room connections","status":"passed","title":"should throw error without room connections","duration":2.1359429999993154,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should handle unidirectional doors","status":"passed","title":"should handle unidirectional doors","duration":0.3293279999998049,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should maintain bidirectional as default","status":"passed","title":"should maintain bidirectional as default","duration":0.15703099999973347,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4607960000003004,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":1.5699640000002546,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create door with openable trait","status":"passed","title":"should create door with openable trait","duration":0.25963899999987916,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create lockable door","status":"passed","title":"should create lockable door","duration":0.3303569999998217,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should connect two specific rooms","status":"passed","title":"should connect two specific rooms","duration":0.331836000000294,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should handle room order consistently","status":"passed","title":"should handle room order consistently","duration":0.41901099999995495,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create complete room-door-room setup","status":"passed","title":"should create complete room-door-room setup","duration":1.4462139999995998,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create locked door between rooms","status":"passed","title":"should create locked door between rooms","duration":0.5600840000006428,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should handle self-connecting door","status":"passed","title":"should handle self-connecting door","duration":0.24652599999990343,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should preserve all properties during assignment","status":"passed","title":"should preserve all properties during assignment","duration":0.19901299999946787,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1501619999999093,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support standard room door","status":"passed","title":"should support standard room door","duration":0.2013600000000224,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support locked exterior door","status":"passed","title":"should support locked exterior door","duration":0.2053619999996954,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support archway (always open)","status":"passed","title":"should support archway (always open)","duration":0.13429400000040914,"failureMessages":[],"meta":{}}],"startTime":1755567295094,"endTime":1755567295106.1343,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/door.test.ts"},{"assertionResults":[{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9422119999999268,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.40545900000051915,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.18923199999971985,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should allow zero nutrition value","status":"passed","title":"should allow zero nutrition value","duration":0.0936760000004142,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle solid food","status":"passed","title":"should handle solid food","duration":0.47891400000025897,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle liquids","status":"passed","title":"should handle liquids","duration":0.3593570000002728,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should support various food types","status":"passed","title":"should support various food types","duration":0.19256700000005367,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle single serving items","status":"passed","title":"should handle single serving items","duration":0.13803499999994528,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle multi-serving items","status":"passed","title":"should handle multi-serving items","duration":0.3019209999993109,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should allow fractional servings","status":"passed","title":"should allow fractional servings","duration":0.12115799999992305,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should track serving consumption","status":"passed","title":"should track serving consumption","duration":0.11075299999993149,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should specify remains type","status":"passed","title":"should specify remains type","duration":0.08756800000082876,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should handle items with no remains","status":"passed","title":"should handle items with no remains","duration":0.13078800000039337,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should support various remain types","status":"passed","title":"should support various remain types","duration":0.16263400000025285,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with no effects","status":"passed","title":"should handle items with no effects","duration":0.10415499999999156,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with effects","status":"passed","title":"should handle items with effects","duration":0.1009250000006432,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should support various effect types","status":"passed","title":"should support various effect types","duration":0.10687000000052649,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should allow effect without description","status":"passed","title":"should allow effect without description","duration":0.07298900000023423,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should support custom consume messages","status":"passed","title":"should support custom consume messages","duration":0.0716020000008939,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should handle no consume message","status":"passed","title":"should handle no consume message","duration":0.05404900000030466,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should have appropriate messages for food vs liquid","status":"passed","title":"should have appropriate messages for food vs liquid","duration":0.09967400000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.17393600000013976,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.08333300000049348,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.36543799999981275,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should create various edible entities","status":"passed","title":"should create various edible entities","duration":0.18994599999950879,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should work with containers for liquids","status":"passed","title":"should work with containers for liquids","duration":0.23913700000048266,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.205895000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.10599499999989348,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09188699999958772,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.10892500000045402,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle very large values","status":"passed","title":"should handle very large values","duration":1.147331999999551,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle magical food with multiple effects","status":"passed","title":"should handle magical food with multiple effects","duration":0.29514000000017404,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle rations with multiple servings","status":"passed","title":"should handle rations with multiple servings","duration":0.20455799999945157,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle transformation items","status":"passed","title":"should handle transformation items","duration":0.12526600000001054,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle poisoned or cursed food","status":"passed","title":"should handle poisoned or cursed food","duration":0.4218810000002122,"failureMessages":[],"meta":{}}],"startTime":1755567300060,"endTime":1755567300070.4219,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/edible.test.ts"},{"assertionResults":[{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.087996000000203,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6715869999998176,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"in\" preposition for containers","status":"passed","title":"should handle \"in\" preposition for containers","duration":0.31258100000013656,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"on\" preposition for surfaces","status":"passed","title":"should handle \"on\" preposition for surfaces","duration":0.22162800000023708,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"under\" preposition","status":"passed","title":"should handle \"under\" preposition","duration":0.10490500000014435,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"behind\" preposition","status":"passed","title":"should handle \"behind\" preposition","duration":0.1473200000000361,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track single occupant","status":"passed","title":"should track single occupant","duration":2.2530100000003586,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track multiple occupants","status":"passed","title":"should track multiple occupants","duration":0.41220400000020163,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should handle unlimited occupancy","status":"passed","title":"should handle unlimited occupancy","duration":0.5925349999997707,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track occupancy state","status":"passed","title":"should track occupancy state","duration":0.4230219999999463,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle visible occupants","status":"passed","title":"should handle visible occupants","duration":0.16520200000013574,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle hidden occupants","status":"passed","title":"should handle hidden occupants","duration":0.10036500000023807,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.0795750000006592,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle soundproofing","status":"passed","title":"should handle soundproofing","duration":0.09370699999999488,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle standing entries","status":"passed","title":"should handle standing entries","duration":0.08867000000009284,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle sitting entries","status":"passed","title":"should handle sitting entries","duration":0.06909499999983382,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle lying entries","status":"passed","title":"should handle lying entries","duration":0.04897400000027119,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle no posture requirement","status":"passed","title":"should handle no posture requirement","duration":0.04524799999944662,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle enter message","status":"passed","title":"should handle enter message","duration":0.05759699999998702,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle exit message","status":"passed","title":"should handle exit message","duration":0.052528000000165775,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle full message","status":"passed","title":"should handle full message","duration":0.05378999999993539,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle blocked message","status":"passed","title":"should handle blocked message","duration":1.2090619999999035,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle stationary entries","status":"passed","title":"should handle stationary entries","duration":0.24524800000017422,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle mobile entries","status":"passed","title":"should handle mobile entries","duration":0.1742020000001503,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle rideable animals","status":"passed","title":"should handle rideable animals","duration":0.2011030000003302,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle open access","status":"passed","title":"should handle open access","duration":0.21553300000050513,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle blocked access","status":"passed","title":"should handle blocked access","duration":0.17338699999982055,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle conditional access","status":"passed","title":"should handle conditional access","duration":0.27670500000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.20763500000066415,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should replace existing entry trait","status":"passed","title":"should replace existing entry trait","duration":0.13432300000022224,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle nested entries","status":"passed","title":"should handle nested entries","duration":0.25302800000008574,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle multi-purpose entries","status":"passed","title":"should handle multi-purpose entries","duration":0.11111200000050303,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle vehicle with compartments","status":"passed","title":"should handle vehicle with compartments","duration":0.2190519999994649,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle theatrical entries","status":"passed","title":"should handle theatrical entries","duration":0.11973699999998644,"failureMessages":[],"meta":{}}],"startTime":1755567291948,"endTime":1755567291961.219,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/entry.test.ts"},{"assertionResults":[{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with required values","status":"passed","title":"should create trait with required values","duration":1.247283000000607,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should throw error if required fields are missing","status":"passed","title":"should throw error if required fields are missing","duration":0.7577870000004623,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with all optional values","status":"passed","title":"should create trait with all optional values","duration":0.9366430000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle north direction","status":"passed","title":"should handle north direction","duration":0.15969399999994494,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle south direction","status":"passed","title":"should handle south direction","duration":0.1901799999996001,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle east direction","status":"passed","title":"should handle east direction","duration":0.09412700000029872,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle west direction","status":"passed","title":"should handle west direction","duration":0.06707899999946676,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle up direction","status":"passed","title":"should handle up direction","duration":0.05948800000078336,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle down direction","status":"passed","title":"should handle down direction","duration":0.21577200000047014,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle in direction","status":"passed","title":"should handle in direction","duration":0.10029799999938405,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle out direction","status":"passed","title":"should handle out direction","duration":0.06518099999993865,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle diagonal directions","status":"passed","title":"should handle diagonal directions","duration":0.16487800000049901,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle magic words","status":"passed","title":"should handle magic words","duration":0.5226249999996071,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle action-based exits","status":"passed","title":"should handle action-based exits","duration":0.1040659999998752,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle object-interaction exits","status":"passed","title":"should handle object-interaction exits","duration":0.13964600000053906,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle simple bidirectional exit","status":"passed","title":"should handle simple bidirectional exit","duration":0.12765399999989313,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle bidirectional portal","status":"passed","title":"should handle bidirectional portal","duration":0.16853400000036345,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle hidden exits","status":"passed","title":"should handle hidden exits","duration":0.0753709999999046,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle visible but unlisted exits","status":"passed","title":"should handle visible but unlisted exits","duration":0.06020100000023376,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle discovered exits","status":"passed","title":"should handle discovered exits","duration":0.06901400000060676,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle simple condition","status":"passed","title":"should handle simple condition","duration":0.0929519999999684,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle complex condition","status":"passed","title":"should handle complex condition","duration":1.1652789999998276,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle time-based condition","status":"passed","title":"should handle time-based condition","duration":0.16441299999951298,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom use messages","status":"passed","title":"should handle custom use messages","duration":0.08881300000030024,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom blocked messages","status":"passed","title":"should handle custom blocked messages","duration":0.06649800000013784,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should allow no custom messages","status":"passed","title":"should allow no custom messages","duration":0.08281799999986106,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.18189499999971304,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should replace existing exit trait","status":"passed","title":"should replace existing exit trait","duration":0.08963300000050367,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle one-way exit","status":"passed","title":"should handle one-way exit","duration":0.06518099999993865,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle teleporter","status":"passed","title":"should handle teleporter","duration":0.12417600000026141,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle vehicle-based exit","status":"passed","title":"should handle vehicle-based exit","duration":0.13250499999958265,"failureMessages":[],"meta":{}}],"startTime":1755567273750,"endTime":1755567273759.1326,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/exit.test.ts"},{"assertionResults":[{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.3633219999992434,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.0201500000002852,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should handle all fragile materials","status":"passed","title":"should handle all fragile materials","duration":0.39568299999973533,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default glass to sharp fragments","status":"passed","title":"should default glass to sharp fragments","duration":0.3187210000005507,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default crystal to sharp fragments","status":"passed","title":"should default crystal to sharp fragments","duration":0.3628159999998388,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should not default other materials to sharp","status":"passed","title":"should not default other materials to sharp","duration":0.15565199999946344,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should allow override of sharp fragments","status":"passed","title":"should allow override of sharp fragments","duration":0.10138800000004267,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break threshold"],"fullName":"FragileTrait break threshold should handle different fragility levels","status":"passed","title":"should handle different fragility levels","duration":0.13095799999973678,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.41664399999990565,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should work with multiple fragile objects","status":"passed","title":"should work with multiple fragile objects","duration":0.21062499999970896,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that break into fragments","status":"passed","title":"should handle objects that break into fragments","duration":1.2345900000000256,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that trigger events when broken","status":"passed","title":"should handle objects that trigger events when broken","duration":0.16030899999987014,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should track damaged state","status":"passed","title":"should track damaged state","duration":0.09259799999927054,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should track value loss when broken","status":"passed","title":"should track value loss when broken","duration":0.08951099999922008,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should handle no value specification","status":"passed","title":"should handle no value specification","duration":0.06658999999945081,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10557599999992817,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11567099999956554,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10875699999996868,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle custom break messages","status":"passed","title":"should handle custom break messages","duration":0.07684000000062952,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile glass vase","status":"passed","title":"should create a fragile glass vase","duration":0.18893500000012864,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile ice sculpture","status":"passed","title":"should create a fragile ice sculpture","duration":0.12790799999947922,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a security-protected display case","status":"passed","title":"should create a security-protected display case","duration":0.14017599999988306,"failureMessages":[],"meta":{}}],"startTime":1755567285757,"endTime":1755567285766.189,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/fragile.test.ts"},{"assertionResults":[{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.256985999999415,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.37259999999969295,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"a\" article","status":"passed","title":"should handle \"a\" article","duration":0.33986600000025646,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"an\" article","status":"passed","title":"should handle \"an\" article","duration":0.17688099999941187,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"the\" article","status":"passed","title":"should handle \"the\" article","duration":0.1346560000001773,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"some\" article for plural/mass nouns","status":"passed","title":"should handle \"some\" article for plural/mass nouns","duration":0.12781700000050478,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle empty article for proper names","status":"passed","title":"should handle empty article for proper names","duration":0.14130999999997584,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should start with empty aliases","status":"passed","title":"should start with empty aliases","duration":0.11960200000066834,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should store multiple aliases","status":"passed","title":"should store multiple aliases","duration":1.2177739999997357,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle full description","status":"passed","title":"should handle full description","duration":0.2796279999993203,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle brief description separately","status":"passed","title":"should handle brief description separately","duration":0.1408209999999599,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should allow empty descriptions","status":"passed","title":"should allow empty descriptions","duration":0.10775599999942642,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should default to not concealed","status":"passed","title":"should default to not concealed","duration":0.07001099999979488,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should handle concealed objects","status":"passed","title":"should handle concealed objects","duration":0.08143999999992957,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle weight","status":"passed","title":"should handle weight","duration":0.11068100000011327,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle volume","status":"passed","title":"should handle volume","duration":0.06907400000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle size categories","status":"passed","title":"should handle size categories","duration":0.20626399999946443,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should allow undefined physical properties","status":"passed","title":"should allow undefined physical properties","duration":0.09457399999973859,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3726379999998244,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should replace existing identity trait","status":"passed","title":"should replace existing identity trait","duration":0.8868499999998676,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle proper names correctly","status":"passed","title":"should handle proper names correctly","duration":0.4517130000003817,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle mass nouns","status":"passed","title":"should handle mass nouns","duration":0.47145499999987805,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle unique items","status":"passed","title":"should handle unique items","duration":0.38012999999955355,"failureMessages":[],"meta":{}}],"startTime":1755567291806,"endTime":1755567291817.4714,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/identity.test.ts"},{"assertionResults":[{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.713756000000103,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.531329000000369,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should handle all positions","status":"passed","title":"should handle all positions","duration":0.2657339999996111,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should track position changes","status":"passed","title":"should track position changes","duration":0.3133399999996982,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.28712199999972654,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle stuck state","status":"passed","title":"should handle stuck state","duration":0.17043899999953283,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.44684400000005553,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should handle multiple levers in world","status":"passed","title":"should handle multiple levers in world","duration":0.297338999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should store custom position names","status":"passed","title":"should store custom position names","duration":0.4169950000004974,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should handle partial position names","status":"passed","title":"should handle partial position names","duration":0.4011769999997341,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should store lever sound","status":"passed","title":"should store lever sound","duration":0.35872699999981705,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should handle missing sound","status":"passed","title":"should handle missing sound","duration":0.13579200000003766,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.11931800000002113,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08520599999974365,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10063199999967765,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle stuck spring-loaded lever","status":"passed","title":"should handle stuck spring-loaded lever","duration":0.15613500000017666,"failureMessages":[],"meta":{}}],"startTime":1755567307387,"endTime":1755567307393.1562,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lever.test.ts"},{"assertionResults":[{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.5272110000005341,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.39245999999911874,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.19485100000019884,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle fuel-based initialization","status":"passed","title":"should handle fuel-based initialization","duration":0.18642200000067533,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should support various brightness levels","status":"passed","title":"should support various brightness levels","duration":0.22400200000083714,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should handle edge brightness values","status":"passed","title":"should handle edge brightness values","duration":0.13139499999851978,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should allow out-of-range brightness values","status":"passed","title":"should allow out-of-range brightness values","duration":0.09116100000028382,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should track lit status","status":"passed","title":"should track lit status","duration":0.11960499999986496,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should maintain brightness when lit state changes","status":"passed","title":"should maintain brightness when lit state changes","duration":0.2257709999994404,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle infinite fuel sources","status":"passed","title":"should handle infinite fuel sources","duration":0.14754700000048615,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle fuel-based sources","status":"passed","title":"should handle fuel-based sources","duration":0.09330299999965064,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should track fuel consumption","status":"passed","title":"should track fuel consumption","duration":0.08474899999964691,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle various consumption rates","status":"passed","title":"should handle various consumption rates","duration":0.07820799999899464,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle partial fuel properties","status":"passed","title":"should handle partial fuel properties","duration":0.07105400000000373,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.2678439999999682,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should create various light source entities","status":"passed","title":"should create various light source entities","duration":0.18790599999920232,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with switchable light sources","status":"passed","title":"should work with switchable light sources","duration":0.1571060000005673,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with wearable light sources","status":"passed","title":"should work with wearable light sources","duration":0.14707600000110688,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle flame-based sources","status":"passed","title":"should handle flame-based sources","duration":0.10030000000006112,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle electric sources","status":"passed","title":"should handle electric sources","duration":0.06975400000010268,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle magical sources","status":"passed","title":"should handle magical sources","duration":0.05764699999963341,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12613600000076985,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.05621400000018184,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.06839800000125251,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle zero values","status":"passed","title":"should handle zero values","duration":0.10041099999943981,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.06130300000040734,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.08117300000048999,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle refillable light sources","status":"passed","title":"should handle refillable light sources","duration":0.09406099999978323,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle multi-mode light sources","status":"passed","title":"should handle multi-mode light sources","duration":0.10746300000027986,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle degrading light sources","status":"passed","title":"should handle degrading light sources","duration":0.14617100000032224,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle emergency light sources","status":"passed","title":"should handle emergency light sources","duration":0.15556800000013027,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle combined light sources","status":"passed","title":"should handle combined light sources","duration":0.11181500000020606,"failureMessages":[],"meta":{}}],"startTime":1755567300312,"endTime":1755567300319.1555,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/light-source.test.ts"},{"assertionResults":[{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.211029000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.43219700000008743,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should use startsLocked to set initial isLocked if not provided","status":"passed","title":"should use startsLocked to set initial isLocked if not provided","duration":0.1360819999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should prefer explicit isLocked over startsLocked","status":"passed","title":"should prefer explicit isLocked over startsLocked","duration":0.17653900000004796,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle single key","status":"passed","title":"should handle single key","duration":0.23348000000078173,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle multiple keys","status":"passed","title":"should handle multiple keys","duration":0.5944870000002993,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle both single and multiple keys","status":"passed","title":"should handle both single and multiple keys","duration":0.2133589999994001,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle master key acceptance","status":"passed","title":"should handle master key acceptance","duration":0.10146100000019942,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should allow changing lock state","status":"passed","title":"should allow changing lock state","duration":0.2394429999994827,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should handle auto-lock behavior flag","status":"passed","title":"should handle auto-lock behavior flag","duration":0.20984099999986938,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":1.0760249999993903,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should work with lockable container","status":"passed","title":"should work with lockable container","duration":0.6880940000000919,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should create matching key entity","status":"passed","title":"should create matching key entity","duration":1.1214540000000852,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should store all lock-related messages","status":"passed","title":"should store all lock-related messages","duration":0.6345620000001873,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.8653910000002725,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","sound effects"],"fullName":"LockableTrait sound effects should support lock/unlock sounds","status":"passed","title":"should support lock/unlock sounds","duration":0.45271599999978207,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.154500999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.1253740000001926,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle entity without key requirement","status":"passed","title":"should handle entity without key requirement","duration":0.17298700000083045,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.13956400000006397,"failureMessages":[],"meta":{}}],"startTime":1755567293665,"endTime":1755567293676.1396,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lockable.test.ts"},{"assertionResults":[{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.874041999999463,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.3234699999993609,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should handle all weight classes","status":"passed","title":"should handle all weight classes","duration":0.9654979999995703,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should track blocked exits","status":"passed","title":"should track blocked exits","duration":3.2186839999994845,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle single blocked exit","status":"passed","title":"should handle single blocked exit","duration":3.339799999999741,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle no blocked exits when not blocking","status":"passed","title":"should handle no blocked exits when not blocking","duration":3.051661999999851,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should track what is revealed when moved","status":"passed","title":"should track what is revealed when moved","duration":0.38576800000009825,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should handle no reveal","status":"passed","title":"should handle no reveal","duration":0.2534859999996115,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track if moved","status":"passed","title":"should track if moved","duration":0.6385989999998856,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track original room","status":"passed","title":"should track original room","duration":0.41214399999989837,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.7249860000001718,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.5163350000002538,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with both PushableTrait and PullableTrait","status":"passed","title":"should work with both PushableTrait and PullableTrait","duration":0.4408189999994647,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle single person movement","status":"passed","title":"should handle single person movement","duration":0.29068999999981315,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle multi-person movement","status":"passed","title":"should handle multi-person movement","duration":0.21259099999952014,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should default people required when multi-person is true","status":"passed","title":"should default people required when multi-person is true","duration":0.39748900000085996,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should store movement sounds","status":"passed","title":"should store movement sounds","duration":0.30251399999997375,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should handle no sound","status":"passed","title":"should handle no sound","duration":0.172179999999571,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.24080700000013167,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.2889709999999468,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.20241799999985233,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a blocking boulder","status":"passed","title":"should create a blocking boulder","duration":0.5736210000004576,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a moveable bookshelf","status":"passed","title":"should create a moveable bookshelf","duration":0.49344700000074226,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a light moveable crate","status":"passed","title":"should create a light moveable crate","duration":0.3357909999995172,"failureMessages":[],"meta":{}}],"startTime":1755567307201,"endTime":1755567307225.3357,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/moveable-scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.6879719999997178,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.6774430000004941,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should use startsOpen to set initial isOpen if not provided","status":"passed","title":"should use startsOpen to set initial isOpen if not provided","duration":0.2667799999999261,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should prefer explicit isOpen over startsOpen","status":"passed","title":"should prefer explicit isOpen over startsOpen","duration":0.38865500000065367,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should allow changing open state","status":"passed","title":"should allow changing open state","duration":0.37050099999942177,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should maintain other properties when state changes","status":"passed","title":"should maintain other properties when state changes","duration":0.23063299999921583,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3407420000003185,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should work with container entities","status":"passed","title":"should work with container entities","duration":0.2331659999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should handle entity with multiple state traits","status":"passed","title":"should handle entity with multiple state traits","duration":0.34101600000030885,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle one-way openable (canClose = false)","status":"passed","title":"should handle one-way openable (canClose = false)","duration":0.18887700000050245,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle revealsContents setting","status":"passed","title":"should handle revealsContents setting","duration":0.07934399999976449,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should support sound effects","status":"passed","title":"should support sound effects","duration":0.06931299999996554,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should store all custom messages","status":"passed","title":"should store all custom messages","duration":0.1110740000003716,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.1679599999988568,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.11779799999931129,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08071900000140886,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.11157900000034715,"failureMessages":[],"meta":{}}],"startTime":1755567311138,"endTime":1755567311144.168,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/openable.test.ts"},{"assertionResults":[{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.7742580000003727,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7080699999996796,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should handle all pull types","status":"passed","title":"should handle all pull types","duration":0.3712019999993572,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should track pull count","status":"passed","title":"should track pull count","duration":0.43393400000059046,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.4445210000003499,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should respect max pulls","status":"passed","title":"should respect max pulls","duration":0.31575399999928777,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.46091100000012375,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should work with multiple pullable objects","status":"passed","title":"should work with multiple pullable objects","duration":0.23758400000042457,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle lever configuration","status":"passed","title":"should handle lever configuration","duration":0.6883820000002743,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle cord configuration","status":"passed","title":"should handle cord configuration","duration":0.4051610000005894,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle attached configuration","status":"passed","title":"should handle attached configuration","duration":0.1387460000005376,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.10181999999986147,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.22092700000030163,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.1402219999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1328029999995124,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.21540099999947415,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1019510000005539,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.11626000000069325,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle non-repeatable pulls","status":"passed","title":"should handle non-repeatable pulls","duration":0.08836799999971845,"failureMessages":[],"meta":{}}],"startTime":1755567299906,"endTime":1755567299916.1162,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pullable.test.ts"},{"assertionResults":[{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.7064819999995962,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3924779999997554,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should handle all push types","status":"passed","title":"should handle all push types","duration":0.12776299999950425,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should track push count","status":"passed","title":"should track push count","duration":0.21398500000032072,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.22352299999965908,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should respect max pushes","status":"passed","title":"should respect max pushes","duration":0.3122819999998683,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4411760000002687,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should work with multiple pushable objects","status":"passed","title":"should work with multiple pushable objects","duration":0.23680100000001403,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle button configuration","status":"passed","title":"should handle button configuration","duration":0.37807799999973213,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.2664619999995921,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle moveable configuration","status":"passed","title":"should handle moveable configuration","duration":0.17174699999941367,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should handle all push directions","status":"passed","title":"should handle all push directions","duration":0.19411700000000565,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should default to no specific direction","status":"passed","title":"should default to no specific direction","duration":0.0669690000004266,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.18062600000030216,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.115404999999555,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.18471500000032393,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.0994379999992816,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10775499999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.13904699999966397,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle non-repeatable pushes","status":"passed","title":"should handle non-repeatable pushes","duration":0.10640299999977287,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle passage revealing","status":"passed","title":"should handle passage revealing","duration":0.09766099999978906,"failureMessages":[],"meta":{}}],"startTime":1755567293471,"endTime":1755567293478.1392,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pushable.test.ts"},{"assertionResults":[{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.2558120000003328,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4235790000002453,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should auto-initialize pages from pageContent","status":"passed","title":"should auto-initialize pages from pageContent","duration":0.830895999999484,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should not override currentPage if already set","status":"passed","title":"should not override currentPage if already set","duration":0.265440000000126,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle simple text","status":"passed","title":"should handle simple text","duration":0.28259200000047713,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle multi-line text","status":"passed","title":"should handle multi-line text","duration":0.2897349999993821,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle preview text","status":"passed","title":"should handle preview text","duration":0.16440899999997782,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle empty text","status":"passed","title":"should handle empty text","duration":0.1283159999993586,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should support different languages","status":"passed","title":"should support different languages","duration":0.3167830000002141,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle ability requirements","status":"passed","title":"should handle ability requirements","duration":0.15346000000045024,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle item requirements","status":"passed","title":"should handle item requirements","duration":0.09657400000014604,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle no requirements","status":"passed","title":"should handle no requirements","duration":0.0975510000007489,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should support various readable types","status":"passed","title":"should support various readable types","duration":0.16132100000049832,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should allow custom readable types","status":"passed","title":"should allow custom readable types","duration":0.07080099999984668,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle books with multiple pages","status":"passed","title":"should handle books with multiple pages","duration":0.21652999999969325,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle current page navigation","status":"passed","title":"should handle current page navigation","duration":0.19156500000008236,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle single page with pageContent","status":"passed","title":"should handle single page with pageContent","duration":0.17836700000043493,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle empty pageContent array","status":"passed","title":"should handle empty pageContent array","duration":0.7130479999996169,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should track read status","status":"passed","title":"should track read status","duration":0.13178100000004633,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should handle readability state","status":"passed","title":"should handle readability state","duration":0.07751099999950384,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should maintain state through changes","status":"passed","title":"should maintain state through changes","duration":0.10328500000014174,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3501109999997425,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should create various readable entities","status":"passed","title":"should create various readable entities","duration":0.14574400000037713,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should work with openable books","status":"passed","title":"should work with openable books","duration":0.18357100000048376,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12648499999977503,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09627200000068115,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.10029799999938405,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle page bounds","status":"passed","title":"should handle page bounds","duration":0.0672260000001188,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should preserve data integrity","status":"passed","title":"should preserve data integrity","duration":0.1797919999999067,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle special text content","status":"passed","title":"should handle special text content","duration":0.0940389999996114,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle magical tome with requirements","status":"passed","title":"should handle magical tome with requirements","duration":0.0799059999999372,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle inscribed objects","status":"passed","title":"should handle inscribed objects","duration":0.09968800000024203,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle dynamic readability","status":"passed","title":"should handle dynamic readability","duration":0.11305700000048091,"failureMessages":[],"meta":{}}],"startTime":1755567285774,"endTime":1755567285783.1797,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/readable.test.ts"},{"assertionResults":[{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.515602999999828,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2341930000002321,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle simple exits","status":"passed","title":"should handle simple exits","duration":1.1403300000001764,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle exits with doors","status":"passed","title":"should handle exits with doors","duration":0.5922390000014275,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle blocked exits","status":"passed","title":"should handle blocked exits","duration":1.0280390000007174,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle custom exits","status":"passed","title":"should handle custom exits","duration":0.7514410000003409,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle dark rooms","status":"passed","title":"should handle dark rooms","duration":0.524026999999478,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle lit rooms","status":"passed","title":"should handle lit rooms","duration":0.18845500000134052,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle outdoor lighting","status":"passed","title":"should handle outdoor lighting","duration":0.513929000000644,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle underground rooms","status":"passed","title":"should handle underground rooms","duration":0.21642500000052678,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should start unvisited","status":"passed","title":"should start unvisited","duration":0.16909900000064226,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should track visited state","status":"passed","title":"should track visited state","duration":0.09832800000003772,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should handle initial description","status":"passed","title":"should handle initial description","duration":0.08862600000065868,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient sounds","status":"passed","title":"should handle ambient sounds","duration":0.0653600000005099,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient smells","status":"passed","title":"should handle ambient smells","duration":0.054350000000340515,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle both sound and smell","status":"passed","title":"should handle both sound and smell","duration":0.2469970000001922,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle region assignment","status":"passed","title":"should handle region assignment","duration":0.10085900000012771,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle multiple tags","status":"passed","title":"should handle multiple tags","duration":0.2416060000014113,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle rooms without regions or tags","status":"passed","title":"should handle rooms without regions or tags","duration":0.11427899999944202,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.12858500000038475,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should work with container trait","status":"passed","title":"should work with container trait","duration":0.10573500000100466,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle maze-like connections","status":"passed","title":"should handle maze-like connections","duration":0.1601620000001276,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle multi-level connections","status":"passed","title":"should handle multi-level connections","duration":0.15671599999950558,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle outdoor/indoor transitions","status":"passed","title":"should handle outdoor/indoor transitions","duration":0.1634089999988646,"failureMessages":[],"meta":{}}],"startTime":1755567278963,"endTime":1755567278976.1633,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/room.test.ts"},{"assertionResults":[{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.936110999999073,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.291800000000876,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.14694800000143005,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle only mentioned property","status":"passed","title":"should handle only mentioned property","duration":0.22610399999939546,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support custom messages for different items","status":"passed","title":"should support custom messages for different items","duration":0.4392790000001696,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should allow undefined message for default handling","status":"passed","title":"should allow undefined message for default handling","duration":0.2105890000002546,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support humorous messages","status":"passed","title":"should support humorous messages","duration":0.15315999999984342,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle mentioned scenery","status":"passed","title":"should handle mentioned scenery","duration":0.11459499999909895,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle unmentioned scenery","status":"passed","title":"should handle unmentioned scenery","duration":0.3827579999997397,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should allow toggling mentioned state","status":"passed","title":"should allow toggling mentioned state","duration":0.3761240000003454,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.48032899999998335,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should create various scenery entities","status":"passed","title":"should create various scenery entities","duration":0.23962399999982154,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with room decorations","status":"passed","title":"should work with room decorations","duration":0.41006000000015774,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with interactive scenery","status":"passed","title":"should work with interactive scenery","duration":0.6475719999998546,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle architectural features","status":"passed","title":"should handle architectural features","duration":0.22777200000018638,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle natural features","status":"passed","title":"should handle natural features","duration":0.21898099999998522,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle furniture","status":"passed","title":"should handle furniture","duration":0.11387800000011339,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle always-mentioned scenery","status":"passed","title":"should handle always-mentioned scenery","duration":0.07077200000094308,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle hidden scenery","status":"passed","title":"should handle hidden scenery","duration":0.05884700000024168,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle discoverable scenery","status":"passed","title":"should handle discoverable scenery","duration":0.07718899999963469,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.11003699999855598,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.07048500000018976,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09899800000130199,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle null values","status":"passed","title":"should handle null values","duration":0.10368600000037986,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should preserve object reference","status":"passed","title":"should preserve object reference","duration":0.09866899999906309,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with state changes","status":"passed","title":"should handle scenery with state changes","duration":0.12043199999970966,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery containers","status":"passed","title":"should handle scenery containers","duration":0.1463789999997971,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with multiple states","status":"passed","title":"should handle scenery with multiple states","duration":0.08257700000103796,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle room-defining scenery","status":"passed","title":"should handle room-defining scenery","duration":0.08498399999916728,"failureMessages":[],"meta":{}}],"startTime":1755567283038,"endTime":1755567283047.1465,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.4763000000002648,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.559158000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle partial capacity initialization","status":"passed","title":"should handle partial capacity initialization","duration":0.2386050000004616,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle only enterable property","status":"passed","title":"should handle only enterable property","duration":0.19670500000029278,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support weight-based capacity","status":"passed","title":"should support weight-based capacity","duration":0.5897099999983766,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support item count capacity","status":"passed","title":"should support item count capacity","duration":0.351278000000093,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support both weight and item limits","status":"passed","title":"should support both weight and item limits","duration":0.4240140000001702,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.21494600000005448,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle zero capacity","status":"passed","title":"should handle zero capacity","duration":0.4576170000000275,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.24077000000033877,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.19590700000117067,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.12341899999955785,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle empty type arrays","status":"passed","title":"should handle empty type arrays","duration":0.1299220000000787,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle non-enterable supporters","status":"passed","title":"should handle non-enterable supporters","duration":0.06994499999927939,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle enterable supporters","status":"passed","title":"should handle enterable supporters","duration":0.0685620000003837,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should default to non-enterable","status":"passed","title":"should default to non-enterable","duration":0.18237000000044645,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3477810000003956,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should create various supporter entities","status":"passed","title":"should create various supporter entities","duration":0.17203999999946973,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with scenery supporters","status":"passed","title":"should work with scenery supporters","duration":0.19293199999992794,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with enterable supporters","status":"passed","title":"should work with enterable supporters","duration":0.19464899999911722,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle furniture supporters","status":"passed","title":"should handle furniture supporters","duration":0.18076800000017101,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle specialized supporters","status":"passed","title":"should handle specialized supporters","duration":0.8455409999987751,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle natural supporters","status":"passed","title":"should handle natural supporters","duration":0.20609200000035344,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.18759099999988393,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11227799999869603,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1020779999998922,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle negative capacity values","status":"passed","title":"should handle negative capacity values","duration":0.0845580000004702,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle fractional capacity values","status":"passed","title":"should handle fractional capacity values","duration":0.10484199999882549,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should preserve array references","status":"passed","title":"should preserve array references","duration":0.25219300000026124,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle multi-purpose supporters","status":"passed","title":"should handle multi-purpose supporters","duration":0.2692139999999199,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle tiered supporters","status":"passed","title":"should handle tiered supporters","duration":0.13599799999974493,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle magical supporters","status":"passed","title":"should handle magical supporters","duration":0.14850200000000768,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle dynamic supporter states","status":"passed","title":"should handle dynamic supporter states","duration":0.18891099999927974,"failureMessages":[],"meta":{}}],"startTime":1755567303012,"endTime":1755567303023.189,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/supporter.test.ts"},{"assertionResults":[{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.220799000000625,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.402182000000721,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should handle power requirements correctly","status":"passed","title":"should handle power requirements correctly","duration":0.14445299999988492,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should set autoOffCounter when starting on with autoOffTime","status":"passed","title":"should set autoOffCounter when starting on with autoOffTime","duration":0.1904530000001614,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should not set autoOffCounter when starting off","status":"passed","title":"should not set autoOffCounter when starting off","duration":0.20524999999997817,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should allow changing on/off state","status":"passed","title":"should allow changing on/off state","duration":0.15872199999921577,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should track power availability","status":"passed","title":"should track power availability","duration":0.09446899999966263,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should handle auto-off counter","status":"passed","title":"should handle auto-off counter","duration":0.09557499999937136,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.43491500000072847,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.20809600000029604,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should handle device with power requirements","status":"passed","title":"should handle device with power requirements","duration":0.11189000000013039,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should store all switch-related messages","status":"passed","title":"should store all switch-related messages","duration":0.13814800000000105,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.13385599999946862,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","sound effects"],"fullName":"SwitchableTrait sound effects should support all sound types","status":"passed","title":"should support all sound types","duration":0.15541200000006938,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.4082829999997557,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.5575850000004721,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle device with no auto-off","status":"passed","title":"should handle device with no auto-off","duration":0.4142250000004424,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.4595019999997021,"failureMessages":[],"meta":{}}],"startTime":1755567313111,"endTime":1755567313118.4595,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/switchable.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create a functional light switch","status":"passed","title":"should create a functional light switch","duration":3.3635709999998653,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create an elevator call button","status":"passed","title":"should create an elevator call button","duration":0.6682980000005045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a safe combination dial","status":"passed","title":"should create a safe combination dial","duration":0.6242870000005496,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a water valve","status":"passed","title":"should create a water valve","duration":0.44542400000136695,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a heavy boulder that can be pushed","status":"passed","title":"should create a heavy boulder that can be pushed","duration":1.0341239999997924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a crate that can be pushed and pulled","status":"passed","title":"should create a crate that can be pushed and pulled","duration":0.6813430000001972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","FRAGILE + BREAKABLE"],"fullName":"Trait Combinations FRAGILE + BREAKABLE should create a reinforced glass window","status":"passed","title":"should create a reinforced glass window","duration":0.62371499999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create an emergency alarm system","status":"passed","title":"should create an emergency alarm system","duration":4.219283999998879,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create a complex control panel","status":"passed","title":"should create a complex control panel","duration":1.2382959999995364,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle entities with many traits","status":"passed","title":"should handle entities with many traits","duration":0.661880999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle trait updates","status":"passed","title":"should handle trait updates","duration":0.13832299999921815,"failureMessages":[],"meta":{}}],"startTime":1755567289981,"endTime":1755567289995.6619,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":5.5831200000002354,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.7187540000004446,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should handle all turn types","status":"passed","title":"should handle all turn types","duration":0.6383280000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle string settings","status":"passed","title":"should handle string settings","duration":0.5412569999998595,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric settings","status":"passed","title":"should handle numeric settings","duration":1.0614590000004682,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should default current setting to first in array","status":"passed","title":"should default current setting to first in array","duration":0.37667899999996735,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric ranges","status":"passed","title":"should handle numeric ranges","duration":0.3507559999998193,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turns made","status":"passed","title":"should track turns made","duration":0.7707970000001296,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turn direction","status":"passed","title":"should track turn direction","duration":1.1466719999998531,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":3.229051000000254,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should work with multiple turnable objects","status":"passed","title":"should work with multiple turnable objects","duration":0.9590610000004745,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle dial configuration","status":"passed","title":"should handle dial configuration","duration":2.281042999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle wheel configuration","status":"passed","title":"should handle wheel configuration","duration":0.811467000000448,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle crank configuration","status":"passed","title":"should handle crank configuration","duration":0.5655309999992824,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle valve configuration","status":"passed","title":"should handle valve configuration","duration":0.4314650000005713,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.514737000000423,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle jammed state","status":"passed","title":"should handle jammed state","duration":0.7220950000000812,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle unidirectional turning","status":"passed","title":"should handle unidirectional turning","duration":0.5463260000005903,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.4850909999995565,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.3684750000002168,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.344824000000699,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.36886999999933323,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.2564920000004349,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle complex configurations","status":"passed","title":"should handle complex configurations","duration":0.4846209999996063,"failureMessages":[],"meta":{}}],"startTime":1755567307227,"endTime":1755567307253.4846,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/turnable.test.ts"},{"assertionResults":[{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.940397000000303,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.720408000000134,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.2894959999994171,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle empty blocksSlots array","status":"passed","title":"should handle empty blocksSlots array","duration":0.2669289999994362,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should support various body slots","status":"passed","title":"should support various body slots","duration":0.4452430000001186,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should handle custom slot names","status":"passed","title":"should handle custom slot names","duration":0.1868000000004031,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should block multiple slots","status":"passed","title":"should block multiple slots","duration":0.9072350000005827,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should support different layers","status":"passed","title":"should support different layers","duration":0.2852710000006482,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should handle wearableOver property","status":"passed","title":"should handle wearableOver property","duration":0.4345920000005208,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should track worn status","status":"passed","title":"should track worn status","duration":0.2552639999994426,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should handle different wearers","status":"passed","title":"should handle different wearers","duration":0.1519880000005287,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should clear wornBy when not worn","status":"passed","title":"should clear wornBy when not worn","duration":0.08899599999949714,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should store custom wear and remove messages","status":"passed","title":"should store custom wear and remove messages","duration":0.08734999999978754,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow undefined messages","status":"passed","title":"should allow undefined messages","duration":0.0744829999994181,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow only wear message","status":"passed","title":"should allow only wear message","duration":0.08974200000011479,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.21629699999994045,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.21649999999954161,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.32264200000008714,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4867629999998826,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should create various wearable items","status":"passed","title":"should create various wearable items","duration":0.2602679999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should work with actor wearing items","status":"passed","title":"should work with actor wearing items","duration":0.23697400000037305,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle layered armor system","status":"passed","title":"should handle layered armor system","duration":0.23698200000035285,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle jewelry with multiple items per slot","status":"passed","title":"should handle jewelry with multiple items per slot","duration":0.11818600000060542,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle outfit sets","status":"passed","title":"should handle outfit sets","duration":0.11554299999988871,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1982929999994667,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle undefined as parameter","status":"passed","title":"should handle undefined as parameter","duration":0.11222300000008545,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09312499999941792,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle boolean false values correctly","status":"passed","title":"should handle boolean false values correctly","duration":0.06874799999968673,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle zero and negative values","status":"passed","title":"should handle zero and negative values","duration":0.12526299999990442,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should preserve array reference for blocksSlots","status":"passed","title":"should preserve array reference for blocksSlots","duration":0.13908300000002782,"failureMessages":[],"meta":{}}],"startTime":1755567300022,"endTime":1755567300034.1982,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/wearable.test.ts"},{"assertionResults":[{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should not see medicine when cabinet is closed","status":"passed","title":"should not see medicine when cabinet is closed","duration":4.912190999999439,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should see medicine when cabinet is open","status":"passed","title":"should see medicine when cabinet is open","duration":0.6692329999996218,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should handle multiple state changes","status":"passed","title":"should handle multiple state changes","duration":0.7945260000005874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify canSee works correctly","status":"passed","title":"should verify canSee works correctly","duration":0.5256799999997384,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify medicine is in scope regardless of cabinet state","status":"passed","title":"should verify medicine is in scope regardless of cabinet state","duration":0.8768839999993361,"failureMessages":[],"meta":{}}],"startTime":1755567313123,"endTime":1755567313130.877,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/visibility/container-state-visibility.test.ts"}]}