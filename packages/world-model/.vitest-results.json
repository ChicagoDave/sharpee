{"numTotalTestSuites":468,"numPassedTestSuites":468,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":1137,"numPassedTests":1124,"numFailedTests":0,"numPendingTests":13,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755207438670,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Debug Worn Visibility"],"fullName":"Debug Worn Visibility should debug worn item visibility","status":"passed","title":"should debug worn item visibility","duration":6.499131999999918,"failureMessages":[],"meta":{}}],"startTime":1755207472584,"endTime":1755207472590.499,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/debug-worn-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Minimal Visibility Test"],"fullName":"Minimal Visibility Test should see items in the same room","status":"passed","title":"should see items in the same room","duration":3.73843399999987,"failureMessages":[],"meta":{}}],"startTime":1755207485604,"endTime":1755207485607.7385,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/minimal-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see objects in dark room without light","status":"passed","title":"should not see objects in dark room without light","duration":4.684913000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see objects when carrying lit light source","status":"passed","title":"should see objects when carrying lit light source","duration":0.8623900000002322,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should not see when light source is off","status":"passed","title":"should not see when light source is off","duration":1.9748039999994944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when light source is turned on","status":"passed","title":"should see when light source is turned on","duration":0.5364449999997305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should see when room has light source","status":"passed","title":"should see when room has light source","duration":0.615458999999646,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should work normally in lit rooms","status":"passed","title":"should work normally in lit rooms","duration":0.4175050000003466,"failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","status":"skipped","title":"should support partial darkness with specific visibility - SKIPPED: Scope rules should not affect physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Darkness and Light Source Scope Rules"],"fullName":"Darkness and Light Source Scope Rules should handle underground darkness differently","status":"passed","title":"should handle underground darkness differently","duration":0.3958549999997558,"failureMessages":[],"meta":{}}],"startTime":1755207458412,"endTime":1755207458422.3958,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/darkness-light.test.ts"},{"assertionResults":[{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should see invisible objects with true sight - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","status":"skipped","title":"should see through walls with x-ray vision - SKIPPED: X-ray vision should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should reveal concealed objects with detect magic","status":"passed","title":"should reveal concealed objects with detect magic","duration":3.8938249999991967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","status":"skipped","title":"should see inside closed containers with clairvoyance - SKIPPED: Clairvoyance should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should have remote viewing through crystal orb","status":"passed","title":"should have remote viewing through crystal orb","duration":0.8059759999996459,"failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","status":"skipped","title":"should combine multiple magical sight abilities - SKIPPED: Magic sight should affect scope, not physical visibility","failureMessages":[],"meta":{}},{"ancestorTitles":["Magic Sight Scope Rules"],"fullName":"Magic Sight Scope Rules should limit magical sight by power level","status":"passed","title":"should limit magical sight by power level","duration":1.2162260000004608,"failureMessages":[],"meta":{}}],"startTime":1755207474922,"endTime":1755207474928.2163,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/magic-sight.test.ts"},{"assertionResults":[{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear sounds from adjacent rooms","status":"passed","title":"should hear sounds from adjacent rooms","duration":4.6141999999999825,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should hear loud sounds from further away","status":"passed","title":"should hear loud sounds from further away","duration":1.205997999999454,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should not hear sounds through solid barriers","status":"passed","title":"should not hear sounds through solid barriers","duration":0.6926849999999831,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should support directional sound","status":"passed","title":"should support directional sound","duration":0.3805339999998978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should combine multiple sound rules","status":"passed","title":"should combine multiple sound rules","duration":1.0688050000007934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sound Traveling Scope Rules"],"fullName":"Sound Traveling Scope Rules should filter sounds by action type","status":"passed","title":"should filter sounds by action type","duration":0.9230990000005477,"failureMessages":[],"meta":{}}],"startTime":1755207458640,"endTime":1755207458648.923,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/sound-traveling.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden entities when window is closed","status":"passed","title":"should not see garden entities when window is closed","duration":4.079200000000128,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should see garden entities when window is open with scope rule - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":1.291189999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.1047129999997196,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","status":"skipped","title":"should support scope rule removal - SKIPPED: Cross-room visibility violates architecture","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule - Fixed"],"fullName":"Window Visibility Scope Rule - Fixed should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.9508820000000924,"failureMessages":[],"meta":{}}],"startTime":1755207482131,"endTime":1755207482138.951,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility-fixed.test.ts"},{"assertionResults":[{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should not see garden entities when window is closed - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","status":"skipped","title":"should include garden entities in scope when window is open with scope rule - SKIPPED: Test setup issue, player not properly in room","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","status":"skipped","title":"should not see garden when window closes again - SKIPPED: Cross-room visibility should use scope, not getVisible()","failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support action-specific visibility","status":"passed","title":"should support action-specific visibility","duration":7.084872999999789,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support dynamic entity inclusion","status":"passed","title":"should support dynamic entity inclusion","duration":1.7574079999994865,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should respect rule priorities when rules conflict","status":"passed","title":"should respect rule priorities when rules conflict","duration":1.5679330000002665,"failureMessages":[],"meta":{}},{"ancestorTitles":["Window Visibility Scope Rule"],"fullName":"Window Visibility Scope Rule should support scope rule removal","status":"passed","title":"should support scope rule removal","duration":3.0837669999991704,"failureMessages":[],"meta":{}}],"startTime":1755207460091,"endTime":1755207460104.0837,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/scope/window-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":5.086427000000185,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should enforce maximum nesting depth","status":"passed","title":"should enforce maximum nesting depth","duration":0.5289609999999811,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Deep Nesting"],"fullName":"Container Hierarchies Integration Tests Deep Nesting should prevent circular containment","status":"passed","title":"should prevent circular containment","duration":0.2732899999991787,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should calculate total weight including contents","status":"passed","title":"should calculate total weight including contents","duration":0.2677640000001702,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Capacity and Weight"],"fullName":"Container Hierarchies Integration Tests Container Capacity and Weight should handle container capacity limits","status":"passed","title":"should handle container capacity limits","duration":0.6449070000016945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle supporter and container combinations","status":"passed","title":"should handle supporter and container combinations","duration":2.0209799999993265,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Mixed Container Types"],"fullName":"Container Hierarchies Integration Tests Mixed Container Types should handle furniture with both surfaces and storage","status":"passed","title":"should handle furniture with both surfaces and storage","duration":1.2197750000013912,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should handle moving containers with contents","status":"passed","title":"should handle moving containers with contents","duration":0.7429699999993318,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container State Changes"],"fullName":"Container Hierarchies Integration Tests Container State Changes should update visibility when opening/closing containers","status":"passed","title":"should update visibility when opening/closing containers","duration":1.6828799999984767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find all containers of a specific type","status":"passed","title":"should find all containers of a specific type","duration":0.7051030000002356,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Container Query Operations"],"fullName":"Container Hierarchies Integration Tests Container Query Operations should find containers matching complex criteria","status":"passed","title":"should find containers matching complex criteria","duration":0.39635200000157056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should handle large numbers of containers efficiently","status":"passed","title":"should handle large numbers of containers efficiently","duration":4.976769000000786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Hierarchies Integration Tests","Performance with Many Containers"],"fullName":"Container Hierarchies Integration Tests Performance with Many Containers should efficiently check containment loops in complex hierarchies","status":"passed","title":"should efficiently check containment loops in complex hierarchies","duration":0.3494780000000901,"failureMessages":[],"meta":{}}],"startTime":1755207451302,"endTime":1755207451321.3494,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/container-hierarchies.test.ts"},{"assertionResults":[{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should create doors connecting two rooms","status":"passed","title":"should create doors connecting two rooms","duration":2.427628000000368,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Basic Door Functionality"],"fullName":"Door Mechanics Integration Tests Basic Door Functionality should synchronize door state between rooms","status":"passed","title":"should synchronize door state between rooms","duration":1.0072940000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should prevent opening locked doors","status":"passed","title":"should prevent opening locked doors","duration":0.7283580000002985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should unlock doors with correct key","status":"passed","title":"should unlock doors with correct key","duration":0.47031499999957305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Lockable Doors"],"fullName":"Door Mechanics Integration Tests Lockable Doors should handle multiple locked doors","status":"passed","title":"should handle multiple locked doors","duration":0.3475220000000263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle secret doors","status":"passed","title":"should handle secret doors","duration":0.7139589999997042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle one-way doors","status":"passed","title":"should handle one-way doors","duration":0.19588199999998324,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Complex Door Scenarios"],"fullName":"Door Mechanics Integration Tests Complex Door Scenarios should handle automatic closing doors","status":"passed","title":"should handle automatic closing doors","duration":0.1436409999996613,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should affect visibility through doors","status":"passed","title":"should affect visibility through doors","duration":0.47780499999953463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door State and Visibility"],"fullName":"Door Mechanics Integration Tests Door State and Visibility should handle doors with windows","status":"passed","title":"should handle doors with windows","duration":0.1685139999999592,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle rooms with multiple doors","status":"passed","title":"should handle rooms with multiple doors","duration":0.9069209999997838,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Multi-Door Connections"],"fullName":"Door Mechanics Integration Tests Multi-Door Connections should handle double doors","status":"passed","title":"should handle double doors","duration":0.20259399999940797,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should track door usage","status":"passed","title":"should track door usage","duration":0.16571600000042963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Door Events and Behaviors"],"fullName":"Door Mechanics Integration Tests Door Events and Behaviors should handle door with special requirements","status":"passed","title":"should handle door with special requirements","duration":0.1791849999999613,"failureMessages":[],"meta":{}},{"ancestorTitles":["Door Mechanics Integration Tests","Performance with Many Doors"],"fullName":"Door Mechanics Integration Tests Performance with Many Doors should handle buildings with many doors efficiently","status":"passed","title":"should handle buildings with many doors efficiently","duration":0.44568400000025576,"failureMessages":[],"meta":{}}],"startTime":1755207458684,"endTime":1755207458693.4458,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/door-mechanics.test.ts"},{"assertionResults":[{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should allow items to be placed in rooms without ContainerTrait","status":"passed","title":"should allow items to be placed in rooms without ContainerTrait","duration":2.2906160000002274,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should respect room capacity limits","status":"passed","title":"should respect room capacity limits","duration":0.21055900000010297,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Rooms as containers"],"fullName":"Room and Actor as Containers Rooms as containers should handle nested containers in rooms","status":"passed","title":"should handle nested containers in rooms","duration":0.6350570000004154,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should allow actors to carry items without ContainerTrait","status":"passed","title":"should allow actors to carry items without ContainerTrait","duration":0.5968430000002627,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should handle actor inventory limits","status":"passed","title":"should handle actor inventory limits","duration":0.32006900000033056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Actors as containers"],"fullName":"Room and Actor as Containers Actors as containers should prevent actors from being placed inside other actors","status":"passed","title":"should prevent actors from being placed inside other actors","duration":0.5988989999996193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room and Actor as Containers","Container type detection"],"fullName":"Room and Actor as Containers Container type detection should correctly identify all container-capable entities","status":"passed","title":"should correctly identify all container-capable entities","duration":0.3283389999996871,"failureMessages":[],"meta":{}}],"startTime":1755207472480,"endTime":1755207472486.3284,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-actor-containers.test.ts"},{"assertionResults":[{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should connect rooms with simple exits","status":"passed","title":"should connect rooms with simple exits","duration":3.2732770000002347,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Basic Room Connections"],"fullName":"Room Navigation Integration Tests Basic Room Connections should find paths between connected rooms","status":"passed","title":"should find paths between connected rooms","duration":1.5529139999998733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should navigate through open doors","status":"passed","title":"should navigate through open doors","duration":1.2537609999999404,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle closed doors","status":"passed","title":"should handle closed doors","duration":0.41587299999991956,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should handle locked doors","status":"passed","title":"should handle locked doors","duration":1.0325829999992493,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Rooms with Door Entities"],"fullName":"Room Navigation Integration Tests Rooms with Door Entities should find alternative paths when doors are blocked","status":"passed","title":"should find alternative paths when doors are blocked","duration":0.6652690000000803,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle buildings with multiple floors","status":"passed","title":"should handle buildings with multiple floors","duration":0.2629980000001524,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Complex Multi-Level Navigation"],"fullName":"Room Navigation Integration Tests Complex Multi-Level Navigation should handle one-way passages","status":"passed","title":"should handle one-way passages","duration":0.1634940000003553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should track first visits to rooms","status":"passed","title":"should track first visits to rooms","duration":0.4111739999998463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Room Properties and Navigation"],"fullName":"Room Navigation Integration Tests Room Properties and Navigation should handle dark rooms and navigation","status":"passed","title":"should handle dark rooms and navigation","duration":0.9520099999999729,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle exit entities","status":"passed","title":"should handle exit entities","duration":0.23825899999974354,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Special Exit Types"],"fullName":"Room Navigation Integration Tests Special Exit Types should handle entry points","status":"passed","title":"should handle entry points","duration":0.1511369999998351,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle large mazes efficiently","status":"passed","title":"should handle large mazes efficiently","duration":0.7593930000002729,"failureMessages":[],"meta":{}},{"ancestorTitles":["Room Navigation Integration Tests","Performance and Edge Cases"],"fullName":"Room Navigation Integration Tests Performance and Edge Cases should handle disconnected room groups","status":"passed","title":"should handle disconnected room groups","duration":0.14256600000044273,"failureMessages":[],"meta":{}}],"startTime":1755207465961,"endTime":1755207465974.1426,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/room-navigation.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not see contents of locked closed container","status":"passed","title":"should not see contents of locked closed container","duration":4.4042609999996785,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should not open locked container","status":"passed","title":"should not open locked container","duration":0.4973900000004505,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should see contents after unlocking and opening","status":"passed","title":"should see contents after unlocking and opening","duration":0.9697400000004563,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Container + Openable + Lockable"],"fullName":"Trait Combinations Integration Tests Container + Openable + Lockable should handle nested locked containers","status":"passed","title":"should handle nested locked containers","duration":0.8657039999998233,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should see items on supporter but not in closed container","status":"passed","title":"should see items on supporter but not in closed container","duration":1.8528729999998177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should handle complex containment hierarchy","status":"passed","title":"should handle complex containment hierarchy","duration":0.4364349999996193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Supporter + Container + Scenery"],"fullName":"Trait Combinations Integration Tests Supporter + Container + Scenery should include all scenery regardless of visibility","status":"passed","title":"should include all scenery regardless of visibility","duration":0.4239449999986391,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should handle wearing items with containers","status":"passed","title":"should handle wearing items with containers","duration":0.5831250000010186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should exclude worn items when specified","status":"passed","title":"should exclude worn items when specified","duration":0.5919049999993149,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Actor + Wearable + Container"],"fullName":"Trait Combinations Integration Tests Actor + Wearable + Container should track complex worn item hierarchies","status":"passed","title":"should track complex worn item hierarchies","duration":0.5247679999993125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should navigate through doors between rooms","status":"passed","title":"should navigate through doors between rooms","duration":1.0442629999997735,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should see in lit rooms but not dark rooms","status":"passed","title":"should see in lit rooms but not dark rooms","duration":0.43669299999965006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Door + Room + Light Source"],"fullName":"Trait Combinations Integration Tests Door + Room + Light Source should handle door state synchronization","status":"passed","title":"should handle door state synchronization","duration":0.1810170000007929,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should track edible items in containers","status":"passed","title":"should track edible items in containers","duration":0.40293599999859,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Edible + Container + Actor"],"fullName":"Trait Combinations Integration Tests Edible + Container + Actor should handle consuming items from container","status":"passed","title":"should handle consuming items from container","duration":0.2111910000003263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle readable items in locked containers on supporters","status":"passed","title":"should handle readable items in locked containers on supporters","duration":0.4224689999991824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations Integration Tests","Complex Multi-Trait Scenarios"],"fullName":"Trait Combinations Integration Tests Complex Multi-Trait Scenarios should handle switchable light sources affecting room visibility","status":"passed","title":"should handle switchable light sources affecting room visibility","duration":0.1995119999992312,"failureMessages":[],"meta":{}}],"startTime":1755207451897,"endTime":1755207451912.1995,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should see through open containers","status":"passed","title":"should see through open containers","duration":4.579107999999906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should not see into closed containers","status":"passed","title":"should not see into closed containers","duration":2.699152999999569,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Container Visibility Chains"],"fullName":"Visibility Chains Integration Tests Container Visibility Chains should handle mixed open/closed container chains","status":"passed","title":"should handle mixed open/closed container chains","duration":0.8243000000002212,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see items on supporters","status":"passed","title":"should see items on supporters","duration":1.643502000000808,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Supporter Visibility"],"fullName":"Visibility Chains Integration Tests Supporter Visibility should see through containers on supporters","status":"passed","title":"should see through containers on supporters","duration":1.5625830000008136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should not see in dark rooms","status":"passed","title":"should not see in dark rooms","duration":1.3745689999996102,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with carried light source","status":"passed","title":"should see with carried light source","duration":0.7061560000001919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should see with light source in room","status":"passed","title":"should see with light source in room","duration":0.48938599999928556,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Room and Light Visibility"],"fullName":"Visibility Chains Integration Tests Room and Light Visibility should handle light in containers","status":"passed","title":"should handle light in containers","duration":1.3827710000005027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see items carried by actors","status":"passed","title":"should see items carried by actors","duration":1.1251030000003084,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should see worn items on actors","status":"passed","title":"should see worn items on actors","duration":0.8241949999992357,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Actor Visibility"],"fullName":"Visibility Chains Integration Tests Actor Visibility should not see items in closed containers carried by actors","status":"passed","title":"should not see items in closed containers carried by actors","duration":0.5342259999997623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see visible scenery","status":"passed","title":"should see visible scenery","duration":0.5696829999997135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should not see invisible scenery","status":"passed","title":"should not see invisible scenery","duration":0.3393230000001495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scenery Visibility"],"fullName":"Visibility Chains Integration Tests Scenery Visibility should see contents of visible scenery containers","status":"passed","title":"should see contents of visible scenery containers","duration":0.36673999999948137,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle deep visibility chains","status":"passed","title":"should handle deep visibility chains","duration":0.5457000000005792,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle multiple visibility blockers","status":"passed","title":"should handle multiple visibility blockers","duration":1.457499000000098,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Complex Visibility Scenarios"],"fullName":"Visibility Chains Integration Tests Complex Visibility Scenarios should handle visibility with movement","status":"passed","title":"should handle visibility with movement","duration":0.6212539999996807,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should get all items in scope","status":"passed","title":"should get all items in scope","duration":1.2702939999999217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Scope and In-Scope Items"],"fullName":"Visibility Chains Integration Tests Scope and In-Scope Items should handle scope in dark rooms with light","status":"passed","title":"should handle scope in dark rooms with light","duration":0.516219999999521,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should handle large visibility calculations efficiently","status":"passed","title":"should handle large visibility calculations efficiently","duration":2.2921170000008715,"failureMessages":[],"meta":{}},{"ancestorTitles":["Visibility Chains Integration Tests","Performance Tests"],"fullName":"Visibility Chains Integration Tests Performance Tests should cache visibility calculations","status":"passed","title":"should cache visibility calculations","duration":2.1417990000009013,"failureMessages":[],"meta":{}}],"startTime":1755207451547,"endTime":1755207451576.1418,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/visibility-chains.test.ts"},{"assertionResults":[{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should wear and remove simple items","status":"passed","title":"should wear and remove simple items","duration":4.309158000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should prevent wearing already worn items","status":"passed","title":"should prevent wearing already worn items","duration":0.5604949999997189,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Basic Wearable Behavior"],"fullName":"Wearable and Clothing Integration Tests Basic Wearable Behavior should track multiple worn items","status":"passed","title":"should track multiple worn items","duration":0.8287819999995918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should create functional clothing with pockets","status":"passed","title":"should create functional clothing with pockets","duration":2.6701139999995576,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should maintain pocket contents when wearing clothing","status":"passed","title":"should maintain pocket contents when wearing clothing","duration":0.9726909999999407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Clothing with Pockets"],"fullName":"Wearable and Clothing Integration Tests Clothing with Pockets should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","status":"skipped","title":"should handle items in pockets visibility - SKIPPED: Complex visibility scenario needs review","failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should support multiple layers of clothing","status":"passed","title":"should support multiple layers of clothing","duration":0.412148000000343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Layered Clothing"],"fullName":"Wearable and Clothing Integration Tests Layered Clothing should handle mixed clothing and accessories","status":"passed","title":"should handle mixed clothing and accessories","duration":0.6189599999997881,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle nested containers in pockets","status":"passed","title":"should handle nested containers in pockets","duration":0.495824999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Complex Pocket Hierarchies"],"fullName":"Wearable and Clothing Integration Tests Complex Pocket Hierarchies should handle pocket access when clothing is in container","status":"passed","title":"should handle pocket access when clothing is in container","duration":0.9585390000002008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle clothing that blocks slots","status":"passed","title":"should handle clothing that blocks slots","duration":0.4749149999997826,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.42821599999933824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Special Clothing Properties"],"fullName":"Wearable and Clothing Integration Tests Special Clothing Properties should track clothing condition","status":"passed","title":"should track clothing condition","duration":0.4141650000001391,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should handle actors with many worn items efficiently","status":"passed","title":"should handle actors with many worn items efficiently","duration":1.0314270000008037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wearable and Clothing Integration Tests","Performance with Many Wearables"],"fullName":"Wearable and Clothing Integration Tests Performance with Many Wearables should efficiently filter worn vs carried items","status":"passed","title":"should efficiently filter worn vs carried items","duration":1.1627539999999499,"failureMessages":[],"meta":{}}],"startTime":1755207463403,"endTime":1755207463419.1628,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/integration/wearable-clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share entities between WorldModel and AuthorModel","status":"passed","title":"should share entities between WorldModel and AuthorModel","duration":2.1496809999989637,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share spatial relationships between models","status":"passed","title":"should share spatial relationships between models","duration":1.814675999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Shared Data Store"],"fullName":"AuthorModel Shared Data Store should share state between models","status":"passed","title":"should share state between models","duration":0.5245950000007724,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":0.917793000000529,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":0.5482219999994413,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should bypass container trait requirement","status":"passed","title":"should bypass container trait requirement","duration":0.37239600000066275,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should not check for loops","status":"passed","title":"should not check for loops","duration":0.21904600000016217,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.6350870000005671,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.9528790000003937,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should use author: prefix for events","status":"passed","title":"should use author: prefix for events","duration":0.7340760000006412,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":0.7082200000004377,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":2.0464200000005803,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers from specs","status":"passed","title":"should fill containers from specs","duration":0.8772509999998874,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup container properties","status":"passed","title":"should setup container properties","duration":0.30579000000034284,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":0.3441930000008142,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should remove entities completely","status":"passed","title":"should remove entities completely","duration":0.6413419999989856,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Management"],"fullName":"AuthorModel Entity Management should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.2037239999990561,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player without validation","status":"passed","title":"should set player without validation","duration":0.25308599999880244,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear all world data","status":"passed","title":"should clear all world data","duration":0.31452399999943736,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Real-World Usage Patterns"],"fullName":"AuthorModel Real-World Usage Patterns should handle complex world setup","status":"passed","title":"should handle complex world setup","duration":1.7545899999986432,"failureMessages":[],"meta":{}}],"startTime":1755207450714,"endTime":1755207450731.7546,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should store entity type in attributes","status":"passed","title":"should store entity type in attributes","duration":1.7010969999992085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should handle name property correctly","status":"passed","title":"should handle name property correctly","duration":0.25906899999972666,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should serialize with version number","status":"passed","title":"should serialize with version number","duration":0.2817940000004455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","IFEntity with new ID system"],"fullName":"Entity System with ID Refactor IFEntity with new ID system should deserialize both old and new formats","status":"passed","title":"should deserialize both old and new formats","duration":0.3630140000004758,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in room exits","status":"passed","title":"should use IDs in room exits","duration":0.4458169999998063,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in door connections","status":"passed","title":"should use IDs in door connections","duration":0.2612359999984619,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Trait ID references"],"fullName":"Entity System with ID Refactor Trait ID references should use IDs in exit traits","status":"passed","title":"should use IDs in exit traits","duration":0.20964100000128383,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","WorldModel persistence with entities"],"fullName":"Entity System with ID Refactor WorldModel persistence with entities should save and restore entities with proper IDs","status":"passed","title":"should save and restore entities with proper IDs","duration":0.542621999999028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Entity System with ID Refactor","Entity relationships with IDs"],"fullName":"Entity System with ID Refactor Entity relationships with IDs should use IDs for all entity relationships","status":"passed","title":"should use IDs for all entity relationships","duration":1.1973369999996066,"failureMessages":[],"meta":{}}],"startTime":1755207479144,"endTime":1755207479149.1973,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entity-system-updates.test.ts"},{"assertionResults":[{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should generate sequential IDs with type prefixes","status":"passed","title":"should generate sequential IDs with type prefixes","duration":1.6723480000000563,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should throw error for unknown types","status":"passed","title":"should throw error for unknown types","duration":0.7448219999996581,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should use object type as default","status":"passed","title":"should use object type as default","duration":0.14560700000038196,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","generateId"],"fullName":"ID Generation System generateId should handle base36 conversion correctly","status":"passed","title":"should handle base36 conversion correctly","duration":0.31899999999950523,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should store entity name in attributes","status":"passed","title":"should store entity name in attributes","duration":0.31752299999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should allow duplicate names","status":"passed","title":"should allow duplicate names","duration":0.22846500000014203,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity creation and removal"],"fullName":"ID Generation System entity creation and removal should remove entities by ID","status":"passed","title":"should remove entities by ID","duration":0.6025100000006205,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","persistence"],"fullName":"ID Generation System persistence should save and restore ID system state","status":"passed","title":"should save and restore ID system state","duration":0.7848760000006223,"failureMessages":[],"meta":{}},{"ancestorTitles":["ID Generation System","entity attributes"],"fullName":"ID Generation System entity attributes should set displayName in entity attributes","status":"passed","title":"should set displayName in entity attributes","duration":0.3487569999997504,"failureMessages":[],"meta":{}}],"startTime":1755207485449,"endTime":1755207485454.3489,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/id-generation.test.ts"},{"assertionResults":[{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support language-agnostic token representation","status":"passed","title":"should support language-agnostic token representation","duration":2.691131999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should support multiple parts of speech for a token","status":"passed","title":"should support multiple parts of speech for a token","duration":0.5879540000005363,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Token structure"],"fullName":"ParsedCommand types Token structure should handle unknown words","status":"passed","title":"should handle unknown words","duration":0.24600499999996828,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent simple verbs","status":"passed","title":"should represent simple verbs","duration":0.5982320000002801,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent phrasal verbs with particles","status":"passed","title":"should represent phrasal verbs with particles","duration":0.29610700000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","VerbPhrase structure"],"fullName":"ParsedCommand types VerbPhrase structure should represent multi-word verbs","status":"passed","title":"should represent multi-word verbs","duration":0.22369400000025053,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent simple nouns","status":"passed","title":"should represent simple nouns","duration":0.5198730000001888,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent nouns with articles","status":"passed","title":"should represent nouns with articles","duration":0.15789200000017445,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should represent complex noun phrases","status":"passed","title":"should represent complex noun phrases","duration":0.32934800000020914,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","NounPhrase structure"],"fullName":"ParsedCommand types NounPhrase structure should support multiple candidates","status":"passed","title":"should support multiple candidates","duration":0.3168980000000374,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should represent preposition phrases","status":"passed","title":"should represent preposition phrases","duration":0.16282300000057148,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PrepPhrase structure"],"fullName":"ParsedCommand types PrepPhrase structure should support multi-word prepositions","status":"passed","title":"should support multi-word prepositions","duration":0.16411799999968935,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a simple command","status":"passed","title":"should represent a simple command","duration":0.39318199999979697,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a transitive command","status":"passed","title":"should represent a transitive command","duration":0.14141399999971327,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should represent a ditransitive command","status":"passed","title":"should represent a ditransitive command","duration":0.17447399999946356,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParsedCommand structure"],"fullName":"ParsedCommand types ParsedCommand structure should support extras field for additional data","status":"passed","title":"should support extras field for additional data","duration":0.1397419999993872,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent unknown command errors","status":"passed","title":"should represent unknown command errors","duration":0.148073000000295,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent syntax errors with position","status":"passed","title":"should represent syntax errors with position","duration":0.11725900000055844,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","ParseError structure"],"fullName":"ParsedCommand types ParseError structure should represent ambiguous input errors","status":"passed","title":"should represent ambiguous input errors","duration":0.15659400000004098,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support legacy ParsedCommandV1 structure","status":"passed","title":"should support legacy ParsedCommandV1 structure","duration":0.14935500000046886,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","Backward compatibility"],"fullName":"ParsedCommand types Backward compatibility should support ParsedObjectReference","status":"passed","title":"should support ParsedObjectReference","duration":2.228060999999798,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should still have PartOfSpeech enum during migration","status":"passed","title":"should still have PartOfSpeech enum during migration","duration":0.25959599999987404,"failureMessages":[],"meta":{}},{"ancestorTitles":["ParsedCommand types","PartOfSpeech enum (to be removed)"],"fullName":"ParsedCommand types PartOfSpeech enum (to be removed) should not have language-specific parts of speech","status":"passed","title":"should not have language-specific parts of speech","duration":0.5211269999999786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design ParsedCommand should not have language-specific fields at top level","status":"passed","title":"ParsedCommand should not have language-specific fields at top level","duration":0.8813529999997627,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Token structure should support language data extension","status":"passed","title":"Token structure should support language data extension","duration":0.14854099999956816,"failureMessages":[],"meta":{}},{"ancestorTitles":["Language-agnostic design"],"fullName":"Language-agnostic design Pattern names should be opaque strings","status":"passed","title":"Pattern names should be opaque strings","duration":0.18631999999979598,"failureMessages":[],"meta":{}}],"startTime":1755207457273,"endTime":1755207457286.1863,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/parsed-command.test.ts"},{"assertionResults":[{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should validate entity has required traits","status":"passed","title":"should validate entity has required traits","duration":1.6612650000006397,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should get list of missing traits","status":"passed","title":"should get list of missing traits","duration":0.7858150000001842,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","trait requirements"],"fullName":"Behavior trait requirements should work with behaviors having no requirements","status":"passed","title":"should work with behaviors having no requirements","duration":0.17073199999958888,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should return trait when present","status":"passed","title":"should return trait when present","duration":1.0431159999998272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","require helper"],"fullName":"Behavior require helper should throw error when required trait is missing","status":"passed","title":"should throw error when required trait is missing","duration":0.5312469999998939,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return trait when present","status":"passed","title":"should return trait when present","duration":0.5456860000003871,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","optional helper"],"fullName":"Behavior optional helper should return undefined when trait is missing","status":"passed","title":"should return undefined when trait is missing","duration":0.33347500000036234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors that check state","status":"passed","title":"should support behaviors that check state","duration":0.8847329999998692,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","behavior patterns"],"fullName":"Behavior behavior patterns should support behaviors with no requirements","status":"passed","title":"should support behaviors with no requirements","duration":1.6907660000006217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","inheritance"],"fullName":"Behavior inheritance should support behavior inheritance","status":"passed","title":"should support behavior inheritance","duration":0.5944300000001022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","error messages"],"fullName":"Behavior error messages should provide clear error messages for missing traits","status":"passed","title":"should provide clear error messages for missing traits","duration":0.3137409999999363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Behavior","static nature"],"fullName":"Behavior static nature should not require instantiation","status":"passed","title":"should not require instantiation","duration":0.33445099999971717,"failureMessages":[],"meta":{}}],"startTime":1755207479688,"endTime":1755207479697.3345,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/behaviors/behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should add and retrieve entities","status":"passed","title":"should add and retrieve entities","duration":1.2041890000000421,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should return undefined for non-existent entities","status":"passed","title":"should return undefined for non-existent entities","duration":0.22094300000026124,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should remove entities and clear traits","status":"passed","title":"should remove entities and clear traits","duration":0.8327950000002602,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","basic operations"],"fullName":"EntityStore basic operations should clear all entities","status":"passed","title":"should clear all entities","duration":0.459447000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get all entities","status":"passed","title":"should get all entities","duration":1.2261410000000978,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should get entities by type","status":"passed","title":"should get entities by type","duration":0.41557100000045466,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with specific trait","status":"passed","title":"should find entities with specific trait","duration":0.9600970000001325,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with all specified traits","status":"passed","title":"should find entities with all specified traits","duration":0.44877199999973527,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","querying"],"fullName":"EntityStore querying should find entities with any specified traits","status":"passed","title":"should find entities with any specified traits","duration":0.4093960000000152,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","iteration"],"fullName":"EntityStore iteration should be iterable","status":"passed","title":"should be iterable","duration":0.46225700000013603,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":1.0231690000000526,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","serialization"],"fullName":"EntityStore serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.2915389999998297,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","size property"],"fullName":"EntityStore size property should reflect number of entities","status":"passed","title":"should reflect number of entities","duration":0.17222899999978836,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle removing non-existent entity","status":"passed","title":"should handle removing non-existent entity","duration":0.8937839999998687,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should handle duplicate adds gracefully","status":"passed","title":"should handle duplicate adds gracefully","duration":0.17061800000010408,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntityStore","edge cases"],"fullName":"EntityStore edge cases should work with empty store","status":"passed","title":"should work with empty store","duration":0.22236100000009174,"failureMessages":[],"meta":{}}],"startTime":1755207446139,"endTime":1755207446150.2224,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/entity-store.test.ts"},{"assertionResults":[{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should create entity with id and type","status":"passed","title":"should create entity with id and type","duration":1.9048680000005334,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","constructor"],"fullName":"IFEntity constructor should accept creation params","status":"passed","title":"should accept creation params","duration":0.3188909999998941,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should add trait","status":"passed","title":"should add trait","duration":0.28991299999961484,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should remove trait","status":"passed","title":"should remove trait","duration":0.17683599999963917,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should replace existing trait of same type","status":"passed","title":"should replace existing trait of same type","duration":0.7358629999998811,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAll","status":"passed","title":"should check multiple traits with hasAll","duration":0.320252999999866,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should check multiple traits with hasAny","status":"passed","title":"should check multiple traits with hasAny","duration":0.1814249999997628,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all traits","status":"passed","title":"should get all traits","duration":0.8693709999997736,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should get all trait types","status":"passed","title":"should get all trait types","duration":0.932980999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should clear all traits","status":"passed","title":"should clear all traits","duration":2.394154999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","traits"],"fullName":"IFEntity traits should support trait aliases (getTrait, hasTrait)","status":"passed","title":"should support trait aliases (getTrait, hasTrait)","duration":0.7207050000006348,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify rooms","status":"passed","title":"should identify rooms","duration":0.25527899999997317,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify containers","status":"passed","title":"should identify containers","duration":0.2090039999993678,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should identify takeable items","status":"passed","title":"should identify takeable items","duration":0.14013799999975163,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get name from displayName attribute first","status":"passed","title":"should get name from displayName attribute first","duration":0.2335769999999684,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","convenience properties"],"fullName":"IFEntity convenience properties should get weight from attributes","status":"passed","title":"should get weight from attributes","duration":0.21009800000047107,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","cloning"],"fullName":"IFEntity cloning should create deep copy with new ID","status":"passed","title":"should create deep copy with new ID","duration":0.7591599999996106,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":2.4641270000001896,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","serialization"],"fullName":"IFEntity serialization should deserialize from JSON","status":"passed","title":"should deserialize from JSON","duration":0.6192829999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect openable trait","status":"passed","title":"should detect openable trait","duration":0.261569000000236,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","openable/lockable properties"],"fullName":"IFEntity openable/lockable properties should detect lockable trait","status":"passed","title":"should detect lockable trait","duration":0.2854670000006081,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","light source properties"],"fullName":"IFEntity light source properties should detect light provision","status":"passed","title":"should detect light provision","duration":0.243956999999682,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","switchable properties"],"fullName":"IFEntity switchable properties should detect switchable state","status":"passed","title":"should detect switchable state","duration":0.20424300000013318,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","actor properties"],"fullName":"IFEntity actor properties should detect actors and players","status":"passed","title":"should detect actors and players","duration":0.2639049999997951,"failureMessages":[],"meta":{}},{"ancestorTitles":["IFEntity","error handling"],"fullName":"IFEntity error handling should throw error for invalid traits","status":"passed","title":"should throw error for invalid traits","duration":0.9683469999999943,"failureMessages":[],"meta":{}}],"startTime":1755207457827,"endTime":1755207457844.9683,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/entities/if-entity.test.ts"},{"assertionResults":[{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should not see medicine when cabinet is closed","status":"passed","title":"should not see medicine when cabinet is closed","duration":5.9112059999997655,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should see medicine when cabinet is open","status":"passed","title":"should see medicine when cabinet is open","duration":1.334008000000722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should handle multiple state changes","status":"passed","title":"should handle multiple state changes","duration":1.2851520000003802,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify canSee works correctly","status":"passed","title":"should verify canSee works correctly","duration":0.9523640000006708,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container State Change Visibility"],"fullName":"Container State Change Visibility should verify medicine is in scope regardless of cabinet state","status":"passed","title":"should verify medicine is in scope regardless of cabinet state","duration":1.1925630000005185,"failureMessages":[],"meta":{}}],"startTime":1755207479967,"endTime":1755207479977.1926,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/visibility/container-state-visibility.test.ts"},{"assertionResults":[{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.643457000000126,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.8195550000000367,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should merge pronouns when partially provided","status":"passed","title":"should merge pronouns when partially provided","duration":0.2849529999994047,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","initialization"],"fullName":"ActorTrait initialization should handle partial inventory limits","status":"passed","title":"should handle partial inventory limits","duration":0.23789899999974295,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should set pronouns using setPronouns method","status":"passed","title":"should set pronouns using setPronouns method","duration":0.4356070000003456,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","pronoun management"],"fullName":"ActorTrait pronoun management should partially update pronouns","status":"passed","title":"should partially update pronouns","duration":0.40482000000065455,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should set inventory limits using setInventoryLimit method","status":"passed","title":"should set inventory limits using setInventoryLimit method","duration":0.21867699999984325,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should partially update inventory limits","status":"passed","title":"should partially update inventory limits","duration":0.16019999999934953,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","inventory limit management"],"fullName":"ActorTrait inventory limit management should create inventory limit if not exists","status":"passed","title":"should create inventory limit if not exists","duration":0.42426700000032724,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should make actor a player using makePlayer method","status":"passed","title":"should make actor a player using makePlayer method","duration":0.36641899999995076,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","player management"],"fullName":"ActorTrait player management should ensure player is always playable","status":"passed","title":"should ensure player is always playable","duration":0.13790900000003603,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should set custom properties using setCustomProperty","status":"passed","title":"should set custom properties using setCustomProperty","duration":0.1740380000001096,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should get custom properties using getCustomProperty","status":"passed","title":"should get custom properties using getCustomProperty","duration":0.1754899999996269,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should create customProperties object if not exists","status":"passed","title":"should create customProperties object if not exists","duration":0.15535100000033708,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should overwrite existing custom properties","status":"passed","title":"should overwrite existing custom properties","duration":0.10298899999997957,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","custom properties"],"fullName":"ActorTrait custom properties should handle various data types in custom properties","status":"passed","title":"should handle various data types in custom properties","duration":0.26416799999969953,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should handle state changes","status":"passed","title":"should handle state changes","duration":0.23694000000068627,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","state management"],"fullName":"ActorTrait state management should maintain state through other property changes","status":"passed","title":"should maintain state through other property changes","duration":0.16536300000007031,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4605490000003556,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should work with container trait for inventory","status":"passed","title":"should work with container trait for inventory","duration":0.28450299999985873,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create NPCs with custom properties","status":"passed","title":"should create NPCs with custom properties","duration":0.32373700000061945,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","entity integration"],"fullName":"ActorTrait entity integration should create player with inventory limits","status":"passed","title":"should create player with inventory limits","duration":0.20597300000008545,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.24408499999935884,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.16884699999991426,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.15179799999987154,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should handle pronoun edge cases","status":"passed","title":"should handle pronoun edge cases","duration":0.22171700000035344,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","edge cases"],"fullName":"ActorTrait edge cases should preserve existing data during construction","status":"passed","title":"should preserve existing data during construction","duration":0.17998999999963416,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should handle multiple actors in a world","status":"passed","title":"should handle multiple actors in a world","duration":0.23975699999937206,"failureMessages":[],"meta":{}},{"ancestorTitles":["ActorTrait","complex scenarios"],"fullName":"ActorTrait complex scenarios should support actor transformation","status":"passed","title":"should support actor transformation","duration":0.21574299999974755,"failureMessages":[],"meta":{}}],"startTime":1755207471213,"endTime":1755207471224.2397,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/actor.test.ts"},{"assertionResults":[{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.626267999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.783277999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","initialization"],"fullName":"AttachedTrait initialization should handle all attachment types","status":"passed","title":"should handle all attachment types","duration":0.4065129999999044,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track what object is attached to","status":"passed","title":"should track what object is attached to","duration":0.20939700000053563,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle detachable attachments","status":"passed","title":"should handle detachable attachments","duration":0.31240100000013626,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should handle permanent attachments","status":"passed","title":"should handle permanent attachments","duration":0.2421250000006694,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","attachment mechanics"],"fullName":"AttachedTrait attachment mechanics should track loose state","status":"passed","title":"should track loose state","duration":0.15201099999922008,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.49237600000014936,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","entity integration"],"fullName":"AttachedTrait entity integration should handle various attached objects","status":"passed","title":"should handle various attached objects","duration":0.3396710000006351,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle object breaking on detach","status":"passed","title":"should handle object breaking on detach","duration":0.4933149999997113,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle attachment point breaking","status":"passed","title":"should handle attachment point breaking","duration":0.20071900000039022,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","detachment effects"],"fullName":"AttachedTrait detachment effects should handle clean detachment","status":"passed","title":"should handle clean detachment","duration":0.10697400000026391,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should store detach sound","status":"passed","title":"should store detach sound","duration":0.10008599999946455,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","sound effects"],"fullName":"AttachedTrait sound effects should have appropriate sounds for attachment types","status":"passed","title":"should have appropriate sounds for attachment types","duration":0.1352919999999358,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.07347200000003795,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.17514399999981833,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07643300000017916,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle very strong attachment","status":"passed","title":"should handle very strong attachment","duration":0.06882600000062666,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle attachment without target","status":"passed","title":"should handle attachment without target","duration":0.058858999999756634,"failureMessages":[],"meta":{}},{"ancestorTitles":["AttachedTrait","edge cases"],"fullName":"AttachedTrait edge cases should handle partial detach effects","status":"passed","title":"should handle partial detach effects","duration":0.1537850000004255,"failureMessages":[],"meta":{}}],"startTime":1755207466720,"endTime":1755207466728.175,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/attached.test.ts"},{"assertionResults":[{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.433603999999832,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.35691700000006676,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","initialization"],"fullName":"BellPullTrait initialization should handle all ring patterns","status":"passed","title":"should handle all ring patterns","duration":0.21374900000046182,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should track bell association","status":"passed","title":"should track bell association","duration":0.2899600000000646,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle broken state","status":"passed","title":"should handle broken state","duration":0.5248599999995349,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should define audible distance","status":"passed","title":"should define audible distance","duration":0.4241309999997611,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","bell mechanics"],"fullName":"BellPullTrait bell mechanics should handle ring count variations","status":"passed","title":"should handle ring count variations","duration":0.15650499999992462,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should work with pullable and cord traits","status":"passed","title":"should work with pullable and cord traits","duration":0.8344429999997374,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","entity integration"],"fullName":"BellPullTrait entity integration should handle multiple bell pulls","status":"passed","title":"should handle multiple bell pulls","duration":0.5870260000001508,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should support different bell sounds","status":"passed","title":"should support different bell sounds","duration":0.27952099999947677,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","sound variations"],"fullName":"BellPullTrait sound variations should handle custom ring patterns","status":"passed","title":"should handle custom ring patterns","duration":0.20048200000019278,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should handle broken state","status":"passed","title":"should handle broken state","duration":0.14222900000004302,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","broken bell pulls"],"fullName":"BellPullTrait broken bell pulls should track previously working bell","status":"passed","title":"should track previously working bell","duration":0.13138600000002043,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12142499999936263,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.13413700000000972,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.28140499999972235,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle silent bell (audibleDistance 0)","status":"passed","title":"should handle silent bell (audibleDistance 0)","duration":0.12491700000009587,"failureMessages":[],"meta":{}},{"ancestorTitles":["BellPullTrait","edge cases"],"fullName":"BellPullTrait edge cases should handle very loud bell","status":"passed","title":"should handle very loud bell","duration":0.17931599999974424,"failureMessages":[],"meta":{}}],"startTime":1755207467067,"endTime":1755207467076.2815,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/bell-pull.test.ts"},{"assertionResults":[{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.768325999999433,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2321410000004107,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","initialization"],"fullName":"BreakableTrait initialization should handle all break methods","status":"passed","title":"should handle all break methods","duration":0.29942899999969086,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track hits taken","status":"passed","title":"should track hits taken","duration":0.3324220000004061,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should track partial breaking","status":"passed","title":"should track partial breaking","duration":0.2876249999999345,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle tool requirements","status":"passed","title":"should handle tool requirements","duration":0.3259539999999106,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","breaking mechanics"],"fullName":"BreakableTrait breaking mechanics should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.22064600000067003,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5527219999994486,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","entity integration"],"fullName":"BreakableTrait entity integration should work with multiple breakable objects","status":"passed","title":"should work with multiple breakable objects","duration":0.5646139999998923,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle breaking into pieces","status":"passed","title":"should handle breaking into pieces","duration":1.7133139999996274,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle revealing contents","status":"passed","title":"should handle revealing contents","duration":0.3423259999999573,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","break results"],"fullName":"BreakableTrait break results should handle no break products","status":"passed","title":"should handle no break products","duration":0.18351799999982177,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.19336999999995896,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","special effects"],"fullName":"BreakableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.10079200000018318,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1731100000006336,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.3109259999991991,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","edge cases"],"fullName":"BreakableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.15974499999992986,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a breakable wooden door","status":"passed","title":"should create a breakable wooden door","duration":0.29451499999959196,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a cuttable rope","status":"passed","title":"should create a cuttable rope","duration":0.2274439999991955,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a meltable ice barrier","status":"passed","title":"should create a meltable ice barrier","duration":0.18163600000025326,"failureMessages":[],"meta":{}},{"ancestorTitles":["BreakableTrait","realistic scenarios"],"fullName":"BreakableTrait realistic scenarios should create a container that reveals contents","status":"passed","title":"should create a container that reveals contents","duration":0.8270549999997456,"failureMessages":[],"meta":{}}],"startTime":1755207480084,"endTime":1755207480098.8271,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/breakable.test.ts"},{"assertionResults":[{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.5889139999999315,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.588369000000057,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button sizes","status":"passed","title":"should handle all button sizes","duration":0.23282900000049267,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","initialization"],"fullName":"ButtonTrait initialization should handle all button shapes","status":"passed","title":"should handle all button shapes","duration":0.2513180000005377,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4270759999999427,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","entity integration"],"fullName":"ButtonTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.39322600000014063,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle momentary button","status":"passed","title":"should handle momentary button","duration":0.20727100000021892,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button types"],"fullName":"ButtonTrait button types should handle latching button","status":"passed","title":"should handle latching button","duration":0.1752489999998943,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should store button appearance","status":"passed","title":"should store button appearance","duration":0.38351700000021083,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle labeled buttons","status":"passed","title":"should handle labeled buttons","duration":0.20184700000027078,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","descriptive properties"],"fullName":"ButtonTrait descriptive properties should handle various button materials","status":"passed","title":"should handle various button materials","duration":0.2469570000002932,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should track pressed state","status":"passed","title":"should track pressed state","duration":0.6747980000000098,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button states"],"fullName":"ButtonTrait button states should initialize with pressed state","status":"passed","title":"should initialize with pressed state","duration":0.2920530000001236,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.16890999999941414,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11990499999956228,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0804150000003574,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","edge cases"],"fullName":"ButtonTrait edge cases should handle complex button configurations","status":"passed","title":"should handle complex button configurations","duration":0.12105500000052416,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create emergency stop button","status":"passed","title":"should create emergency stop button","duration":0.5463150000005044,"failureMessages":[],"meta":{}},{"ancestorTitles":["ButtonTrait","button combinations"],"fullName":"ButtonTrait button combinations should create elevator call button","status":"passed","title":"should create elevator call button","duration":0.1478399999996327,"failureMessages":[],"meta":{}}],"startTime":1755207471251,"endTime":1755207471260.148,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/button.test.ts"},{"assertionResults":[{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.326147000000674,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3826920000001337,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","initialization"],"fullName":"ClothingTrait initialization should have all wearable properties","status":"passed","title":"should have all wearable properties","duration":0.8102239999998346,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support various materials","status":"passed","title":"should support various materials","duration":0.2663940000002185,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing materials"],"fullName":"ClothingTrait clothing materials should support composite materials","status":"passed","title":"should support composite materials","duration":0.2718560000002981,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should track condition states","status":"passed","title":"should track condition states","duration":0.8426819999995132,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle condition degradation","status":"passed","title":"should handle condition degradation","duration":0.25106200000027457,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing conditions"],"fullName":"ClothingTrait clothing conditions should handle non-damageable items","status":"passed","title":"should handle non-damageable items","duration":0.14338100000077247,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support various styles","status":"passed","title":"should support various styles","duration":0.4345030000004044,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing styles"],"fullName":"ClothingTrait clothing styles should support custom style descriptions","status":"passed","title":"should support custom style descriptions","duration":0.21684800000002724,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should create clothing that can contain pockets","status":"passed","title":"should create clothing that can contain pockets","duration":0.4907450000000608,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should attach pockets to clothing","status":"passed","title":"should attach pockets to clothing","duration":2.681058000000121,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing with pockets"],"fullName":"ClothingTrait clothing with pockets should maintain pocket contents when clothing is worn","status":"passed","title":"should maintain pocket contents when clothing is worn","duration":0.9250679999995555,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support standard clothing slots","status":"passed","title":"should support standard clothing slots","duration":1.120691000000079,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","clothing slots and layers"],"fullName":"ClothingTrait clothing slots and layers should support layered clothing","status":"passed","title":"should support layered clothing","duration":0.5284970000002431,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle clothing that blocks other slots","status":"passed","title":"should handle clothing that blocks other slots","duration":0.6941759999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle non-removable clothing","status":"passed","title":"should handle non-removable clothing","duration":0.2703590000000986,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","special clothing properties"],"fullName":"ClothingTrait special clothing properties should handle custom wear/remove messages","status":"passed","title":"should handle custom wear/remove messages","duration":0.27220499999930325,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should create various clothing items","status":"passed","title":"should create various clothing items","duration":0.6361679999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","entity integration"],"fullName":"ClothingTrait entity integration should distinguish between clothing and simple wearables","status":"passed","title":"should distinguish between clothing and simple wearables","duration":0.5423220000002402,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle multi-pocket utility clothing","status":"passed","title":"should handle multi-pocket utility clothing","duration":0.7652760000000853,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle outfit sets with matching properties","status":"passed","title":"should handle outfit sets with matching properties","duration":0.4688860000005661,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClothingTrait","complex clothing scenarios"],"fullName":"ClothingTrait complex clothing scenarios should handle damaged clothing states","status":"passed","title":"should handle damaged clothing states","duration":0.51750599999923,"failureMessages":[],"meta":{}}],"startTime":1755207463379,"endTime":1755207463396.5176,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/clothing.test.ts"},{"assertionResults":[{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should have container properties","status":"passed","title":"should have container properties","duration":2.801629999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.18563499999982014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","RoomTrait"],"fullName":"Container Capability RoomTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.1710510000002614,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should have container properties","status":"passed","title":"should have container properties","duration":0.2832220000000234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should be recognized as container capable","status":"passed","title":"should be recognized as container capable","duration":0.08986199999981181,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should work with canContain utility","status":"passed","title":"should work with canContain utility","duration":0.09599600000001374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","ActorTrait"],"fullName":"Container Capability ActorTrait should update capacity through setInventoryLimit","status":"passed","title":"should update capacity through setInventoryLimit","duration":0.09784800000034011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from room","status":"passed","title":"should get container trait from room","duration":0.15665499999977328,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get container trait from actor","status":"passed","title":"should get container trait from actor","duration":0.19184800000039104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should get explicit container trait first","status":"passed","title":"should get explicit container trait first","duration":0.21776799999952345,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","getContainerTrait"],"fullName":"Container Capability getContainerTrait should return undefined for non-container entities","status":"passed","title":"should return undefined for non-container entities","duration":0.1373040000007677,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow moving items into rooms without explicit ContainerTrait","status":"passed","title":"should allow moving items into rooms without explicit ContainerTrait","duration":0.21381899999960297,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container Capability","Integration with World Model"],"fullName":"Container Capability Integration with World Model should allow actors to carry items without explicit ContainerTrait","status":"passed","title":"should allow actors to carry items without explicit ContainerTrait","duration":0.14921700000013516,"failureMessages":[],"meta":{}}],"startTime":1755207479078,"endTime":1755207479083.2139,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container-capability.test.ts"},{"assertionResults":[{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.9871100000000297,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","initialization"],"fullName":"ContainerTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7402380000003177,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle weight limit","status":"passed","title":"should handle weight limit","duration":0.5846660000006523,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle volume limit","status":"passed","title":"should handle volume limit","duration":0.2603060000001278,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle item count limit","status":"passed","title":"should handle item count limit","duration":0.3675039999998262,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle multiple constraints","status":"passed","title":"should handle multiple constraints","duration":0.5112960000005842,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","capacity constraints"],"fullName":"ContainerTrait capacity constraints should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.23296599999957834,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should default to opaque","status":"passed","title":"should default to opaque","duration":0.1404660000007425,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","transparency"],"fullName":"ContainerTrait transparency should handle transparent containers","status":"passed","title":"should handle transparent containers","duration":0.27995499999997264,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should default to not enterable","status":"passed","title":"should default to not enterable","duration":0.12040900000101828,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","enterable containers"],"fullName":"ContainerTrait enterable containers should handle enterable containers","status":"passed","title":"should handle enterable containers","duration":0.14515799999935552,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.14154299999972864,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.15348099999937403,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.1020570000000589,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","type restrictions"],"fullName":"ContainerTrait type restrictions should handle no type restrictions","status":"passed","title":"should handle no type restrictions","duration":0.06312900000011723,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.12376100000074075,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","entity integration"],"fullName":"ContainerTrait entity integration should replace existing container trait","status":"passed","title":"should replace existing container trait","duration":0.10529199999837147,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle transparent container setup","status":"passed","title":"should handle transparent container setup","duration":0.5827659999995376,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle secure container setup","status":"passed","title":"should handle secure container setup","duration":0.16640400000142108,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","special container types"],"fullName":"ContainerTrait special container types should handle nested container setup","status":"passed","title":"should handle nested container setup","duration":0.08687999999892781,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty capacity object","status":"passed","title":"should handle empty capacity object","duration":0.10866399999940768,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle empty arrays for type restrictions","status":"passed","title":"should handle empty arrays for type restrictions","duration":0.08688900000015565,"failureMessages":[],"meta":{}},{"ancestorTitles":["ContainerTrait","edge cases"],"fullName":"ContainerTrait edge cases should handle zero capacity values","status":"passed","title":"should handle zero capacity values","duration":0.3341939999991155,"failureMessages":[],"meta":{}}],"startTime":1755207454854,"endTime":1755207454862.3342,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/container.test.ts"},{"assertionResults":[{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1084350000000995,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.36504100000001927,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","initialization"],"fullName":"CordTrait initialization should handle all cord types","status":"passed","title":"should handle all cord types","duration":0.348559999999452,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should track tension state","status":"passed","title":"should track tension state","duration":0.3143239999999423,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle length properties","status":"passed","title":"should handle length properties","duration":0.2693060000001424,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle breakable cords","status":"passed","title":"should handle breakable cords","duration":0.21298399999977846,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","cord mechanics"],"fullName":"CordTrait cord mechanics should handle unbreakable cords","status":"passed","title":"should handle unbreakable cords","duration":0.1452609999996639,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.6098210000000108,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","entity integration"],"fullName":"CordTrait entity integration should handle different cord materials","status":"passed","title":"should handle different cord materials","duration":0.38996899999983725,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should store activation target","status":"passed","title":"should store activation target","duration":0.1645379999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","activation behavior"],"fullName":"CordTrait activation behavior should handle cords without activation","status":"passed","title":"should handle cords without activation","duration":0.07513999999991938,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should store pull and break sounds","status":"passed","title":"should store pull and break sounds","duration":0.06947200000013254,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should handle cords without sounds","status":"passed","title":"should handle cords without sounds","duration":0.06366399999933492,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","sound effects"],"fullName":"CordTrait sound effects should have different sounds for different materials","status":"passed","title":"should have different sounds for different materials","duration":0.06491300000016054,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.129399999999805,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.16503000000011525,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.07354899999972986,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle cord at max extension","status":"passed","title":"should handle cord at max extension","duration":0.07195700000011129,"failureMessages":[],"meta":{}},{"ancestorTitles":["CordTrait","edge cases"],"fullName":"CordTrait edge cases should handle very weak cord","status":"passed","title":"should handle very weak cord","duration":0.10963399999945977,"failureMessages":[],"meta":{}}],"startTime":1755207485284,"endTime":1755207485290.165,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/cord.test.ts"},{"assertionResults":[{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.4951719999999113,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.0943999999999505,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","initialization"],"fullName":"DialTrait initialization should handle all display types","status":"passed","title":"should handle all display types","duration":0.2697440000001734,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.8077290000001085,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","entity integration"],"fullName":"DialTrait entity integration should work with TurnableTrait","status":"passed","title":"should work with TurnableTrait","duration":0.661008000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle numbered dial with tick marks","status":"passed","title":"should handle numbered dial with tick marks","duration":0.33482400000048074,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle labeled dial","status":"passed","title":"should handle labeled dial","duration":1.613126999999622,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle continuous vs discrete dial","status":"passed","title":"should handle continuous vs discrete dial","duration":0.32713200000034703,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","dial configurations"],"fullName":"DialTrait dial configurations should handle dial with units","status":"passed","title":"should handle dial with units","duration":0.36071199999969394,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.2168310000006386,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.13062400000035268,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","edge cases"],"fullName":"DialTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.2336219999997411,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a radio tuner dial","status":"passed","title":"should create a radio tuner dial","duration":0.25907199999983277,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a washing machine dial","status":"passed","title":"should create a washing machine dial","duration":0.19406100000014703,"failureMessages":[],"meta":{}},{"ancestorTitles":["DialTrait","realistic scenarios"],"fullName":"DialTrait realistic scenarios should create a combination lock dial","status":"passed","title":"should create a combination lock dial","duration":0.1286549999995259,"failureMessages":[],"meta":{}}],"startTime":1755207465880,"endTime":1755207465889.259,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/dial.test.ts"},{"assertionResults":[{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should create trait with required room connections","status":"passed","title":"should create trait with required room connections","duration":2.9732059999996636,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should throw error without room connections","status":"passed","title":"should throw error without room connections","duration":1.63084599999911,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should handle unidirectional doors","status":"passed","title":"should handle unidirectional doors","duration":0.3724259999999049,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","initialization"],"fullName":"DoorTrait initialization should maintain bidirectional as default","status":"passed","title":"should maintain bidirectional as default","duration":2.1685600000000704,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":1.0108970000001136,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.8581789999998364,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create door with openable trait","status":"passed","title":"should create door with openable trait","duration":0.6777909999991607,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","entity integration"],"fullName":"DoorTrait entity integration should create lockable door","status":"passed","title":"should create lockable door","duration":0.5648879999998826,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should connect two specific rooms","status":"passed","title":"should connect two specific rooms","duration":0.3129220000000714,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","room connections"],"fullName":"DoorTrait room connections should handle room order consistently","status":"passed","title":"should handle room order consistently","duration":0.20547700000042823,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create complete room-door-room setup","status":"passed","title":"should create complete room-door-room setup","duration":1.5044989999996687,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","connected rooms fixture"],"fullName":"DoorTrait connected rooms fixture should create locked door between rooms","status":"passed","title":"should create locked door between rooms","duration":0.33733200000006036,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should handle self-connecting door","status":"passed","title":"should handle self-connecting door","duration":0.1989530000000741,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should preserve all properties during assignment","status":"passed","title":"should preserve all properties during assignment","duration":0.20895000000018626,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","edge cases"],"fullName":"DoorTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1322519999994256,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support standard room door","status":"passed","title":"should support standard room door","duration":0.13763199999993958,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support locked exterior door","status":"passed","title":"should support locked exterior door","duration":0.1841420000000653,"failureMessages":[],"meta":{}},{"ancestorTitles":["DoorTrait","common door patterns"],"fullName":"DoorTrait common door patterns should support archway (always open)","status":"passed","title":"should support archway (always open)","duration":0.17510200000015175,"failureMessages":[],"meta":{}}],"startTime":1755207479518,"endTime":1755207479533.184,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/door.test.ts"},{"assertionResults":[{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.6545399999995425,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3395959999998013,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.14811599999939062,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","initialization"],"fullName":"EdibleTrait initialization should allow zero nutrition value","status":"passed","title":"should allow zero nutrition value","duration":0.08649299999979121,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle solid food","status":"passed","title":"should handle solid food","duration":0.2022930000002816,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should handle liquids","status":"passed","title":"should handle liquids","duration":0.2910179999998945,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","food vs liquid"],"fullName":"EdibleTrait food vs liquid should support various food types","status":"passed","title":"should support various food types","duration":0.16190499999993335,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle single serving items","status":"passed","title":"should handle single serving items","duration":0.08572499999991123,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should handle multi-serving items","status":"passed","title":"should handle multi-serving items","duration":0.1971239999993486,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should allow fractional servings","status":"passed","title":"should allow fractional servings","duration":0.10304299999916111,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","servings management"],"fullName":"EdibleTrait servings management should track serving consumption","status":"passed","title":"should track serving consumption","duration":0.10865000000012515,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should specify remains type","status":"passed","title":"should specify remains type","duration":0.1127729999998337,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should handle items with no remains","status":"passed","title":"should handle items with no remains","duration":0.07769600000028731,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","remains after consumption"],"fullName":"EdibleTrait remains after consumption should support various remain types","status":"passed","title":"should support various remain types","duration":0.0778760000002876,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with no effects","status":"passed","title":"should handle items with no effects","duration":0.059957000000395055,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should handle items with effects","status":"passed","title":"should handle items with effects","duration":0.07492799999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should support various effect types","status":"passed","title":"should support various effect types","duration":0.11496299999998882,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","effects"],"fullName":"EdibleTrait effects should allow effect without description","status":"passed","title":"should allow effect without description","duration":0.09356899999966117,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should support custom consume messages","status":"passed","title":"should support custom consume messages","duration":0.09416899999996531,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should handle no consume message","status":"passed","title":"should handle no consume message","duration":0.050969000000804954,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","consume messages"],"fullName":"EdibleTrait consume messages should have appropriate messages for food vs liquid","status":"passed","title":"should have appropriate messages for food vs liquid","duration":0.06405399999948713,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.14999400000033347,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","physical properties"],"fullName":"EdibleTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.07530300000053103,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3514900000000125,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should create various edible entities","status":"passed","title":"should create various edible entities","duration":0.1579940000001443,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","entity integration"],"fullName":"EdibleTrait entity integration should work with containers for liquids","status":"passed","title":"should work with containers for liquids","duration":0.12474599999950442,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10344799999984389,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.07524800000010146,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.09104100000058679,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.07285899999988033,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","edge cases"],"fullName":"EdibleTrait edge cases should handle very large values","status":"passed","title":"should handle very large values","duration":0.0787000000000262,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle magical food with multiple effects","status":"passed","title":"should handle magical food with multiple effects","duration":0.09788800000023912,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle rations with multiple servings","status":"passed","title":"should handle rations with multiple servings","duration":0.09359000000040396,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle transformation items","status":"passed","title":"should handle transformation items","duration":0.05971599999975297,"failureMessages":[],"meta":{}},{"ancestorTitles":["EdibleTrait","complex scenarios"],"fullName":"EdibleTrait complex scenarios should handle poisoned or cursed food","status":"passed","title":"should handle poisoned or cursed food","duration":0.11370999999962805,"failureMessages":[],"meta":{}}],"startTime":1755207458414,"endTime":1755207458421.1138,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/edible.test.ts"},{"assertionResults":[{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.4694390000004205,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","initialization"],"fullName":"EntryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.5710479999997915,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"in\" preposition for containers","status":"passed","title":"should handle \"in\" preposition for containers","duration":0.2428089999993972,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"on\" preposition for surfaces","status":"passed","title":"should handle \"on\" preposition for surfaces","duration":0.19643200000064098,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"under\" preposition","status":"passed","title":"should handle \"under\" preposition","duration":0.09318499999972119,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","prepositions"],"fullName":"EntryTrait prepositions should handle \"behind\" preposition","status":"passed","title":"should handle \"behind\" preposition","duration":0.12455499999941821,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track single occupant","status":"passed","title":"should track single occupant","duration":0.7500910000007934,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track multiple occupants","status":"passed","title":"should track multiple occupants","duration":0.2863179999994827,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should handle unlimited occupancy","status":"passed","title":"should handle unlimited occupancy","duration":0.3515749999996842,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","occupancy management"],"fullName":"EntryTrait occupancy management should track occupancy state","status":"passed","title":"should track occupancy state","duration":0.34736100000009174,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle visible occupants","status":"passed","title":"should handle visible occupants","duration":0.16499099999964528,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle hidden occupants","status":"passed","title":"should handle hidden occupants","duration":0.11145400000077643,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle one-way visibility","status":"passed","title":"should handle one-way visibility","duration":0.13673599999947328,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","visibility and perception"],"fullName":"EntryTrait visibility and perception should handle soundproofing","status":"passed","title":"should handle soundproofing","duration":0.12847099999999045,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle standing entries","status":"passed","title":"should handle standing entries","duration":0.10175900000012916,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle sitting entries","status":"passed","title":"should handle sitting entries","duration":0.10001900000042951,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle lying entries","status":"passed","title":"should handle lying entries","duration":0.056682000000364496,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","posture requirements"],"fullName":"EntryTrait posture requirements should handle no posture requirement","status":"passed","title":"should handle no posture requirement","duration":0.067641999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle enter message","status":"passed","title":"should handle enter message","duration":0.06833600000027218,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle exit message","status":"passed","title":"should handle exit message","duration":0.09473900000011781,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle full message","status":"passed","title":"should handle full message","duration":0.07390200000008917,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","custom messages"],"fullName":"EntryTrait custom messages should handle blocked message","status":"passed","title":"should handle blocked message","duration":0.09534400000029564,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle stationary entries","status":"passed","title":"should handle stationary entries","duration":1.4716239999997924,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle mobile entries","status":"passed","title":"should handle mobile entries","duration":0.10211799999979121,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","mobile entries"],"fullName":"EntryTrait mobile entries should handle rideable animals","status":"passed","title":"should handle rideable animals","duration":0.09251099999983126,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle open access","status":"passed","title":"should handle open access","duration":0.05167699999947217,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle blocked access","status":"passed","title":"should handle blocked access","duration":0.05706800000007206,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","access control"],"fullName":"EntryTrait access control should handle conditional access","status":"passed","title":"should handle conditional access","duration":0.10206000000016502,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.10507700000016484,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","entity integration"],"fullName":"EntryTrait entity integration should replace existing entry trait","status":"passed","title":"should replace existing entry trait","duration":0.08111400000052527,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle nested entries","status":"passed","title":"should handle nested entries","duration":0.2458759999999529,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle multi-purpose entries","status":"passed","title":"should handle multi-purpose entries","duration":0.3223920000000362,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle vehicle with compartments","status":"passed","title":"should handle vehicle with compartments","duration":0.24887799999942217,"failureMessages":[],"meta":{}},{"ancestorTitles":["EntryTrait","complex entry scenarios"],"fullName":"EntryTrait complex entry scenarios should handle theatrical entries","status":"passed","title":"should handle theatrical entries","duration":0.09655899999961548,"failureMessages":[],"meta":{}}],"startTime":1755207445984,"endTime":1755207445995.3225,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/entry.test.ts"},{"assertionResults":[{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with required values","status":"passed","title":"should create trait with required values","duration":1.5773760000001857,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should throw error if required fields are missing","status":"passed","title":"should throw error if required fields are missing","duration":0.897609000000557,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","initialization"],"fullName":"ExitTrait initialization should create trait with all optional values","status":"passed","title":"should create trait with all optional values","duration":0.9285649999992529,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle north direction","status":"passed","title":"should handle north direction","duration":0.6475549999995565,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle south direction","status":"passed","title":"should handle south direction","duration":0.2869520000003831,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle east direction","status":"passed","title":"should handle east direction","duration":0.2733399999997346,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle west direction","status":"passed","title":"should handle west direction","duration":0.38332400000035705,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle up direction","status":"passed","title":"should handle up direction","duration":0.2589539999999033,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle down direction","status":"passed","title":"should handle down direction","duration":0.5422960000005332,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle in direction","status":"passed","title":"should handle in direction","duration":0.3049220000002606,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle out direction","status":"passed","title":"should handle out direction","duration":0.27476600000045437,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","standard directional exits"],"fullName":"ExitTrait standard directional exits should handle diagonal directions","status":"passed","title":"should handle diagonal directions","duration":0.5710509999998976,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle magic words","status":"passed","title":"should handle magic words","duration":0.7771499999998923,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle action-based exits","status":"passed","title":"should handle action-based exits","duration":0.17489800000021205,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","custom exits"],"fullName":"ExitTrait custom exits should handle object-interaction exits","status":"passed","title":"should handle object-interaction exits","duration":0.16827200000079756,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle simple bidirectional exit","status":"passed","title":"should handle simple bidirectional exit","duration":0.1683840000005148,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","bidirectional exits"],"fullName":"ExitTrait bidirectional exits should handle bidirectional portal","status":"passed","title":"should handle bidirectional portal","duration":0.3306000000002314,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle hidden exits","status":"passed","title":"should handle hidden exits","duration":0.3736109999999826,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle visible but unlisted exits","status":"passed","title":"should handle visible but unlisted exits","duration":0.3072229999997944,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","visibility and listing"],"fullName":"ExitTrait visibility and listing should handle discovered exits","status":"passed","title":"should handle discovered exits","duration":0.22910500000034517,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle simple condition","status":"passed","title":"should handle simple condition","duration":0.21549299999969662,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle complex condition","status":"passed","title":"should handle complex condition","duration":0.15071800000077928,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","conditional exits"],"fullName":"ExitTrait conditional exits should handle time-based condition","status":"passed","title":"should handle time-based condition","duration":0.1542909999998301,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom use messages","status":"passed","title":"should handle custom use messages","duration":1.5219600000000355,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should handle custom blocked messages","status":"passed","title":"should handle custom blocked messages","duration":0.19455800000014278,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","messages"],"fullName":"ExitTrait messages should allow no custom messages","status":"passed","title":"should allow no custom messages","duration":0.25921699999980774,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.7295700000004217,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","entity integration"],"fullName":"ExitTrait entity integration should replace existing exit trait","status":"passed","title":"should replace existing exit trait","duration":0.363894000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle one-way exit","status":"passed","title":"should handle one-way exit","duration":0.1376430000000255,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle teleporter","status":"passed","title":"should handle teleporter","duration":0.1702660000000833,"failureMessages":[],"meta":{}},{"ancestorTitles":["ExitTrait","special exit types"],"fullName":"ExitTrait special exit types should handle vehicle-based exit","status":"passed","title":"should handle vehicle-based exit","duration":0.19760200000018813,"failureMessages":[],"meta":{}}],"startTime":1755207457811,"endTime":1755207457826.1975,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/exit.test.ts"},{"assertionResults":[{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1305959999999686,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":1.2438050000000658,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","initialization"],"fullName":"FragileTrait initialization should handle all fragile materials","status":"passed","title":"should handle all fragile materials","duration":0.2902720000001864,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default glass to sharp fragments","status":"passed","title":"should default glass to sharp fragments","duration":0.15662499999962165,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should default crystal to sharp fragments","status":"passed","title":"should default crystal to sharp fragments","duration":0.2691350000004604,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should not default other materials to sharp","status":"passed","title":"should not default other materials to sharp","duration":0.24550899999940157,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","sharp fragments logic"],"fullName":"FragileTrait sharp fragments logic should allow override of sharp fragments","status":"passed","title":"should allow override of sharp fragments","duration":0.14529899999979534,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break threshold"],"fullName":"FragileTrait break threshold should handle different fragility levels","status":"passed","title":"should handle different fragility levels","duration":0.21438099999977567,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.7252930000004199,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","entity integration"],"fullName":"FragileTrait entity integration should work with multiple fragile objects","status":"passed","title":"should work with multiple fragile objects","duration":0.2832699999999022,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that break into fragments","status":"passed","title":"should handle objects that break into fragments","duration":1.2192079999995258,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should handle objects that trigger events when broken","status":"passed","title":"should handle objects that trigger events when broken","duration":0.17286200000035024,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","break behavior"],"fullName":"FragileTrait break behavior should track damaged state","status":"passed","title":"should track damaged state","duration":0.10379600000032951,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should track value loss when broken","status":"passed","title":"should track value loss when broken","duration":0.11227799999960553,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","value handling"],"fullName":"FragileTrait value handling should handle no value specification","status":"passed","title":"should handle no value specification","duration":0.06429100000059407,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.31133799999952316,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.3337229999997362,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.13066600000001927,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","edge cases"],"fullName":"FragileTrait edge cases should handle custom break messages","status":"passed","title":"should handle custom break messages","duration":0.06956499999978405,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile glass vase","status":"passed","title":"should create a fragile glass vase","duration":0.1527750000004744,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a fragile ice sculpture","status":"passed","title":"should create a fragile ice sculpture","duration":0.12222699999983888,"failureMessages":[],"meta":{}},{"ancestorTitles":["FragileTrait","realistic scenarios"],"fullName":"FragileTrait realistic scenarios should create a security-protected display case","status":"passed","title":"should create a security-protected display case","duration":0.1454649999996036,"failureMessages":[],"meta":{}}],"startTime":1755207465889,"endTime":1755207465899.1528,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/fragile.test.ts"},{"assertionResults":[{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.3225940000002083,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","initialization"],"fullName":"IdentityTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4431409999997413,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"a\" article","status":"passed","title":"should handle \"a\" article","duration":0.27843399999983376,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"an\" article","status":"passed","title":"should handle \"an\" article","duration":0.4690259999997579,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"the\" article","status":"passed","title":"should handle \"the\" article","duration":0.41503000000011525,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle \"some\" article for plural/mass nouns","status":"passed","title":"should handle \"some\" article for plural/mass nouns","duration":0.25904699999955483,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","article handling"],"fullName":"IdentityTrait article handling should handle empty article for proper names","status":"passed","title":"should handle empty article for proper names","duration":0.12327199999981531,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should start with empty aliases","status":"passed","title":"should start with empty aliases","duration":0.14315200000055484,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","aliases"],"fullName":"IdentityTrait aliases should store multiple aliases","status":"passed","title":"should store multiple aliases","duration":1.1886410000006435,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle full description","status":"passed","title":"should handle full description","duration":0.22061000000030617,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should handle brief description separately","status":"passed","title":"should handle brief description separately","duration":0.10234399999990273,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","descriptions"],"fullName":"IdentityTrait descriptions should allow empty descriptions","status":"passed","title":"should allow empty descriptions","duration":0.10104500000034022,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should default to not concealed","status":"passed","title":"should default to not concealed","duration":0.0814250000003085,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","concealment"],"fullName":"IdentityTrait concealment should handle concealed objects","status":"passed","title":"should handle concealed objects","duration":0.11843800000042393,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle weight","status":"passed","title":"should handle weight","duration":0.07587899999998626,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle volume","status":"passed","title":"should handle volume","duration":0.0972910000000411,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should handle size categories","status":"passed","title":"should handle size categories","duration":0.18348299999979645,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","physical properties"],"fullName":"IdentityTrait physical properties should allow undefined physical properties","status":"passed","title":"should allow undefined physical properties","duration":0.12454499999967084,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.19030199999997421,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","entity integration"],"fullName":"IdentityTrait entity integration should replace existing identity trait","status":"passed","title":"should replace existing identity trait","duration":0.1583410000002914,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle proper names correctly","status":"passed","title":"should handle proper names correctly","duration":0.09872300000006362,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle mass nouns","status":"passed","title":"should handle mass nouns","duration":0.10640700000021752,"failureMessages":[],"meta":{}},{"ancestorTitles":["IdentityTrait","special cases"],"fullName":"IdentityTrait special cases should handle unique items","status":"passed","title":"should handle unique items","duration":0.10904400000072201,"failureMessages":[],"meta":{}}],"startTime":1755207478925,"endTime":1755207478933.1902,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/identity.test.ts"},{"assertionResults":[{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.752476999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4091369999996459,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","initialization"],"fullName":"LeverTrait initialization should handle all positions","status":"passed","title":"should handle all positions","duration":0.16962300000068353,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should track position changes","status":"passed","title":"should track position changes","duration":0.20709900000019843,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.18152399999962654,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","lever mechanics"],"fullName":"LeverTrait lever mechanics should handle stuck state","status":"passed","title":"should handle stuck state","duration":0.15918599999986327,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should work with pullable trait","status":"passed","title":"should work with pullable trait","duration":0.38959800000066025,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","entity integration"],"fullName":"LeverTrait entity integration should handle multiple levers in world","status":"passed","title":"should handle multiple levers in world","duration":0.1888969999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should store custom position names","status":"passed","title":"should store custom position names","duration":0.25486300000011397,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","custom position names"],"fullName":"LeverTrait custom position names should handle partial position names","status":"passed","title":"should handle partial position names","duration":0.20471699999961857,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should store lever sound","status":"passed","title":"should store lever sound","duration":0.20257800000035786,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","sound effects"],"fullName":"LeverTrait sound effects should handle missing sound","status":"passed","title":"should handle missing sound","duration":0.10359100000005128,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.10649300000022777,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.139060999999856,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.20602000000053522,"failureMessages":[],"meta":{}},{"ancestorTitles":["LeverTrait","edge cases"],"fullName":"LeverTrait edge cases should handle stuck spring-loaded lever","status":"passed","title":"should handle stuck spring-loaded lever","duration":0.12233999999989464,"failureMessages":[],"meta":{}}],"startTime":1755207472513,"endTime":1755207472518.206,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lever.test.ts"},{"assertionResults":[{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.136566999999559,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3566099999998187,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.15538899999955902,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","initialization"],"fullName":"LightSourceTrait initialization should handle fuel-based initialization","status":"passed","title":"should handle fuel-based initialization","duration":0.20358500000020285,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should support various brightness levels","status":"passed","title":"should support various brightness levels","duration":0.22440199999982724,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should handle edge brightness values","status":"passed","title":"should handle edge brightness values","duration":0.17837299999973766,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","brightness levels"],"fullName":"LightSourceTrait brightness levels should allow out-of-range brightness values","status":"passed","title":"should allow out-of-range brightness values","duration":0.11435600000004342,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should track lit status","status":"passed","title":"should track lit status","duration":0.10560999999961496,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","lit state"],"fullName":"LightSourceTrait lit state should maintain brightness when lit state changes","status":"passed","title":"should maintain brightness when lit state changes","duration":0.2207060000000638,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle infinite fuel sources","status":"passed","title":"should handle infinite fuel sources","duration":0.1315359999998691,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle fuel-based sources","status":"passed","title":"should handle fuel-based sources","duration":0.08010799999919982,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should track fuel consumption","status":"passed","title":"should track fuel consumption","duration":0.07417600000007951,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle various consumption rates","status":"passed","title":"should handle various consumption rates","duration":0.06937600000037492,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","fuel management"],"fullName":"LightSourceTrait fuel management should handle partial fuel properties","status":"passed","title":"should handle partial fuel properties","duration":0.06635599999935948,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3415159999995012,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should create various light source entities","status":"passed","title":"should create various light source entities","duration":0.2222590000001219,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with switchable light sources","status":"passed","title":"should work with switchable light sources","duration":0.20395900000039546,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","entity integration"],"fullName":"LightSourceTrait entity integration should work with wearable light sources","status":"passed","title":"should work with wearable light sources","duration":0.19012300000031246,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle flame-based sources","status":"passed","title":"should handle flame-based sources","duration":0.12991199999942182,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle electric sources","status":"passed","title":"should handle electric sources","duration":0.2690920000004553,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","light source types"],"fullName":"LightSourceTrait light source types should handle magical sources","status":"passed","title":"should handle magical sources","duration":0.11526700000013079,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12726800000018557,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.060187999999470776,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0656090000002223,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle zero values","status":"passed","title":"should handle zero values","duration":0.07892200000060257,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle negative values","status":"passed","title":"should handle negative values","duration":0.08160299999963172,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","edge cases"],"fullName":"LightSourceTrait edge cases should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.09145900000021356,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle refillable light sources","status":"passed","title":"should handle refillable light sources","duration":0.10527799999999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle multi-mode light sources","status":"passed","title":"should handle multi-mode light sources","duration":0.13327599999956874,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle degrading light sources","status":"passed","title":"should handle degrading light sources","duration":0.16921999999976833,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle emergency light sources","status":"passed","title":"should handle emergency light sources","duration":0.1070399999998699,"failureMessages":[],"meta":{}},{"ancestorTitles":["LightSourceTrait","complex scenarios"],"fullName":"LightSourceTrait complex scenarios should handle combined light sources","status":"passed","title":"should handle combined light sources","duration":0.10976800000025833,"failureMessages":[],"meta":{}}],"startTime":1755207458349,"endTime":1755207458356.1692,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/light-source.test.ts"},{"assertionResults":[{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.342177000000447,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3571320000000924,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should use startsLocked to set initial isLocked if not provided","status":"passed","title":"should use startsLocked to set initial isLocked if not provided","duration":0.10206699999980628,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","initialization"],"fullName":"LockableTrait initialization should prefer explicit isLocked over startsLocked","status":"passed","title":"should prefer explicit isLocked over startsLocked","duration":0.15949799999998504,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle single key","status":"passed","title":"should handle single key","duration":0.19218799999998737,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle multiple keys","status":"passed","title":"should handle multiple keys","duration":0.47960500000044703,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle both single and multiple keys","status":"passed","title":"should handle both single and multiple keys","duration":0.1862539999992805,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","key management"],"fullName":"LockableTrait key management should handle master key acceptance","status":"passed","title":"should handle master key acceptance","duration":0.0947150000001784,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should allow changing lock state","status":"passed","title":"should allow changing lock state","duration":0.19858900000053836,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","state management"],"fullName":"LockableTrait state management should handle auto-lock behavior flag","status":"passed","title":"should handle auto-lock behavior flag","duration":0.18372199999976147,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.27690500000062457,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should work with lockable container","status":"passed","title":"should work with lockable container","duration":0.2651850000002014,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","entity integration"],"fullName":"LockableTrait entity integration should create matching key entity","status":"passed","title":"should create matching key entity","duration":0.16348800000014307,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should store all lock-related messages","status":"passed","title":"should store all lock-related messages","duration":0.14546299999983603,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","message customization"],"fullName":"LockableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.09302399999978661,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","sound effects"],"fullName":"LockableTrait sound effects should support lock/unlock sounds","status":"passed","title":"should support lock/unlock sounds","duration":0.31500299999970593,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.2161949999999706,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.10338400000000547,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should handle entity without key requirement","status":"passed","title":"should handle entity without key requirement","duration":0.0805289999998422,"failureMessages":[],"meta":{}},{"ancestorTitles":["LockableTrait","edge cases"],"fullName":"LockableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0751430000000255,"failureMessages":[],"meta":{}}],"startTime":1755207474108,"endTime":1755207474114.315,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/lockable.test.ts"},{"assertionResults":[{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.67688999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.934132999999747,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","initialization"],"fullName":"MoveableSceneryTrait initialization should handle all weight classes","status":"passed","title":"should handle all weight classes","duration":0.31988900000033027,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should track blocked exits","status":"passed","title":"should track blocked exits","duration":1.2410939999999755,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle single blocked exit","status":"passed","title":"should handle single blocked exit","duration":0.45672600000034436,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","blocking behavior"],"fullName":"MoveableSceneryTrait blocking behavior should handle no blocked exits when not blocking","status":"passed","title":"should handle no blocked exits when not blocking","duration":0.3463390000006257,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should track what is revealed when moved","status":"passed","title":"should track what is revealed when moved","duration":0.28038999999989755,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","reveal behavior"],"fullName":"MoveableSceneryTrait reveal behavior should handle no reveal","status":"passed","title":"should handle no reveal","duration":0.20609499999955005,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track if moved","status":"passed","title":"should track if moved","duration":0.34798099999989063,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","movement tracking"],"fullName":"MoveableSceneryTrait movement tracking should track original room","status":"passed","title":"should track original room","duration":0.17415499999970052,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.39877900000010413,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with PushableTrait","status":"passed","title":"should work with PushableTrait","duration":0.2603659999995216,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","entity integration"],"fullName":"MoveableSceneryTrait entity integration should work with both PushableTrait and PullableTrait","status":"passed","title":"should work with both PushableTrait and PullableTrait","duration":0.24566700000013952,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle single person movement","status":"passed","title":"should handle single person movement","duration":0.1400149999999485,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should handle multi-person movement","status":"passed","title":"should handle multi-person movement","duration":0.13072899999951915,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","multi-person requirements"],"fullName":"MoveableSceneryTrait multi-person requirements should default people required when multi-person is true","status":"passed","title":"should default people required when multi-person is true","duration":0.36109099999976024,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should store movement sounds","status":"passed","title":"should store movement sounds","duration":0.3119109999997818,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","sound effects"],"fullName":"MoveableSceneryTrait sound effects should handle no sound","status":"passed","title":"should handle no sound","duration":0.11671899999964808,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.18362900000010995,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.22081100000013976,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","edge cases"],"fullName":"MoveableSceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.23986500000046362,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a blocking boulder","status":"passed","title":"should create a blocking boulder","duration":0.4513989999995829,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a moveable bookshelf","status":"passed","title":"should create a moveable bookshelf","duration":0.22136200000022654,"failureMessages":[],"meta":{}},{"ancestorTitles":["MoveableSceneryTrait","realistic scenarios"],"fullName":"MoveableSceneryTrait realistic scenarios should create a light moveable crate","status":"passed","title":"should create a light moveable crate","duration":0.16492699999980687,"failureMessages":[],"meta":{}}],"startTime":1755207466369,"endTime":1755207466381.165,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/moveable-scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1037409999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4210030000003826,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should use startsOpen to set initial isOpen if not provided","status":"passed","title":"should use startsOpen to set initial isOpen if not provided","duration":0.3317800000004354,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","initialization"],"fullName":"OpenableTrait initialization should prefer explicit isOpen over startsOpen","status":"passed","title":"should prefer explicit isOpen over startsOpen","duration":0.824467999999797,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should allow changing open state","status":"passed","title":"should allow changing open state","duration":1.1113990000003469,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","state management"],"fullName":"OpenableTrait state management should maintain other properties when state changes","status":"passed","title":"should maintain other properties when state changes","duration":0.7938819999999396,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.6937950000001365,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should work with container entities","status":"passed","title":"should work with container entities","duration":0.7387589999998454,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","entity integration"],"fullName":"OpenableTrait entity integration should handle entity with multiple state traits","status":"passed","title":"should handle entity with multiple state traits","duration":0.4322870000005423,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle one-way openable (canClose = false)","status":"passed","title":"should handle one-way openable (canClose = false)","duration":0.2776269999994838,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should handle revealsContents setting","status":"passed","title":"should handle revealsContents setting","duration":0.11836900000071182,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","special behaviors"],"fullName":"OpenableTrait special behaviors should support sound effects","status":"passed","title":"should support sound effects","duration":0.08461700000043493,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should store all custom messages","status":"passed","title":"should store all custom messages","duration":0.10263100000065606,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","message customization"],"fullName":"OpenableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.1590120000000752,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.09384200000022247,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.08107599999948434,"failureMessages":[],"meta":{}},{"ancestorTitles":["OpenableTrait","edge cases"],"fullName":"OpenableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08838999999989028,"failureMessages":[],"meta":{}}],"startTime":1755207482172,"endTime":1755207482182.0938,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/openable.test.ts"},{"assertionResults":[{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.496299999999792,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.4832059999998819,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","initialization"],"fullName":"PullableTrait initialization should handle all pull types","status":"passed","title":"should handle all pull types","duration":0.19242399999984627,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should track pull count","status":"passed","title":"should track pull count","duration":0.15226499999971566,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.43199400000048627,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","state management"],"fullName":"PullableTrait state management should respect max pulls","status":"passed","title":"should respect max pulls","duration":0.24091999999927793,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.32680400000026566,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","entity integration"],"fullName":"PullableTrait entity integration should work with multiple pullable objects","status":"passed","title":"should work with multiple pullable objects","duration":0.16936299999997573,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle lever configuration","status":"passed","title":"should handle lever configuration","duration":0.23217900000054215,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle cord configuration","status":"passed","title":"should handle cord configuration","duration":0.17213799999990442,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle attached configuration","status":"passed","title":"should handle attached configuration","duration":0.10721300000022893,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","pull type behaviors"],"fullName":"PullableTrait pull type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.10230099999989761,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.1316080000005968,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","special effects"],"fullName":"PullableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.11387399999966874,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.12144599999919592,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.14843699999983073,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.06598999999914668,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.06286600000021281,"failureMessages":[],"meta":{}},{"ancestorTitles":["PullableTrait","edge cases"],"fullName":"PullableTrait edge cases should handle non-repeatable pulls","status":"passed","title":"should handle non-repeatable pulls","duration":0.052872999999635795,"failureMessages":[],"meta":{}}],"startTime":1755207473211,"endTime":1755207473216.1484,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pullable.test.ts"},{"assertionResults":[{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.331384000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3507849999996324,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","initialization"],"fullName":"PushableTrait initialization should handle all push types","status":"passed","title":"should handle all push types","duration":0.12791999999990367,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should track push count","status":"passed","title":"should track push count","duration":0.2250050000002375,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should manage state transitions","status":"passed","title":"should manage state transitions","duration":0.23973400000068068,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","state management"],"fullName":"PushableTrait state management should respect max pushes","status":"passed","title":"should respect max pushes","duration":0.18535700000029465,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.3529820000003383,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","entity integration"],"fullName":"PushableTrait entity integration should work with multiple pushable objects","status":"passed","title":"should work with multiple pushable objects","duration":0.20291499999984808,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle button configuration","status":"passed","title":"should handle button configuration","duration":0.2698289999998451,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle heavy configuration","status":"passed","title":"should handle heavy configuration","duration":0.19676399999934802,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","push type behaviors"],"fullName":"PushableTrait push type behaviors should handle moveable configuration","status":"passed","title":"should handle moveable configuration","duration":0.1238180000000284,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should handle all push directions","status":"passed","title":"should handle all push directions","duration":0.15431400000034046,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","direction handling"],"fullName":"PushableTrait direction handling should default to no specific direction","status":"passed","title":"should default to no specific direction","duration":0.10666700000001583,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.21021699999982957,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","special effects"],"fullName":"PushableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.13576000000011845,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.22020900000006804,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.11299799999960669,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.086301999999705,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle strength requirements","status":"passed","title":"should handle strength requirements","duration":0.08415100000001985,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle non-repeatable pushes","status":"passed","title":"should handle non-repeatable pushes","duration":0.07243899999957648,"failureMessages":[],"meta":{}},{"ancestorTitles":["PushableTrait","edge cases"],"fullName":"PushableTrait edge cases should handle passage revealing","status":"passed","title":"should handle passage revealing","duration":0.06952900000032969,"failureMessages":[],"meta":{}}],"startTime":1755207485243,"endTime":1755207485249.2202,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/pushable.test.ts"},{"assertionResults":[{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":4.525587000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.7528019999990647,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should auto-initialize pages from pageContent","status":"passed","title":"should auto-initialize pages from pageContent","duration":1.2812020000001212,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","initialization"],"fullName":"ReadableTrait initialization should not override currentPage if already set","status":"passed","title":"should not override currentPage if already set","duration":0.491809999999532,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle simple text","status":"passed","title":"should handle simple text","duration":0.5435019999986253,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle multi-line text","status":"passed","title":"should handle multi-line text","duration":0.5486160000000382,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle preview text","status":"passed","title":"should handle preview text","duration":0.3043969999998808,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","text content"],"fullName":"ReadableTrait text content should handle empty text","status":"passed","title":"should handle empty text","duration":0.20127600000159873,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should support different languages","status":"passed","title":"should support different languages","duration":0.4887220000000525,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle ability requirements","status":"passed","title":"should handle ability requirements","duration":0.3710659999997006,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle item requirements","status":"passed","title":"should handle item requirements","duration":0.16540600000007544,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","language and abilities"],"fullName":"ReadableTrait language and abilities should handle no requirements","status":"passed","title":"should handle no requirements","duration":0.17518399999971734,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should support various readable types","status":"passed","title":"should support various readable types","duration":0.24057499999980791,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","readable types"],"fullName":"ReadableTrait readable types should allow custom readable types","status":"passed","title":"should allow custom readable types","duration":0.10754400000041642,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle books with multiple pages","status":"passed","title":"should handle books with multiple pages","duration":0.3969039999992674,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle current page navigation","status":"passed","title":"should handle current page navigation","duration":0.4039970000012545,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle single page with pageContent","status":"passed","title":"should handle single page with pageContent","duration":0.2553189999998722,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","multi-page support"],"fullName":"ReadableTrait multi-page support should handle empty pageContent array","status":"passed","title":"should handle empty pageContent array","duration":0.7260779999996885,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should track read status","status":"passed","title":"should track read status","duration":0.2009170000001177,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should handle readability state","status":"passed","title":"should handle readability state","duration":0.14220799999930023,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","state management"],"fullName":"ReadableTrait state management should maintain state through changes","status":"passed","title":"should maintain state through changes","duration":0.15029800000047544,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4818009999999049,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should create various readable entities","status":"passed","title":"should create various readable entities","duration":0.18859499999962281,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","entity integration"],"fullName":"ReadableTrait entity integration should work with openable books","status":"passed","title":"should work with openable books","duration":0.16046900000037567,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.16266999999970722,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.10259799999948882,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.0716019999999844,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle page bounds","status":"passed","title":"should handle page bounds","duration":0.06223399999907997,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should preserve data integrity","status":"passed","title":"should preserve data integrity","duration":0.1913059999988036,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","edge cases"],"fullName":"ReadableTrait edge cases should handle special text content","status":"passed","title":"should handle special text content","duration":0.2556540000005043,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle magical tome with requirements","status":"passed","title":"should handle magical tome with requirements","duration":0.19349599999986822,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle inscribed objects","status":"passed","title":"should handle inscribed objects","duration":0.19900799999959418,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReadableTrait","complex scenarios"],"fullName":"ReadableTrait complex scenarios should handle dynamic readability","status":"passed","title":"should handle dynamic readability","duration":0.15719999999964784,"failureMessages":[],"meta":{}}],"startTime":1755207454769,"endTime":1755207454786.199,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/readable.test.ts"},{"assertionResults":[{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":3.942935000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","initialization"],"fullName":"RoomTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":2.1544050000002244,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle simple exits","status":"passed","title":"should handle simple exits","duration":1.3933930000002874,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle exits with doors","status":"passed","title":"should handle exits with doors","duration":0.46520999999938795,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle blocked exits","status":"passed","title":"should handle blocked exits","duration":0.7264570000006643,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","exits management"],"fullName":"RoomTrait exits management should handle custom exits","status":"passed","title":"should handle custom exits","duration":0.5040129999997589,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle dark rooms","status":"passed","title":"should handle dark rooms","duration":0.1815809999998237,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle lit rooms","status":"passed","title":"should handle lit rooms","duration":0.08448700000008103,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle outdoor lighting","status":"passed","title":"should handle outdoor lighting","duration":0.34849600000052305,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","darkness"],"fullName":"RoomTrait darkness should handle underground rooms","status":"passed","title":"should handle underground rooms","duration":0.19866100000035658,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should start unvisited","status":"passed","title":"should start unvisited","duration":0.32791700000052515,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should track visited state","status":"passed","title":"should track visited state","duration":0.1392809999997553,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","visit tracking"],"fullName":"RoomTrait visit tracking should handle initial description","status":"passed","title":"should handle initial description","duration":0.11057600000003731,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient sounds","status":"passed","title":"should handle ambient sounds","duration":0.08554199999980483,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle ambient smells","status":"passed","title":"should handle ambient smells","duration":0.09273700000085228,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","ambience"],"fullName":"RoomTrait ambience should handle both sound and smell","status":"passed","title":"should handle both sound and smell","duration":0.20619299999998475,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle region assignment","status":"passed","title":"should handle region assignment","duration":0.11280400000032387,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle multiple tags","status":"passed","title":"should handle multiple tags","duration":0.27706299999954354,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","regions and tags"],"fullName":"RoomTrait regions and tags should handle rooms without regions or tags","status":"passed","title":"should handle rooms without regions or tags","duration":0.10877900000014051,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.12378799999987677,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","entity integration"],"fullName":"RoomTrait entity integration should work with container trait","status":"passed","title":"should work with container trait","duration":0.06725699999969947,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle maze-like connections","status":"passed","title":"should handle maze-like connections","duration":0.11758399999962421,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle multi-level connections","status":"passed","title":"should handle multi-level connections","duration":0.11670700000013312,"failureMessages":[],"meta":{}},{"ancestorTitles":["RoomTrait","complex room setups"],"fullName":"RoomTrait complex room setups should handle outdoor/indoor transitions","status":"passed","title":"should handle outdoor/indoor transitions","duration":0.1789200000002893,"failureMessages":[],"meta":{}}],"startTime":1755207465957,"endTime":1755207465970.179,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/room.test.ts"},{"assertionResults":[{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.6267189999998664,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.3890259999998307,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.1808869999995295,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","initialization"],"fullName":"SceneryTrait initialization should handle only mentioned property","status":"passed","title":"should handle only mentioned property","duration":0.2150179999998727,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support custom messages for different items","status":"passed","title":"should support custom messages for different items","duration":0.47652000000016415,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should allow undefined message for default handling","status":"passed","title":"should allow undefined message for default handling","duration":0.1545620000006238,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","cant take messages"],"fullName":"SceneryTrait cant take messages should support humorous messages","status":"passed","title":"should support humorous messages","duration":0.10542600000007951,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle mentioned scenery","status":"passed","title":"should handle mentioned scenery","duration":0.24142599999959202,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should handle unmentioned scenery","status":"passed","title":"should handle unmentioned scenery","duration":0.3105680000007851,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","mentioned property"],"fullName":"SceneryTrait mentioned property should allow toggling mentioned state","status":"passed","title":"should allow toggling mentioned state","duration":0.20967800000016723,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.4394449999999779,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should create various scenery entities","status":"passed","title":"should create various scenery entities","duration":0.19151899999997113,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with room decorations","status":"passed","title":"should work with room decorations","duration":0.23414099999990867,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","entity integration"],"fullName":"SceneryTrait entity integration should work with interactive scenery","status":"passed","title":"should work with interactive scenery","duration":0.39523599999938597,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle architectural features","status":"passed","title":"should handle architectural features","duration":0.1538959999998042,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle natural features","status":"passed","title":"should handle natural features","duration":0.19876100000055885,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","scenery types"],"fullName":"SceneryTrait scenery types should handle furniture","status":"passed","title":"should handle furniture","duration":0.12367499999982101,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle always-mentioned scenery","status":"passed","title":"should handle always-mentioned scenery","duration":0.08640099999956874,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle hidden scenery","status":"passed","title":"should handle hidden scenery","duration":0.0856579999999667,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","visibility behavior"],"fullName":"SceneryTrait visibility behavior should handle discoverable scenery","status":"passed","title":"should handle discoverable scenery","duration":0.08555400000022928,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.1287720000000263,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.07931800000005751,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.08418900000015128,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should handle null values","status":"passed","title":"should handle null values","duration":0.09758499999952619,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","edge cases"],"fullName":"SceneryTrait edge cases should preserve object reference","status":"passed","title":"should preserve object reference","duration":0.12739199999941775,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with state changes","status":"passed","title":"should handle scenery with state changes","duration":0.45606099999986327,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery containers","status":"passed","title":"should handle scenery containers","duration":0.44972299999972165,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle scenery with multiple states","status":"passed","title":"should handle scenery with multiple states","duration":0.5456989999993311,"failureMessages":[],"meta":{}},{"ancestorTitles":["SceneryTrait","complex scenarios"],"fullName":"SceneryTrait complex scenarios should handle room-defining scenery","status":"passed","title":"should handle room-defining scenery","duration":0.3042169999998805,"failureMessages":[],"meta":{}}],"startTime":1755207473138,"endTime":1755207473148.5457,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/scenery.test.ts"},{"assertionResults":[{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":1.7817089999989548,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.8457189999990078,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle partial capacity initialization","status":"passed","title":"should handle partial capacity initialization","duration":0.21511200000168174,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","initialization"],"fullName":"SupporterTrait initialization should handle only enterable property","status":"passed","title":"should handle only enterable property","duration":0.25645500000064203,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support weight-based capacity","status":"passed","title":"should support weight-based capacity","duration":0.39700700000139477,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support item count capacity","status":"passed","title":"should support item count capacity","duration":0.2540320000007341,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should support both weight and item limits","status":"passed","title":"should support both weight and item limits","duration":0.19604400000025635,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle unlimited capacity","status":"passed","title":"should handle unlimited capacity","duration":0.08288900000115973,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","capacity management"],"fullName":"SupporterTrait capacity management should handle zero capacity","status":"passed","title":"should handle zero capacity","duration":0.21519099999932223,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle allowed types","status":"passed","title":"should handle allowed types","duration":0.2447599999995873,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle excluded types","status":"passed","title":"should handle excluded types","duration":0.2105840000003809,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle both allowed and excluded types","status":"passed","title":"should handle both allowed and excluded types","duration":0.16625500000009197,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","type restrictions"],"fullName":"SupporterTrait type restrictions should handle empty type arrays","status":"passed","title":"should handle empty type arrays","duration":0.17249900000024354,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle non-enterable supporters","status":"passed","title":"should handle non-enterable supporters","duration":0.06413099999917904,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should handle enterable supporters","status":"passed","title":"should handle enterable supporters","duration":0.04654600000139908,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","enterable property"],"fullName":"SupporterTrait enterable property should default to non-enterable","status":"passed","title":"should default to non-enterable","duration":0.10801100000026054,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.2665640000013809,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should create various supporter entities","status":"passed","title":"should create various supporter entities","duration":0.17980100000022503,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with scenery supporters","status":"passed","title":"should work with scenery supporters","duration":0.10877199999958975,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","entity integration"],"fullName":"SupporterTrait entity integration should work with enterable supporters","status":"passed","title":"should work with enterable supporters","duration":0.13702100000045903,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle furniture supporters","status":"passed","title":"should handle furniture supporters","duration":0.11367900000004738,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle specialized supporters","status":"passed","title":"should handle specialized supporters","duration":0.9021119999997609,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","supporter types"],"fullName":"SupporterTrait supporter types should handle natural supporters","status":"passed","title":"should handle natural supporters","duration":0.2408640000012383,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.16229500000008557,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.09170000000085565,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.11186200000156532,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle negative capacity values","status":"passed","title":"should handle negative capacity values","duration":0.15170600000055856,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should handle fractional capacity values","status":"passed","title":"should handle fractional capacity values","duration":0.10443099999974947,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","edge cases"],"fullName":"SupporterTrait edge cases should preserve array references","status":"passed","title":"should preserve array references","duration":0.22589000000152737,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle multi-purpose supporters","status":"passed","title":"should handle multi-purpose supporters","duration":0.31068299999969895,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle tiered supporters","status":"passed","title":"should handle tiered supporters","duration":0.2846769999996468,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle magical supporters","status":"passed","title":"should handle magical supporters","duration":0.41808900000069116,"failureMessages":[],"meta":{}},{"ancestorTitles":["SupporterTrait","complex scenarios"],"fullName":"SupporterTrait complex scenarios should handle dynamic supporter states","status":"passed","title":"should handle dynamic supporter states","duration":0.5041239999991376,"failureMessages":[],"meta":{}}],"startTime":1755207469449,"endTime":1755207469459.5042,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/supporter.test.ts"},{"assertionResults":[{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.371291999999812,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.47260500000083994,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should handle power requirements correctly","status":"passed","title":"should handle power requirements correctly","duration":0.6336969999993016,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should set autoOffCounter when starting on with autoOffTime","status":"passed","title":"should set autoOffCounter when starting on with autoOffTime","duration":0.45494399999915913,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","initialization"],"fullName":"SwitchableTrait initialization should not set autoOffCounter when starting off","status":"passed","title":"should not set autoOffCounter when starting off","duration":0.45078099999955157,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should allow changing on/off state","status":"passed","title":"should allow changing on/off state","duration":0.29779600000074424,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should track power availability","status":"passed","title":"should track power availability","duration":0.19233899999926507,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","state management"],"fullName":"SwitchableTrait state management should handle auto-off counter","status":"passed","title":"should handle auto-off counter","duration":0.21754599999985658,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.5271279999997205,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should work with test fixture","status":"passed","title":"should work with test fixture","duration":0.22024899999996705,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","entity integration"],"fullName":"SwitchableTrait entity integration should handle device with power requirements","status":"passed","title":"should handle device with power requirements","duration":0.13857500000085565,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should store all switch-related messages","status":"passed","title":"should store all switch-related messages","duration":0.1290129999997589,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","message customization"],"fullName":"SwitchableTrait message customization should allow partial message customization","status":"passed","title":"should allow partial message customization","duration":0.10120699999970384,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","sound effects"],"fullName":"SwitchableTrait sound effects should support all sound types","status":"passed","title":"should support all sound types","duration":0.07842100000016217,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.09884100000090257,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.07426099999975122,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should handle device with no auto-off","status":"passed","title":"should handle device with no auto-off","duration":0.05616299999928742,"failureMessages":[],"meta":{}},{"ancestorTitles":["SwitchableTrait","edge cases"],"fullName":"SwitchableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.1062259999998787,"failureMessages":[],"meta":{}}],"startTime":1755207479834,"endTime":1755207479841.1387,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/switchable.test.ts"},{"assertionResults":[{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create a functional light switch","status":"passed","title":"should create a functional light switch","duration":3.174815000000308,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","PUSHABLE + BUTTON + SWITCHABLE"],"fullName":"Trait Combinations PUSHABLE + BUTTON + SWITCHABLE should create an elevator call button","status":"passed","title":"should create an elevator call button","duration":0.33651800000006915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a safe combination dial","status":"passed","title":"should create a safe combination dial","duration":0.32082699999955366,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","TURNABLE + DIAL/VALVE"],"fullName":"Trait Combinations TURNABLE + DIAL/VALVE should create a water valve","status":"passed","title":"should create a water valve","duration":0.19341199999871606,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a heavy boulder that can be pushed","status":"passed","title":"should create a heavy boulder that can be pushed","duration":0.33035000000018044,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","MOVEABLE_SCENERY + PUSHABLE/PULLABLE"],"fullName":"Trait Combinations MOVEABLE_SCENERY + PUSHABLE/PULLABLE should create a crate that can be pushed and pulled","status":"passed","title":"should create a crate that can be pushed and pulled","duration":0.21941200000037497,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","FRAGILE + BREAKABLE"],"fullName":"Trait Combinations FRAGILE + BREAKABLE should create a reinforced glass window","status":"passed","title":"should create a reinforced glass window","duration":0.1953170000015234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create an emergency alarm system","status":"passed","title":"should create an emergency alarm system","duration":0.21642100000099163,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Complex combinations"],"fullName":"Trait Combinations Complex combinations should create a complex control panel","status":"passed","title":"should create a complex control panel","duration":0.39216299999861803,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle entities with many traits","status":"passed","title":"should handle entities with many traits","duration":0.18470499999966705,"failureMessages":[],"meta":{}},{"ancestorTitles":["Trait Combinations","Edge case combinations"],"fullName":"Trait Combinations Edge case combinations should handle trait updates","status":"passed","title":"should handle trait updates","duration":0.10509499999898253,"failureMessages":[],"meta":{}}],"startTime":1755207483969,"endTime":1755207483975.392,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/trait-combinations.test.ts"},{"assertionResults":[{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.1180999999996857,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.9136619999990216,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","initialization"],"fullName":"TurnableTrait initialization should handle all turn types","status":"passed","title":"should handle all turn types","duration":1.2397660000005999,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle string settings","status":"passed","title":"should handle string settings","duration":0.2674220000008063,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric settings","status":"passed","title":"should handle numeric settings","duration":0.2797289999998611,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should default current setting to first in array","status":"passed","title":"should default current setting to first in array","duration":0.13639299999886134,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","settings management"],"fullName":"TurnableTrait settings management should handle numeric ranges","status":"passed","title":"should handle numeric ranges","duration":0.12051400000018475,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turns made","status":"passed","title":"should track turns made","duration":0.15674599999874772,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn tracking"],"fullName":"TurnableTrait turn tracking should track turn direction","status":"passed","title":"should track turn direction","duration":0.2916029999996681,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.43207000000074913,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","entity integration"],"fullName":"TurnableTrait entity integration should work with multiple turnable objects","status":"passed","title":"should work with multiple turnable objects","duration":0.21856300000035844,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle dial configuration","status":"passed","title":"should handle dial configuration","duration":0.8420690000002651,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle wheel configuration","status":"passed","title":"should handle wheel configuration","duration":0.3253260000001319,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle crank configuration","status":"passed","title":"should handle crank configuration","duration":0.2110290000000532,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","turn type behaviors"],"fullName":"TurnableTrait turn type behaviors should handle valve configuration","status":"passed","title":"should handle valve configuration","duration":0.1553199999998469,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle spring-loaded behavior","status":"passed","title":"should handle spring-loaded behavior","duration":0.20179300000017975,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle jammed state","status":"passed","title":"should handle jammed state","duration":0.07712600000013481,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special properties"],"fullName":"TurnableTrait special properties should handle unidirectional turning","status":"passed","title":"should handle unidirectional turning","duration":0.10624200000165729,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should store custom effect events","status":"passed","title":"should store custom effect events","duration":0.19892799999979616,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","special effects"],"fullName":"TurnableTrait special effects should handle partial effects","status":"passed","title":"should handle partial effects","duration":0.16540300000087882,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.17660699999942153,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle undefined options","status":"passed","title":"should handle undefined options","duration":0.14794400000027963,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.17807600000014645,"failureMessages":[],"meta":{}},{"ancestorTitles":["TurnableTrait","edge cases"],"fullName":"TurnableTrait edge cases should handle complex configurations","status":"passed","title":"should handle complex configurations","duration":0.226423000000068,"failureMessages":[],"meta":{}}],"startTime":1755207450404,"endTime":1755207450414.2263,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/turnable.test.ts"},{"assertionResults":[{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with default values","status":"passed","title":"should create trait with default values","duration":2.6953709999997955,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should create trait with provided data","status":"passed","title":"should create trait with provided data","duration":0.5263470000008965,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle partial initialization","status":"passed","title":"should handle partial initialization","duration":0.2210960000011255,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","initialization"],"fullName":"WearableTrait initialization should handle empty blocksSlots array","status":"passed","title":"should handle empty blocksSlots array","duration":0.23746199999914097,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should support various body slots","status":"passed","title":"should support various body slots","duration":0.34539699999913864,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should handle custom slot names","status":"passed","title":"should handle custom slot names","duration":0.14182900000014342,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","slot management"],"fullName":"WearableTrait slot management should block multiple slots","status":"passed","title":"should block multiple slots","duration":0.9828940000006696,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should support different layers","status":"passed","title":"should support different layers","duration":0.21888600000056613,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","layering system"],"fullName":"WearableTrait layering system should handle wearableOver property","status":"passed","title":"should handle wearableOver property","duration":0.3641029999998864,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should track worn status","status":"passed","title":"should track worn status","duration":0.2235450000007404,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should handle different wearers","status":"passed","title":"should handle different wearers","duration":0.11115099999915401,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","worn state"],"fullName":"WearableTrait worn state should clear wornBy when not worn","status":"passed","title":"should clear wornBy when not worn","duration":0.06744900000012422,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should store custom wear and remove messages","status":"passed","title":"should store custom wear and remove messages","duration":0.1000370000001567,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow undefined messages","status":"passed","title":"should allow undefined messages","duration":0.08355000000119617,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","messages"],"fullName":"WearableTrait messages should allow only wear message","status":"passed","title":"should allow only wear message","duration":0.10072799999943527,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle weight and bulk","status":"passed","title":"should handle weight and bulk","duration":0.24108999999953085,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle zero weight items","status":"passed","title":"should handle zero weight items","duration":0.09951300000102492,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","physical properties"],"fullName":"WearableTrait physical properties should handle fractional values","status":"passed","title":"should handle fractional values","duration":0.0981790000005276,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should attach to entity correctly","status":"passed","title":"should attach to entity correctly","duration":0.33666399999856367,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should create various wearable items","status":"passed","title":"should create various wearable items","duration":0.15447800000038114,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","entity integration"],"fullName":"WearableTrait entity integration should work with actor wearing items","status":"passed","title":"should work with actor wearing items","duration":0.21132200000101875,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle layered armor system","status":"passed","title":"should handle layered armor system","duration":0.21351899999899615,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle jewelry with multiple items per slot","status":"passed","title":"should handle jewelry with multiple items per slot","duration":0.10174200000074052,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","complex wearable scenarios"],"fullName":"WearableTrait complex wearable scenarios should handle outfit sets","status":"passed","title":"should handle outfit sets","duration":0.1661180000010063,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle empty options object","status":"passed","title":"should handle empty options object","duration":0.20194400000036694,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle undefined as parameter","status":"passed","title":"should handle undefined as parameter","duration":0.09712100000069768,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should maintain type constant","status":"passed","title":"should maintain type constant","duration":0.17616300000008778,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle boolean false values correctly","status":"passed","title":"should handle boolean false values correctly","duration":0.09448299999894516,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should handle zero and negative values","status":"passed","title":"should handle zero and negative values","duration":0.12243899999884889,"failureMessages":[],"meta":{}},{"ancestorTitles":["WearableTrait","edge cases"],"fullName":"WearableTrait edge cases should preserve array reference for blocksSlots","status":"passed","title":"should preserve array reference for blocksSlots","duration":0.32812899999953515,"failureMessages":[],"meta":{}}],"startTime":1755207450414,"endTime":1755207450425.3281,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/traits/wearable.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should create entities with proper IDs","status":"passed","title":"should create entities with proper IDs","duration":2.1278129999991506,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should share entities with WorldModel","status":"passed","title":"should share entities with WorldModel","duration":0.3126909999991767,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Basic Entity Management"],"fullName":"AuthorModel Basic Entity Management should remove entities","status":"passed","title":"should remove entities","duration":0.2735290000000532,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into closed containers","status":"passed","title":"should move entities into closed containers","duration":1.8476279999995313,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should move entities into locked containers","status":"passed","title":"should move entities into locked containers","duration":1.3048039999994216,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Unrestricted Movement"],"fullName":"AuthorModel Unrestricted Movement should handle deeply nested containers","status":"passed","title":"should handle deeply nested containers","duration":2.6121190000012575,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should populate containers with multiple items","status":"passed","title":"should populate containers with multiple items","duration":1.372321999999258,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should connect rooms bidirectionally","status":"passed","title":"should connect rooms bidirectionally","duration":1.2560350000003382,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should setup containers with properties","status":"passed","title":"should setup containers with properties","duration":1.0989100000006147,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should fill containers with item specs","status":"passed","title":"should fill containers with item specs","duration":1.0781719999995403,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Convenience Methods"],"fullName":"AuthorModel Convenience Methods should place actors at locations","status":"passed","title":"should place actors at locations","duration":0.5787299999992683,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set state values","status":"passed","title":"should set state values","duration":0.6156209999990097,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should set player","status":"passed","title":"should set player","duration":0.4078910000007454,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","State Management"],"fullName":"AuthorModel State Management should clear world data","status":"passed","title":"should clear world data","duration":0.3619650000000547,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should set entity properties directly","status":"passed","title":"should set entity properties directly","duration":0.3395569999993313,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Entity Properties"],"fullName":"AuthorModel Entity Properties should add and remove traits","status":"passed","title":"should add and remove traits","duration":0.36772500000006403,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Scope and Visibility Integration"],"fullName":"AuthorModel Scope and Visibility Integration should include items in closed containers in scope","status":"passed","title":"should include items in closed containers in scope","duration":3.8048170000001846,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should emit events when recordEvent is true","status":"passed","title":"should emit events when recordEvent is true","duration":0.8813820000013948,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthorModel","Event Recording"],"fullName":"AuthorModel Event Recording should not emit events by default","status":"passed","title":"should not emit events by default","duration":0.5590039999988221,"failureMessages":[],"meta":{}}],"startTime":1755207451176,"endTime":1755207451199.559,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/author-model.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the room the observer is in","status":"passed","title":"should include the room the observer is in","duration":2.5149619999992865,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in the same room","status":"passed","title":"should include items in the same room","duration":0.47338700000000244,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers in the room","status":"passed","title":"should include items in containers in the room","duration":0.44613399999980174,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","status":"skipped","title":"should include deeply nested items - SKIPPED: Default scope rules may need adjustment for deep nesting","failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items carried by the observer","status":"passed","title":"should include items carried by the observer","duration":0.2576570000001084,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include items in containers carried by the observer","status":"passed","title":"should include items in containers carried by the observer","duration":0.3962119999996503,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should include the observer itself","status":"passed","title":"should include the observer itself","duration":0.1805739999999787,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle empty room","status":"passed","title":"should handle empty room","duration":0.4037239999997837,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should return empty array if observer not in a room","status":"passed","title":"should return empty array if observer not in a room","duration":1.1931210000002466,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel.getInScope"],"fullName":"WorldModel.getInScope should handle unique entities (no duplicates)","status":"passed","title":"should handle unique entities (no duplicates)","duration":0.697371999999632,"failureMessages":[],"meta":{}}],"startTime":1755207475210,"endTime":1755207475216.6973,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/get-in-scope.test.ts"},{"assertionResults":[{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add child to parent","status":"passed","title":"should add child to parent","duration":1.8633960000006482,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should add multiple children to parent","status":"passed","title":"should add multiple children to parent","duration":2.0679259999997157,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should remove child from parent","status":"passed","title":"should remove child from parent","duration":2.0254619999996066,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should move child to new parent","status":"passed","title":"should move child to new parent","duration":2.333401999999296,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent parent","status":"passed","title":"should handle non-existent parent","duration":0.8912109999992026,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","basic operations"],"fullName":"SpatialIndex basic operations should handle non-existent child","status":"passed","title":"should handle non-existent child","duration":0.46395599999959813,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove entity and its relationships","status":"passed","title":"should remove entity and its relationships","duration":0.9967390000001615,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should remove only specified child","status":"passed","title":"should remove only specified child","duration":0.5843039999999746,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should handle removing non-existent child","status":"passed","title":"should handle removing non-existent child","duration":0.5993910000006508,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","remove operations"],"fullName":"SpatialIndex remove operations should clean up empty parent sets","status":"passed","title":"should clean up empty parent sets","duration":0.31164799999987736,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return true for parent with children","status":"passed","title":"should return true for parent with children","duration":0.20280100000036327,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false for parent without children","status":"passed","title":"should return false for parent without children","duration":0.13175700000010693,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","hasChildren"],"fullName":"SpatialIndex hasChildren should return false after removing all children","status":"passed","title":"should return false after removing all children","duration":0.10126299999956245,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should get all descendants","status":"passed","title":"should get all descendants","duration":0.8493339999995442,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should respect max depth","status":"passed","title":"should respect max depth","duration":0.7018559999996796,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle entity with no descendants","status":"passed","title":"should handle entity with no descendants","duration":0.2748070000006919,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should handle circular references","status":"passed","title":"should handle circular references","duration":0.20997999999963213,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAllDescendants"],"fullName":"SpatialIndex getAllDescendants should collect all descendants up to max depth","status":"passed","title":"should collect all descendants up to max depth","duration":0.38058099999943806,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get all ancestors","status":"passed","title":"should get all ancestors","duration":0.29504499999984546,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should get ancestors up to depth","status":"passed","title":"should get ancestors up to depth","duration":0.14976200000000972,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle entity with no ancestors","status":"passed","title":"should handle entity with no ancestors","duration":0.13315700000021025,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","getAncestors"],"fullName":"SpatialIndex getAncestors should handle missing entity","status":"passed","title":"should handle missing entity","duration":0.14832399999977497,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","clear"],"fullName":"SpatialIndex clear should clear all relationships","status":"passed","title":"should clear all relationships","duration":0.374985999999808,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.4948500000000422,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should load from JSON","status":"passed","title":"should load from JSON","duration":0.8109709999998813,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should handle empty JSON","status":"passed","title":"should handle empty JSON","duration":0.22820599999977276,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","persistence"],"fullName":"SpatialIndex persistence should clear before loading","status":"passed","title":"should clear before loading","duration":1.546957000000475,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle adding same child multiple times","status":"passed","title":"should handle adding same child multiple times","duration":0.5172060000004421,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle removing child from wrong parent","status":"passed","title":"should handle removing child from wrong parent","duration":0.6936339999992924,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle self-parenting","status":"passed","title":"should handle self-parenting","duration":0.21742900000026566,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should handle very deep hierarchies","status":"passed","title":"should handle very deep hierarchies","duration":1.6041340000001583,"failureMessages":[],"meta":{}},{"ancestorTitles":["SpatialIndex","edge cases"],"fullName":"SpatialIndex edge cases should maintain consistency when moving entities","status":"passed","title":"should maintain consistency when moving entities","duration":0.22369099999923492,"failureMessages":[],"meta":{}}],"startTime":1755207465101,"endTime":1755207465126.2236,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/spatial-index.test.ts"},{"assertionResults":[{"ancestorTitles":["Verify moveEntity issue"],"fullName":"Verify moveEntity issue should not allow moving items into closed containers","status":"passed","title":"should not allow moving items into closed containers","duration":1.3561180000006061,"failureMessages":[],"meta":{}}],"startTime":1755207485464,"endTime":1755207485465.3562,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/verify-move-issue.test.ts"},{"assertionResults":[{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should always see self","status":"passed","title":"should always see self","duration":2.081851999999344,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in same room","status":"passed","title":"should see entities in same room","duration":0.3961749999998574,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in different room","status":"passed","title":"should not see entities in different room","duration":0.2761270000009972,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see the room observer is in","status":"passed","title":"should see the room observer is in","duration":0.14082700000108161,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see invisible entities","status":"passed","title":"should not see invisible entities","duration":0.5436479999989388,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in transparent containers","status":"passed","title":"should see entities in transparent containers","duration":0.4551789999986795,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should see entities in open opaque containers","status":"passed","title":"should see entities in open opaque containers","duration":0.354457999999795,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should not see entities in closed opaque containers","status":"passed","title":"should not see entities in closed opaque containers","duration":0.15971100000024308,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should handle nested containers","status":"passed","title":"should handle nested containers","duration":0.8814039999997476,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","canSee"],"fullName":"VisibilityBehavior canSee should block sight through any closed container in path","status":"passed","title":"should block sight through any closed container in path","duration":0.580312000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not see anything in dark room without light","status":"passed","title":"should not see anything in dark room without light","duration":0.55141999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should only see lit light sources in dark room","status":"passed","title":"should only see lit light sources in dark room","duration":0.798847999998543,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should see everything when carrying lit lamp","status":"passed","title":"should see everything when carrying lit lamp","duration":0.4284699999989243,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should not benefit from light in closed container","status":"passed","title":"should not benefit from light in closed container","duration":0.6087110000007669,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","dark rooms"],"fullName":"VisibilityBehavior dark rooms should handle room lighting toggle","status":"passed","title":"should handle room lighting toggle","duration":0.30607100000088394,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should return all visible entities","status":"passed","title":"should return all visible entities","duration":2.0098309999993944,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should include carried items","status":"passed","title":"should include carried items","duration":0.3663799999994808,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle empty room","status":"passed","title":"should handle empty room","duration":0.7058400000005349,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","getVisible"],"fullName":"VisibilityBehavior getVisible should handle observer not in room","status":"passed","title":"should handle observer not in room","duration":0.7747099999996863,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for uncontained entities","status":"passed","title":"should return true for uncontained entities","duration":0.3316469999990659,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for invisible scenery","status":"passed","title":"should return false for invisible scenery","duration":0.38336399999934656,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in transparent container","status":"passed","title":"should return true for entity in transparent container","duration":0.13654000000133237,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return true for entity in open opaque container","status":"passed","title":"should return true for entity in open opaque container","duration":0.14087500000096043,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should return false for entity in closed opaque container","status":"passed","title":"should return false for entity in closed opaque container","duration":0.1550409999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","isVisible"],"fullName":"VisibilityBehavior isVisible should handle opaque container without openable trait","status":"passed","title":"should handle opaque container without openable trait","duration":0.10560099999929662,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle deeply nested visibility","status":"passed","title":"should handle deeply nested visibility","duration":0.3006679999998596,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle supporter visibility","status":"passed","title":"should handle supporter visibility","duration":0.17950000000018917,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle visibility in nested containers","status":"passed","title":"should handle visibility in nested containers","duration":0.8555840000008175,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","complex scenarios"],"fullName":"VisibilityBehavior complex scenarios should handle circular containment gracefully","status":"passed","title":"should handle circular containment gracefully","duration":1.1492379999999685,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.32228700000086974,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle entities with no location","status":"passed","title":"should handle entities with no location","duration":0.1333279999998922,"failureMessages":[],"meta":{}},{"ancestorTitles":["VisibilityBehavior","edge cases"],"fullName":"VisibilityBehavior edge cases should handle max depth in containment path","status":"passed","title":"should handle max depth in containment path","duration":0.4726149999987683,"failureMessages":[],"meta":{}}],"startTime":1755207450705,"endTime":1755207450724.4727,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/visibility-behavior.test.ts"},{"assertionResults":[{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should create empty world model","status":"passed","title":"should create empty world model","duration":2.489306999999826,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","initialization"],"fullName":"WorldModel initialization should accept configuration","status":"passed","title":"should accept configuration","duration":0.2268129999993107,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entity with auto-generated ID","status":"passed","title":"should create entity with auto-generated ID","duration":0.4634700000005978,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should generate correct type-prefixed IDs","status":"passed","title":"should generate correct type-prefixed IDs","duration":0.967558000000281,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should allow multiple entities with same displayName","status":"passed","title":"should allow multiple entities with same displayName","duration":0.399782000000414,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should create entities with displayName","status":"passed","title":"should create entities with displayName","duration":0.18734299999960058,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get entity by id","status":"passed","title":"should get entity by id","duration":0.1354059999994206,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return undefined for missing entity","status":"passed","title":"should return undefined for missing entity","duration":0.1105040000002191,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should check entity existence","status":"passed","title":"should check entity existence","duration":0.27474700000129815,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should remove entity","status":"passed","title":"should remove entity","duration":0.15956000000005588,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should return false when removing non-existent entity","status":"passed","title":"should return false when removing non-existent entity","duration":0.0691370000004099,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should get all entities","status":"passed","title":"should get all entities","duration":1.0900359999995999,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should update entity","status":"passed","title":"should update entity","duration":0.22753499999998894,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle updating non-existent entity","status":"passed","title":"should handle updating non-existent entity","duration":0.0713899999991554,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should throw in strict mode when updating non-existent entity","status":"passed","title":"should throw in strict mode when updating non-existent entity","duration":0.562101999999868,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should store displayName in entity attributes","status":"passed","title":"should store displayName in entity attributes","duration":0.19443999999930384,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should increment ID counters correctly","status":"passed","title":"should increment ID counters correctly","duration":0.08983699999953387,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","entity management"],"fullName":"WorldModel entity management should handle ID counter overflow","status":"passed","title":"should handle ID counter overflow","duration":1.3787589999992633,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get entity location","status":"passed","title":"should get entity location","duration":0.8225020000008954,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get container contents","status":"passed","title":"should get container contents","duration":2.1489389999987907,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should move entity","status":"passed","title":"should move entity","duration":0.37070700000003853,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should remove entity from world","status":"passed","title":"should remove entity from world","duration":0.33879499999966356,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should check if move is valid","status":"passed","title":"should check if move is valid","duration":0.27658399999927497,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent moving to non-container","status":"passed","title":"should prevent moving to non-container","duration":0.08469499999955588,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should prevent containment loops","status":"passed","title":"should prevent containment loops","duration":0.18758700000034878,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get containing room","status":"passed","title":"should get containing room","duration":0.15598299999874143,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should get all contents recursively","status":"passed","title":"should get all contents recursively","duration":0.3686260000013135,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should handle max depth limit","status":"passed","title":"should handle max depth limit","duration":0.17550499999924796,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","spatial management"],"fullName":"WorldModel spatial management should work with entity IDs","status":"passed","title":"should work with entity IDs","duration":0.1641459999991639,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state","status":"passed","title":"should get and set state","duration":0.18847400000049674,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should get and set state values","status":"passed","title":"should get and set state values","duration":0.15722099999948114,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","world state management"],"fullName":"WorldModel world state management should handle nested state values","status":"passed","title":"should handle nested state values","duration":0.08200399999986985,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by trait","status":"passed","title":"should find entities by trait","duration":0.3480280000003404,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities by type","status":"passed","title":"should find entities by type","duration":0.18546499999865773,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find entities with predicate","status":"passed","title":"should find entities with predicate","duration":0.13105999999970663,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","query operations"],"fullName":"WorldModel query operations should find all entities without filtering","status":"passed","title":"should find all entities without filtering","duration":0.2769219999991037,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should get entities in scope","status":"passed","title":"should get entities in scope","duration":0.584724999998798,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should include carried items in scope","status":"passed","title":"should include carried items in scope","duration":0.21523700000034296,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should check visibility","status":"passed","title":"should check visibility","duration":0.22477900000012596,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","visibility and scope"],"fullName":"WorldModel visibility and scope should work with direct IDs for visibility","status":"passed","title":"should work with direct IDs for visibility","duration":0.10553400000026159,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should add relationship","status":"passed","title":"should add relationship","duration":0.15346500000123342,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should get related entities","status":"passed","title":"should get related entities","duration":0.2310959999995248,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should remove relationship","status":"passed","title":"should remove relationship","duration":0.13353799999822513,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle multiple relationship types","status":"passed","title":"should handle multiple relationship types","duration":0.17645400000037625,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should handle non-existent entities in non-strict mode","status":"passed","title":"should handle non-existent entities in non-strict mode","duration":0.1238149999990128,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","relationships"],"fullName":"WorldModel relationships should throw in strict mode for non-existent entities","status":"passed","title":"should throw in strict mode for non-existent entities","duration":0.21227899999939837,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should calculate total weight","status":"passed","title":"should calculate total weight","duration":0.226198000000295,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should detect containment loops","status":"passed","title":"should detect containment loops","duration":0.11462899999969522,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should find path between rooms","status":"passed","title":"should find path between rooms","duration":0.45094999999855645,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should get and set player","status":"passed","title":"should get and set player","duration":0.1353930000004766,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","utility methods"],"fullName":"WorldModel utility methods should throw when setting non-existent player","status":"passed","title":"should throw when setting non-existent player","duration":0.2679250000001048,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should serialize to JSON","status":"passed","title":"should serialize to JSON","duration":0.42908100000022387,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should load from JSON","status":"passed","title":"should load from JSON","duration":1.4543700000012905,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should handle loading old saves without ID system data","status":"passed","title":"should handle loading old saves without ID system data","duration":0.4287910000002739,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","persistence"],"fullName":"WorldModel persistence should clear world","status":"passed","title":"should clear world","duration":0.20319600000038918,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should register and apply event handler","status":"passed","title":"should register and apply event handler","duration":0.17243099999905098,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should validate events","status":"passed","title":"should validate events","duration":0.08808200000021316,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should throw when applying invalid event","status":"passed","title":"should throw when applying invalid event","duration":0.13225099999908707,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should preview event changes","status":"passed","title":"should preview event changes","duration":0.18853800000033516,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should track event history","status":"passed","title":"should track event history","duration":0.14852199999950244,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should get events since timestamp","status":"passed","title":"should get events since timestamp","duration":0.12915299999986019,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should clear event history","status":"passed","title":"should clear event history","duration":0.09294199999931152,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should unregister event handler","status":"passed","title":"should unregister event handler","duration":0.12842899999850488,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","event sourcing"],"fullName":"WorldModel event sourcing should handle unregistered events silently","status":"passed","title":"should handle unregistered events silently","duration":0.18762299999980314,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle empty world operations","status":"passed","title":"should handle empty world operations","duration":0.8564710000009654,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle removing entity with contents","status":"passed","title":"should handle removing entity with contents","duration":0.13763199999993958,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorldModel","edge cases"],"fullName":"WorldModel edge cases should handle circular references in toJSON","status":"passed","title":"should handle circular references in toJSON","duration":0.24666599999909522,"failureMessages":[],"meta":{}}],"startTime":1755207450623,"endTime":1755207450648.2466,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/world-model/tests/unit/world/world-model.test.ts"}]}