{"numTotalTestSuites":101,"numPassedTestSuites":101,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":197,"numPassedTests":173,"numFailedTests":0,"numPendingTests":24,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755567699263,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor with all dependencies","status":"passed","title":"should create executor with all dependencies","duration":14.38104100000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor using factory function","status":"passed","title":"should create executor using factory function","duration":8.067778000011458,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should execute a valid command","status":"passed","title":"should execute a valid command","duration":8.607111000004807,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should include timing data when configured","status":"passed","title":"should include timing data when configured","duration":5.0612399999954505,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle unknown commands","status":"passed","title":"should handle unknown commands","duration":6.11134599999059,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle empty input","status":"passed","title":"should handle empty input","duration":4.743612000005669,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle whitespace-only input","status":"passed","title":"should handle whitespace-only input","duration":3.3180910000082804,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should pass context to actions","status":"passed","title":"should pass context to actions","duration":3.721032000001287,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle action execution errors","status":"passed","title":"should handle action execution errors","duration":5.581009999994421,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle sync and async actions","status":"passed","title":"should handle sync and async actions","duration":4.311967999994522,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should parse commands using language provider","status":"passed","title":"should parse commands using language provider","duration":3.6880999999993946,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should normalize input","status":"passed","title":"should normalize input","duration":3.9084250000014435,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should include action-generated events","status":"passed","title":"should include action-generated events","duration":6.800755999996909,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should sequence events properly","status":"passed","title":"should sequence events properly","duration":4.540229000005638,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should add turn metadata to events","status":"passed","title":"should add turn metadata to events","duration":6.789791999995941,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing action registry","status":"passed","title":"should handle missing action registry","duration":8.10333100000571,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing parser","status":"passed","title":"should handle missing parser","duration":2.690915999992285,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing language provider","status":"passed","title":"should handle missing language provider","duration":6.2906190000067,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should create error event for failed commands","status":"passed","title":"should create error event for failed commands","duration":2.2638909999950556,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should execute story-defined actions","status":"passed","title":"should execute story-defined actions","duration":1.6397829999914393,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle story action with arguments","status":"passed","title":"should handle story action with arguments","duration":1.3030089999956544,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle failing story action","status":"passed","title":"should handle failing story action","duration":2.9533229999942705,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should execute standard actions","status":"passed","title":"should execute standard actions","duration":1.8960580000129994,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should handle action aliases","status":"passed","title":"should handle action aliases","duration":1.64461200000369,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should execute commands quickly","status":"passed","title":"should execute commands quickly","duration":6.040564999988419,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should handle many sequential commands","status":"passed","title":"should handle many sequential commands","duration":3.5594899999996414,"failureMessages":[],"meta":{}}],"startTime":1755567781403,"endTime":1755567781534.5596,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/command-executor.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should not track xyzzy in command history but should emit events","status":"passed","title":"should not track xyzzy in command history but should emit events","duration":30.922087000013562,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should track successful commands in history and emit events","status":"passed","title":"should track successful commands in history and emit events","duration":11.034889000002295,"failureMessages":[],"meta":{}}],"startTime":1755567781266,"endTime":1755567781308.035,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/debug-xyzzy.test.ts"},{"assertionResults":[{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate unique sequence numbers","status":"passed","title":"should generate unique sequence numbers","duration":2.2997189999950933,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate monotonically increasing sequences","status":"passed","title":"should generate monotonically increasing sequences","duration":3.153078999996069,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should handle rapid sequence generation","status":"passed","title":"should handle rapid sequence generation","duration":0.8611850000015693,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence a single event","status":"passed","title":"should sequence a single event","duration":0.6468129999993835,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence multiple events","status":"passed","title":"should sequence multiple events","duration":0.858593999997538,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should add default metadata","status":"passed","title":"should add default metadata","duration":0.15329300000303192,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should preserve optional metadata","status":"passed","title":"should preserve optional metadata","duration":0.182913999997254,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should handle empty event arrays","status":"passed","title":"should handle empty event arrays","duration":0.07144800000241958,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should sort events by sequence number","status":"passed","title":"should sort events by sequence number","duration":0.3356209999983548,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should not modify original array","status":"passed","title":"should not modify original array","duration":0.4086870000028284,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.14422899999772198,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle single element arrays","status":"passed","title":"should handle single element arrays","duration":0.10314800000196556,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by type","status":"passed","title":"should filter events by type","duration":0.19986600000265753,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by turn","status":"passed","title":"should filter events by turn","duration":0.2850749999997788,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by scope","status":"passed","title":"should filter events by scope","duration":0.4635659999985364,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should handle filtering with no matches","status":"passed","title":"should handle filtering with no matches","duration":0.3027499999952852,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by type","status":"passed","title":"should group events by type","duration":0.6151469999967958,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by turn","status":"passed","title":"should group events by turn","duration":0.8048970000018016,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should handle empty arrays when grouping","status":"passed","title":"should handle empty arrays when grouping","duration":0.21905300000071293,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should get latest event by type","status":"passed","title":"should get latest event by type","duration":0.5918309999979101,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should return undefined for non-existent type","status":"passed","title":"should return undefined for non-existent type","duration":0.15277499999501742,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should count events by type","status":"passed","title":"should count events by type","duration":0.26555499999813037,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should handle empty arrays in utility functions","status":"passed","title":"should handle empty arrays in utility functions","duration":0.18420200000400655,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should get events in sequence range","status":"passed","title":"should get events in sequence range","duration":0.423837000002095,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle exclusive ranges","status":"passed","title":"should handle exclusive ranges","duration":0.2687870000008843,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle ranges with no events","status":"passed","title":"should handle ranges with no events","duration":0.15452299999742536,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle events with same timestamp but different sequences","status":"passed","title":"should handle events with same timestamp but different sequences","duration":0.3036980000033509,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle very large sequence numbers","status":"passed","title":"should handle very large sequence numbers","duration":0.17062599999917438,"failureMessages":[],"meta":{}}],"startTime":1755567735584,"endTime":1755567735600.1707,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/event-sequencer.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should load language provider and parser dynamically","status":"skipped","title":"should load language provider and parser dynamically","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should handle different parser export patterns","status":"skipped","title":"should handle different parser export patterns","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if language code is not provided","status":"skipped","title":"should throw error if language code is not provided","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser package is not found","status":"skipped","title":"should throw error if parser package is not found","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser class is not found in package","status":"skipped","title":"should throw error if parser class is not found in package","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should register parser with ParserFactory","status":"skipped","title":"should register parser with ParserFactory","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Story integration"],"fullName":"GameEngine Language Management (DEPRECATED) Story integration should use language from story config when setting story","status":"skipped","title":"should use language from story config when setting story","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return undefined when no language is set","status":"skipped","title":"should return undefined when no language is set","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return parser and language provider after setting language","status":"skipped","title":"should return parser and language provider after setting language","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should accept language provider and parser via constructor","status":"passed","title":"should accept language provider and parser via constructor","duration":0.8334689999992406,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have language provider accessible after construction","status":"passed","title":"should have language provider accessible after construction","duration":0.21855199999845354,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have parser accessible after construction","status":"passed","title":"should have parser accessible after construction","duration":0.11478100000022096,"failureMessages":[],"meta":{}}],"startTime":1755567774203,"endTime":1755567774204.2185,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine-language.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should create an engine with standard setup","status":"passed","title":"should create an engine with standard setup","duration":20.44853600001079,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should initialize with default config","status":"passed","title":"should initialize with default config","duration":6.737313000005088,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should accept custom config","status":"passed","title":"should accept custom config","duration":3.947943999999552,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should set story and initialize components","status":"passed","title":"should set story and initialize components","duration":6.40152699999453,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should properly initialize world with story","status":"passed","title":"should properly initialize world with story","duration":5.349985000008019,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should handle story initialization errors gracefully","status":"passed","title":"should handle story initialization errors gracefully","duration":2.7185909999971045,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start and stop correctly","status":"passed","title":"should start and stop correctly","duration":5.0719240000034915,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if already running","status":"passed","title":"should throw if already running","duration":2.25478300001123,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if executing turn when not running","status":"passed","title":"should throw if executing turn when not running","duration":5.513950000007753,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start without a story if dependencies are provided","status":"passed","title":"should start without a story if dependencies are provided","duration":9.62337600000319,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should execute a basic turn","status":"passed","title":"should execute a basic turn","duration":5.849774999995134,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should update context after turn","status":"passed","title":"should update context after turn","duration":11.611435000013444,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should emit turn events","status":"passed","title":"should emit turn events","duration":12.037051999999676,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should handle turn execution errors","status":"passed","title":"should handle turn execution errors","duration":4.57390000000305,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should respect max history limit","status":"passed","title":"should respect max history limit","duration":30.739254999993136,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should process text output","status":"passed","title":"should process text output","duration":4.067729000002146,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should save current state","status":"passed","title":"should save current state","duration":10.100887000007788,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should load saved state","status":"passed","title":"should load saved state","duration":6.3026150000077905,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should reject incompatible save versions","status":"passed","title":"should reject incompatible save versions","duration":1.6184700000012526,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should update vocabulary for entities in scope","status":"passed","title":"should update vocabulary for entities in scope","duration":3.8120919999928446,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should mark entities correctly as in/out of scope","status":"passed","title":"should mark entities correctly as in/out of scope","duration":1.4922020000085467,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should emit events during turn execution","status":"passed","title":"should emit events during turn execution","duration":2.145153000004939,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should call onEvent config callback","status":"passed","title":"should call onEvent config callback","duration":7.239537000001292,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should get recent events","status":"passed","title":"should get recent events","duration":2.172357000003103,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","text service"],"fullName":"GameEngine text service should have text service configured","status":"passed","title":"should have text service configured","duration":1.37082699999155,"failureMessages":[],"meta":{}}],"startTime":1755567781170,"endTime":1755567781344.3708,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine.test.ts"},{"assertionResults":[{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should complete a full game session","status":"passed","title":"should complete a full game session","duration":24.724062000008416,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle save and restore","status":"passed","title":"should handle save and restore","duration":11.447836999999708,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle game completion","status":"skipped","title":"should handle game completion","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should handle malformed input gracefully","status":"passed","title":"should handle malformed input gracefully","duration":6.222615000006044,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should recover from action errors","status":"passed","title":"should recover from action errors","duration":4.902253000007477,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Performance"],"fullName":"Engine Integration Tests Performance should handle rapid turn execution","status":"passed","title":"should handle rapid turn execution","duration":7.931815000003553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Event flow"],"fullName":"Engine Integration Tests Event flow should maintain event ordering","status":"passed","title":"should maintain event ordering","duration":4.872726999994484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Text output integration"],"fullName":"Engine Integration Tests Text output integration should format complex game output","status":"passed","title":"should format complex game output","duration":3.894906000001356,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Vocabulary integration"],"fullName":"Engine Integration Tests Vocabulary integration should update vocabulary as player moves","status":"passed","title":"should update vocabulary as player moves","duration":6.77879500000563,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Standard engine setup"],"fullName":"Engine Integration Tests Standard engine setup should create functional standard engine","status":"passed","title":"should create functional standard engine","duration":8.709184999999707,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Complex world navigation"],"fullName":"Engine Integration Tests Complex world navigation should handle multi-room world with objects","status":"passed","title":"should handle multi-room world with objects","duration":8.100204000002122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game after turn limit","status":"skipped","title":"should complete game after turn limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game on score threshold","status":"skipped","title":"should complete game on score threshold","failureMessages":[],"meta":{}}],"startTime":1755567781322,"endTime":1755567781411.1,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom verbs","status":"passed","title":"should add custom verbs","duration":8.31094400001166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom prepositions","status":"passed","title":"should add custom prepositions","duration":6.886992999992799,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addNoun method (placeholder)","status":"passed","title":"should handle addNoun method (placeholder)","duration":2.5922739999950863,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addAdjective method (placeholder)","status":"passed","title":"should handle addAdjective method (placeholder)","duration":2.6933379999973113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add custom messages","status":"passed","title":"should add custom messages","duration":1.7431459999934305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action help","status":"passed","title":"should add action help","duration":1.881072000003769,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action patterns","status":"passed","title":"should add action patterns","duration":2.547606000007363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should merge patterns with existing actions","status":"passed","title":"should merge patterns with existing actions","duration":2.3445339999889256,"failureMessages":[],"meta":{}}],"startTime":1755567764549,"endTime":1755567764578.3445,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/parser-extension.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Platform Operations","Platform Event Detection"],"fullName":"GameEngine Platform Operations Platform Event Detection should detect and queue platform events during turn execution","status":"passed","title":"should detect and queue platform events during turn execution","duration":25.558111000005738,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should process save requested event and call save hook","status":"passed","title":"should process save requested event and call save hook","duration":8.953305000002729,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save completed event on success","status":"passed","title":"should emit save completed event on success","duration":7.055030999996234,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when hook throws","status":"passed","title":"should emit save failed event when hook throws","duration":37.881251999991946,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when no save hook registered","status":"passed","title":"should emit save failed event when no save hook registered","duration":3.0697979999968084,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should process restore requested event and call restore hook","status":"passed","title":"should process restore requested event and call restore hook","duration":3.7367920000106096,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should load save data and emit completion event","status":"passed","title":"should load save data and emit completion event","duration":10.576775000008638,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should emit restore failed event when no save data available","status":"passed","title":"should emit restore failed event when no save data available","duration":4.961345999996411,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should process quit requested event and call quit hook","status":"passed","title":"should process quit requested event and call quit hook","duration":9.681196999998065,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should stop engine and emit confirmation when quit confirmed","status":"passed","title":"should stop engine and emit confirmation when quit confirmed","duration":2.8256339999934426,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should emit cancelled event when quit declined","status":"passed","title":"should emit cancelled event when quit declined","duration":4.423903999995673,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should quit by default when no hook registered","status":"passed","title":"should quit by default when no hook registered","duration":4.605190999995102,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should process restart requested event and call restart hook","status":"passed","title":"should process restart requested event and call restart hook","duration":12.570579000006546,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should reinitialize story and emit completion when restart confirmed","status":"passed","title":"should reinitialize story and emit completion when restart confirmed","duration":5.7697499999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should emit cancelled event when restart declined","status":"passed","title":"should emit cancelled event when restart declined","duration":10.609809999994468,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should process multiple platform operations in order","status":"passed","title":"should process multiple platform operations in order","duration":3.8391299999930197,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should continue processing even if one operation fails","status":"passed","title":"should continue processing even if one operation fails","duration":2.9701420000055805,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should add completion events to current turn events","status":"passed","title":"should add completion events to current turn events","duration":1.7869529999879887,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should emit events through event source","status":"passed","title":"should emit events through event source","duration":4.074099000004935,"failureMessages":[],"meta":{}}],"startTime":1755567781160,"endTime":1755567781327.0742,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/platform-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should successfully initialize engine with test story and language provider","status":"passed","title":"should successfully initialize engine with test story and language provider","duration":23.28901799999585,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should load language provider directly","status":"passed","title":"should load language provider directly","duration":4.05451400000311,"failureMessages":[],"meta":{}}],"startTime":1755567781200,"endTime":1755567781228.0544,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story-testing-verification.test.ts"},{"assertionResults":[{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate valid story config","status":"passed","title":"should validate valid story config","duration":1.3102280000002793,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should accept author as array","status":"passed","title":"should accept author as array","duration":0.3314299999983632,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate semantic version","status":"passed","title":"should validate semantic version","duration":0.3580579999998008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should reject invalid versions","status":"passed","title":"should reject invalid versions","duration":0.4402190000000701,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should require all mandatory fields","status":"passed","title":"should require all mandatory fields","duration":0.28711199999997916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","Story lifecycle"],"fullName":"Story Story lifecycle should track completion state","status":"passed","title":"should track completion state","duration":0.2063159999997879,"failureMessages":[],"meta":{}}],"startTime":1755567768250,"endTime":1755567768253.2063,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story.test.ts"},{"assertionResults":[{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should create valid game event","status":"passed","title":"should create valid game event","duration":1.4838890000028186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should support optional metadata","status":"passed","title":"should support optional metadata","duration":0.2271069999987958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should handle empty data","status":"passed","title":"should handle empty data","duration":0.1308260000005248,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should extend GameEvent with sequencing data","status":"passed","title":"should extend GameEvent with sequencing data","duration":0.2941050000008545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support different scopes","status":"passed","title":"should support different scopes","duration":0.20193500000459608,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support optional source","status":"passed","title":"should support optional source","duration":0.12389299999631476,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should create valid turn result","status":"passed","title":"should create valid turn result","duration":0.6428749999977299,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include timing data when provided","status":"passed","title":"should include timing data when provided","duration":0.12236100000154693,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include error for failed turns","status":"passed","title":"should include error for failed turns","duration":0.22195600000122795,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should handle events array","status":"passed","title":"should handle events array","duration":0.6660510000001523,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should create valid game context","status":"passed","title":"should create valid game context","duration":0.6520689999961178,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should support optional metadata fields","status":"passed","title":"should support optional metadata fields","duration":0.14349400000355672,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should maintain turn history","status":"passed","title":"should maintain turn history","duration":0.15428499999688938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should have default values","status":"passed","title":"should have default values","duration":0.09109699999680743,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should support all configuration options","status":"passed","title":"should support all configuration options","duration":0.600390999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should handle event callback","status":"passed","title":"should handle event callback","duration":0.18954700000176672,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should create valid game state","status":"passed","title":"should create valid game state","duration":0.20547000000078697,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should preserve full context in save state","status":"passed","title":"should preserve full context in save state","duration":0.2749970000004396,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should track execution phases","status":"passed","title":"should track execution phases","duration":0.10936300000321353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should support optional custom timings","status":"passed","title":"should support optional custom timings","duration":0.07933600000251317,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should maintain consistency between types","status":"passed","title":"should maintain consistency between types","duration":0.08504700000048615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should allow arrays of events in turn results","status":"passed","title":"should allow arrays of events in turn results","duration":0.18342900000425288,"failureMessages":[],"meta":{}}],"startTime":1755567735222,"endTime":1755567735230.1833,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Vocabulary Structure Test"],"fullName":"Vocabulary Structure Test should check verb structure from language provider","status":"passed","title":"should check verb structure from language provider","duration":2.39763800000037,"failureMessages":[],"meta":{}}],"startTime":1755567769458,"endTime":1755567769460.3977,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/verb-structure.test.ts"},{"assertionResults":[{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track successful commands in history","status":"passed","title":"should track successful commands in history","duration":20.486175000012736,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track failed commands","status":"skipped","title":"should not track failed commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track multiple commands in order","status":"skipped","title":"should track multiple commands in order","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track complex commands with objects and prepositions","status":"skipped","title":"should track complex commands with objects and prepositions","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track non-repeatable commands","status":"skipped","title":"should not track non-repeatable commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should respect maxEntries limit","status":"skipped","title":"should respect maxEntries limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN command by repeating last command","status":"passed","title":"should handle AGAIN command by repeating last command","duration":7.528458000000683,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN with no history","status":"skipped","title":"should handle AGAIN with no history","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History with Capabilities Not Registered"],"fullName":"Command History Integration Command History with Capabilities Not Registered should gracefully handle missing command history capability","status":"skipped","title":"should gracefully handle missing command history capability","failureMessages":[],"meta":{}}],"startTime":1755567781217,"endTime":1755567781244.5286,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/command-history.test.ts"},{"assertionResults":[{"ancestorTitles":["Event Handler System (Integration)","Entity-level handlers"],"fullName":"Event Handler System (Integration) Entity-level handlers should allow entities to define event handlers","status":"passed","title":"should allow entities to define event handlers","duration":2.0233179999995627,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Entity-level handlers"],"fullName":"Event Handler System (Integration) Entity-level handlers should handle multiple entities with different handlers","status":"passed","title":"should handle multiple entities with different handlers","duration":0.43603100000109407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Story-level handlers"],"fullName":"Event Handler System (Integration) Story-level handlers should allow stories to register event handlers","status":"passed","title":"should allow stories to register event handlers","duration":0.2679889999999432,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Story-level handlers"],"fullName":"Event Handler System (Integration) Story-level handlers should support complex multi-entity interactions","status":"passed","title":"should support complex multi-entity interactions","duration":0.41286399999808054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Handler composition"],"fullName":"Event Handler System (Integration) Handler composition should allow both entity and story handlers to fire","status":"passed","title":"should allow both entity and story handlers to fire","duration":0.6108599999970465,"failureMessages":[],"meta":{}}],"startTime":1755567759716,"endTime":1755567759719.6108,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/event-handlers.test.ts"},{"assertionResults":[{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit client.query event when quit is executed","status":"passed","title":"should emit client.query event when quit is executed","duration":18.83818799999426,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit platform.quit_requested event","status":"passed","title":"should emit platform.quit_requested event","duration":7.016979000007268,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit if.event.quit_requested event","status":"passed","title":"should emit if.event.quit_requested event","duration":7.266401000000769,"failureMessages":[],"meta":{}}],"startTime":1755567781356,"endTime":1755567781389.2664,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-events.test.ts"},{"assertionResults":[{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should emit client.query event when quit action executes","status":"skipped","title":"should emit client.query event when quit action executes","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should intercept input when query is pending","status":"skipped","title":"should intercept input when query is pending","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle quit cancellation","status":"skipped","title":"should handle quit cancellation","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle invalid query responses","status":"skipped","title":"should handle invalid query responses","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should allow command interruption when configured","status":"skipped","title":"should allow command interruption when configured","failureMessages":[],"meta":{}}],"startTime":1755567699263,"endTime":1755567699263,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-system.test.ts"},{"assertionResults":[{"ancestorTitles":["EventEmitter","on()"],"fullName":"EventEmitter on() should register a handler for an event type","status":"passed","title":"should register a handler for an event type","duration":1.1200560000033875,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","on()"],"fullName":"EventEmitter on() should allow multiple handlers for the same event","status":"passed","title":"should allow multiple handlers for the same event","duration":0.17591100000208826,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","off()"],"fullName":"EventEmitter off() should remove a specific handler","status":"passed","title":"should remove a specific handler","duration":0.13246300000173505,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","off()"],"fullName":"EventEmitter off() should handle removing non-existent handler gracefully","status":"passed","title":"should handle removing non-existent handler gracefully","duration":0.6486779999977443,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should call all registered handlers","status":"passed","title":"should call all registered handlers","duration":0.287227000000712,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should collect semantic events from handlers","status":"passed","title":"should collect semantic events from handlers","duration":0.7900040000022273,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should handle handlers that return void","status":"passed","title":"should handle handlers that return void","duration":0.30085999999937485,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","clear()"],"fullName":"EventEmitter clear() should clear all handlers for a specific event type","status":"passed","title":"should clear all handlers for a specific event type","duration":0.20037500000034925,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","clear()"],"fullName":"EventEmitter clear() should clear all handlers when no event type specified","status":"passed","title":"should clear all handlers when no event type specified","duration":0.21057899999868823,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","listenerCount()"],"fullName":"EventEmitter listenerCount() should return 0 for unregistered events","status":"passed","title":"should return 0 for unregistered events","duration":0.09024199999839766,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","listenerCount()"],"fullName":"EventEmitter listenerCount() should return correct count for registered events","status":"passed","title":"should return correct count for registered events","duration":0.08203499999945052,"failureMessages":[],"meta":{}}],"startTime":1755567755249,"endTime":1755567755254.2107,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/unit/events/event-emitter.test.ts"}]}