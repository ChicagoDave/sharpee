{"numTotalTestSuites":101,"numPassedTestSuites":101,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":197,"numPassedTests":173,"numFailedTests":0,"numPendingTests":24,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755121001090,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor with all dependencies","status":"passed","title":"should create executor with all dependencies","duration":9.611042999997153,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor using factory function","status":"passed","title":"should create executor using factory function","duration":2.044460999997682,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should execute a valid command","status":"passed","title":"should execute a valid command","duration":6.042019000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should include timing data when configured","status":"passed","title":"should include timing data when configured","duration":3.059108000001288,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle unknown commands","status":"passed","title":"should handle unknown commands","duration":3.91300400000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle empty input","status":"passed","title":"should handle empty input","duration":1.5678189999889582,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle whitespace-only input","status":"passed","title":"should handle whitespace-only input","duration":2.237087999994401,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should pass context to actions","status":"passed","title":"should pass context to actions","duration":1.3823669999983395,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle action execution errors","status":"passed","title":"should handle action execution errors","duration":3.076402999999118,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle sync and async actions","status":"passed","title":"should handle sync and async actions","duration":1.8605979999992996,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should parse commands using language provider","status":"passed","title":"should parse commands using language provider","duration":3.5191029999987222,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should normalize input","status":"passed","title":"should normalize input","duration":1.3954110000049695,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should include action-generated events","status":"passed","title":"should include action-generated events","duration":2.23963399999775,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should sequence events properly","status":"passed","title":"should sequence events properly","duration":1.982071000005817,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should add turn metadata to events","status":"passed","title":"should add turn metadata to events","duration":2.965819000004558,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing action registry","status":"passed","title":"should handle missing action registry","duration":2.8838329999998678,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing parser","status":"passed","title":"should handle missing parser","duration":2.329521999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing language provider","status":"passed","title":"should handle missing language provider","duration":1.6594980000081705,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should create error event for failed commands","status":"passed","title":"should create error event for failed commands","duration":2.0489460000098916,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should execute story-defined actions","status":"passed","title":"should execute story-defined actions","duration":1.9806059999973513,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle story action with arguments","status":"passed","title":"should handle story action with arguments","duration":0.9881200000090757,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle failing story action","status":"passed","title":"should handle failing story action","duration":1.0555269999895245,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should execute standard actions","status":"passed","title":"should execute standard actions","duration":1.8001640000002226,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should handle action aliases","status":"passed","title":"should handle action aliases","duration":1.5627779999922495,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should execute commands quickly","status":"passed","title":"should execute commands quickly","duration":2.5011539999977686,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should handle many sequential commands","status":"passed","title":"should handle many sequential commands","duration":1.7605960000073537,"failureMessages":[],"meta":{}}],"startTime":1755121092529,"endTime":1755121092596.7605,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/command-executor.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should not track xyzzy in command history but should emit events","status":"passed","title":"should not track xyzzy in command history but should emit events","duration":16.794232999993255,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should track successful commands in history and emit events","status":"passed","title":"should track successful commands in history and emit events","duration":5.730733999997028,"failureMessages":[],"meta":{}}],"startTime":1755121092389,"endTime":1755121092411.7307,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/debug-xyzzy.test.ts"},{"assertionResults":[{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate unique sequence numbers","status":"passed","title":"should generate unique sequence numbers","duration":1.4026930000036373,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate monotonically increasing sequences","status":"passed","title":"should generate monotonically increasing sequences","duration":1.8744280000028084,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should handle rapid sequence generation","status":"passed","title":"should handle rapid sequence generation","duration":0.4999439999955939,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence a single event","status":"passed","title":"should sequence a single event","duration":0.798399999999674,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence multiple events","status":"passed","title":"should sequence multiple events","duration":0.8250889999981155,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should add default metadata","status":"passed","title":"should add default metadata","duration":0.1742050000029849,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should preserve optional metadata","status":"passed","title":"should preserve optional metadata","duration":0.19606500000372762,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should handle empty event arrays","status":"passed","title":"should handle empty event arrays","duration":0.07378199999948265,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should sort events by sequence number","status":"passed","title":"should sort events by sequence number","duration":0.25982400000066264,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should not modify original array","status":"passed","title":"should not modify original array","duration":0.4251799999983632,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.16431899999588495,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle single element arrays","status":"passed","title":"should handle single element arrays","duration":0.11160899999958929,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by type","status":"passed","title":"should filter events by type","duration":0.197770999999193,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by turn","status":"passed","title":"should filter events by turn","duration":0.2503920000017388,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by scope","status":"passed","title":"should filter events by scope","duration":0.2556799999947543,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should handle filtering with no matches","status":"passed","title":"should handle filtering with no matches","duration":0.1383380000042962,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by type","status":"passed","title":"should group events by type","duration":0.3666850000008708,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by turn","status":"passed","title":"should group events by turn","duration":0.455389999995532,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should handle empty arrays when grouping","status":"passed","title":"should handle empty arrays when grouping","duration":0.15684399999736343,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should get latest event by type","status":"passed","title":"should get latest event by type","duration":0.13075499999831663,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should return undefined for non-existent type","status":"passed","title":"should return undefined for non-existent type","duration":0.40600399999675574,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should count events by type","status":"passed","title":"should count events by type","duration":0.23702799999591662,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should handle empty arrays in utility functions","status":"passed","title":"should handle empty arrays in utility functions","duration":0.10616200000367826,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should get events in sequence range","status":"passed","title":"should get events in sequence range","duration":0.19296100000065053,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle exclusive ranges","status":"passed","title":"should handle exclusive ranges","duration":0.11409699999785516,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle ranges with no events","status":"passed","title":"should handle ranges with no events","duration":0.06267899999511428,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle events with same timestamp but different sequences","status":"passed","title":"should handle events with same timestamp but different sequences","duration":0.12996399999974528,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle very large sequence numbers","status":"passed","title":"should handle very large sequence numbers","duration":0.07230999999592314,"failureMessages":[],"meta":{}}],"startTime":1755121043489,"endTime":1755121043500.1929,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/event-sequencer.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should load language provider and parser dynamically","status":"skipped","title":"should load language provider and parser dynamically","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should handle different parser export patterns","status":"skipped","title":"should handle different parser export patterns","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if language code is not provided","status":"skipped","title":"should throw error if language code is not provided","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser package is not found","status":"skipped","title":"should throw error if parser package is not found","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser class is not found in package","status":"skipped","title":"should throw error if parser class is not found in package","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should register parser with ParserFactory","status":"skipped","title":"should register parser with ParserFactory","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Story integration"],"fullName":"GameEngine Language Management (DEPRECATED) Story integration should use language from story config when setting story","status":"skipped","title":"should use language from story config when setting story","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return undefined when no language is set","status":"skipped","title":"should return undefined when no language is set","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return parser and language provider after setting language","status":"skipped","title":"should return parser and language provider after setting language","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should accept language provider and parser via constructor","status":"passed","title":"should accept language provider and parser via constructor","duration":1.8567279999988386,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have language provider accessible after construction","status":"passed","title":"should have language provider accessible after construction","duration":0.5785820000000967,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have parser accessible after construction","status":"passed","title":"should have parser accessible after construction","duration":0.4050859999988461,"failureMessages":[],"meta":{}}],"startTime":1755121086133,"endTime":1755121086135.5786,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine-language.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should create an engine with standard setup","status":"passed","title":"should create an engine with standard setup","duration":7.612575999999535,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should initialize with default config","status":"passed","title":"should initialize with default config","duration":3.85618400000385,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should accept custom config","status":"passed","title":"should accept custom config","duration":3.3670189999975264,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should set story and initialize components","status":"passed","title":"should set story and initialize components","duration":8.704072000007727,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should properly initialize world with story","status":"passed","title":"should properly initialize world with story","duration":2.697503000003053,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should handle story initialization errors gracefully","status":"passed","title":"should handle story initialization errors gracefully","duration":2.3030170000129147,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start and stop correctly","status":"passed","title":"should start and stop correctly","duration":3.2945219999965047,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if already running","status":"passed","title":"should throw if already running","duration":2.4005209999886574,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if executing turn when not running","status":"passed","title":"should throw if executing turn when not running","duration":4.583897000004072,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start without a story if dependencies are provided","status":"passed","title":"should start without a story if dependencies are provided","duration":4.00087399999029,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should execute a basic turn","status":"passed","title":"should execute a basic turn","duration":9.126705000002403,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should update context after turn","status":"passed","title":"should update context after turn","duration":4.323479999991832,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should emit turn events","status":"passed","title":"should emit turn events","duration":2.7339520000095945,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should handle turn execution errors","status":"passed","title":"should handle turn execution errors","duration":6.111965000003693,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should respect max history limit","status":"passed","title":"should respect max history limit","duration":9.266569999992498,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should process text output","status":"passed","title":"should process text output","duration":2.201872000005096,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should save current state","status":"passed","title":"should save current state","duration":2.8459040000016103,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should load saved state","status":"passed","title":"should load saved state","duration":7.333253999997396,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should reject incompatible save versions","status":"passed","title":"should reject incompatible save versions","duration":2.297904999999446,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should update vocabulary for entities in scope","status":"passed","title":"should update vocabulary for entities in scope","duration":2.3177419999992708,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should mark entities correctly as in/out of scope","status":"passed","title":"should mark entities correctly as in/out of scope","duration":3.459235999995144,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should emit events during turn execution","status":"passed","title":"should emit events during turn execution","duration":2.840042000010726,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should call onEvent config callback","status":"passed","title":"should call onEvent config callback","duration":5.927422000007937,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should get recent events","status":"passed","title":"should get recent events","duration":2.6094970000121975,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","text service"],"fullName":"GameEngine text service should have text service configured","status":"passed","title":"should have text service configured","duration":1.7216429999971297,"failureMessages":[],"meta":{}}],"startTime":1755121092399,"endTime":1755121092508.7217,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine.test.ts"},{"assertionResults":[{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should complete a full game session","status":"passed","title":"should complete a full game session","duration":22.40387899999041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle save and restore","status":"passed","title":"should handle save and restore","duration":10.780289000002085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle game completion","status":"skipped","title":"should handle game completion","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should handle malformed input gracefully","status":"passed","title":"should handle malformed input gracefully","duration":3.571884000004502,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should recover from action errors","status":"passed","title":"should recover from action errors","duration":7.02196699999331,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Performance"],"fullName":"Engine Integration Tests Performance should handle rapid turn execution","status":"passed","title":"should handle rapid turn execution","duration":4.660430000003544,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Event flow"],"fullName":"Engine Integration Tests Event flow should maintain event ordering","status":"passed","title":"should maintain event ordering","duration":4.369714000000386,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Text output integration"],"fullName":"Engine Integration Tests Text output integration should format complex game output","status":"passed","title":"should format complex game output","duration":3.128601999997045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Vocabulary integration"],"fullName":"Engine Integration Tests Vocabulary integration should update vocabulary as player moves","status":"passed","title":"should update vocabulary as player moves","duration":3.9854820000036852,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Standard engine setup"],"fullName":"Engine Integration Tests Standard engine setup should create functional standard engine","status":"passed","title":"should create functional standard engine","duration":2.2152550000027986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Complex world navigation"],"fullName":"Engine Integration Tests Complex world navigation should handle multi-room world with objects","status":"passed","title":"should handle multi-room world with objects","duration":3.7701729999971576,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game after turn limit","status":"skipped","title":"should complete game after turn limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game on score threshold","status":"skipped","title":"should complete game on score threshold","failureMessages":[],"meta":{}}],"startTime":1755121092395,"endTime":1755121092461.7703,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom verbs","status":"passed","title":"should add custom verbs","duration":6.84365299998899,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom prepositions","status":"passed","title":"should add custom prepositions","duration":3.5789850000001024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addNoun method (placeholder)","status":"passed","title":"should handle addNoun method (placeholder)","duration":3.2048680000007153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addAdjective method (placeholder)","status":"passed","title":"should handle addAdjective method (placeholder)","duration":2.7909860000072513,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add custom messages","status":"passed","title":"should add custom messages","duration":1.9509339999931399,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action help","status":"passed","title":"should add action help","duration":2.332823000004282,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action patterns","status":"passed","title":"should add action patterns","duration":3.5232689999975264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should merge patterns with existing actions","status":"passed","title":"should merge patterns with existing actions","duration":2.1001000000105705,"failureMessages":[],"meta":{}}],"startTime":1755121074761,"endTime":1755121074788.1,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/parser-extension.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Platform Operations","Platform Event Detection"],"fullName":"GameEngine Platform Operations Platform Event Detection should detect and queue platform events during turn execution","status":"passed","title":"should detect and queue platform events during turn execution","duration":16.179948999997578,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should process save requested event and call save hook","status":"passed","title":"should process save requested event and call save hook","duration":7.601809999992838,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save completed event on success","status":"passed","title":"should emit save completed event on success","duration":6.1005759999970905,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when hook throws","status":"passed","title":"should emit save failed event when hook throws","duration":30.659324000007473,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when no save hook registered","status":"passed","title":"should emit save failed event when no save hook registered","duration":3.968273999998928,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should process restore requested event and call restore hook","status":"passed","title":"should process restore requested event and call restore hook","duration":4.722085000001243,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should load save data and emit completion event","status":"passed","title":"should load save data and emit completion event","duration":10.943756999986363,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should emit restore failed event when no save data available","status":"passed","title":"should emit restore failed event when no save data available","duration":2.238307999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should process quit requested event and call quit hook","status":"passed","title":"should process quit requested event and call quit hook","duration":3.7476840000017546,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should stop engine and emit confirmation when quit confirmed","status":"passed","title":"should stop engine and emit confirmation when quit confirmed","duration":2.460534000012558,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should emit cancelled event when quit declined","status":"passed","title":"should emit cancelled event when quit declined","duration":3.051938999997219,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should quit by default when no hook registered","status":"passed","title":"should quit by default when no hook registered","duration":1.967743999994127,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should process restart requested event and call restart hook","status":"passed","title":"should process restart requested event and call restart hook","duration":2.6037360000045737,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should reinitialize story and emit completion when restart confirmed","status":"passed","title":"should reinitialize story and emit completion when restart confirmed","duration":3.117245000001276,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should emit cancelled event when restart declined","status":"passed","title":"should emit cancelled event when restart declined","duration":1.9417170000087935,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should process multiple platform operations in order","status":"passed","title":"should process multiple platform operations in order","duration":4.680496000000858,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should continue processing even if one operation fails","status":"passed","title":"should continue processing even if one operation fails","duration":4.723661999989417,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should add completion events to current turn events","status":"passed","title":"should add completion events to current turn events","duration":1.9662979999993695,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should emit events through event source","status":"passed","title":"should emit events through event source","duration":2.502275999999256,"failureMessages":[],"meta":{}}],"startTime":1755121092390,"endTime":1755121092506.5022,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/platform-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should successfully initialize engine with test story and language provider","status":"passed","title":"should successfully initialize engine with test story and language provider","duration":10.53439499999513,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should load language provider directly","status":"passed","title":"should load language provider directly","duration":3.498357999997097,"failureMessages":[],"meta":{}}],"startTime":1755121092384,"endTime":1755121092397.4983,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story-testing-verification.test.ts"},{"assertionResults":[{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate valid story config","status":"passed","title":"should validate valid story config","duration":1.5253890000003594,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should accept author as array","status":"passed","title":"should accept author as array","duration":0.2502700000004552,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate semantic version","status":"passed","title":"should validate semantic version","duration":0.4186330000011367,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should reject invalid versions","status":"passed","title":"should reject invalid versions","duration":0.5491579999998066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should require all mandatory fields","status":"passed","title":"should require all mandatory fields","duration":0.3641910000005737,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","Story lifecycle"],"fullName":"Story Story lifecycle should track completion state","status":"passed","title":"should track completion state","duration":0.20413399999961257,"failureMessages":[],"meta":{}}],"startTime":1755121079626,"endTime":1755121079630.204,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story.test.ts"},{"assertionResults":[{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should create valid game event","status":"passed","title":"should create valid game event","duration":1.3254069999966305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should support optional metadata","status":"passed","title":"should support optional metadata","duration":0.15128499999991618,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should handle empty data","status":"passed","title":"should handle empty data","duration":0.08602199999586446,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should extend GameEvent with sequencing data","status":"passed","title":"should extend GameEvent with sequencing data","duration":0.22434499999508262,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support different scopes","status":"passed","title":"should support different scopes","duration":0.21433100000285776,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support optional source","status":"passed","title":"should support optional source","duration":0.09635800000251038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should create valid turn result","status":"passed","title":"should create valid turn result","duration":0.1486979999972391,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include timing data when provided","status":"passed","title":"should include timing data when provided","duration":0.07896999999502441,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include error for failed turns","status":"passed","title":"should include error for failed turns","duration":0.14668199999869103,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should handle events array","status":"passed","title":"should handle events array","duration":0.5841889999937848,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should create valid game context","status":"passed","title":"should create valid game context","duration":0.4997799999982817,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should support optional metadata fields","status":"passed","title":"should support optional metadata fields","duration":0.11445799999637529,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should maintain turn history","status":"passed","title":"should maintain turn history","duration":0.13861300000280607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should have default values","status":"passed","title":"should have default values","duration":0.14968299999600276,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should support all configuration options","status":"passed","title":"should support all configuration options","duration":0.5698599999959697,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should handle event callback","status":"passed","title":"should handle event callback","duration":0.17940700000326615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should create valid game state","status":"passed","title":"should create valid game state","duration":0.18728299999929732,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should preserve full context in save state","status":"passed","title":"should preserve full context in save state","duration":0.24067600000125822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should track execution phases","status":"passed","title":"should track execution phases","duration":0.1144410000051721,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should support optional custom timings","status":"passed","title":"should support optional custom timings","duration":0.06435500000225147,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should maintain consistency between types","status":"passed","title":"should maintain consistency between types","duration":0.08161000000109198,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should allow arrays of events in turn results","status":"passed","title":"should allow arrays of events in turn results","duration":0.17826799999602372,"failureMessages":[],"meta":{}}],"startTime":1755121043068,"endTime":1755121043075.1782,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Vocabulary Structure Test"],"fullName":"Vocabulary Structure Test should check verb structure from language provider","status":"passed","title":"should check verb structure from language provider","duration":1.8696509999990667,"failureMessages":[],"meta":{}}],"startTime":1755121082044,"endTime":1755121082045.8696,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/verb-structure.test.ts"},{"assertionResults":[{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track successful commands in history","status":"passed","title":"should track successful commands in history","duration":20.731375000003027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track failed commands","status":"skipped","title":"should not track failed commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track multiple commands in order","status":"skipped","title":"should track multiple commands in order","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track complex commands with objects and prepositions","status":"skipped","title":"should track complex commands with objects and prepositions","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track non-repeatable commands","status":"skipped","title":"should not track non-repeatable commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should respect maxEntries limit","status":"skipped","title":"should respect maxEntries limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN command by repeating last command","status":"passed","title":"should handle AGAIN command by repeating last command","duration":7.867006000000401,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN with no history","status":"skipped","title":"should handle AGAIN with no history","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History with Capabilities Not Registered"],"fullName":"Command History Integration Command History with Capabilities Not Registered should gracefully handle missing command history capability","status":"skipped","title":"should gracefully handle missing command history capability","failureMessages":[],"meta":{}}],"startTime":1755121092476,"endTime":1755121092504.867,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/command-history.test.ts"},{"assertionResults":[{"ancestorTitles":["Event Handler System (Integration)","Entity-level handlers"],"fullName":"Event Handler System (Integration) Entity-level handlers should allow entities to define event handlers","status":"passed","title":"should allow entities to define event handlers","duration":2.289480999999796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Entity-level handlers"],"fullName":"Event Handler System (Integration) Entity-level handlers should handle multiple entities with different handlers","status":"passed","title":"should handle multiple entities with different handlers","duration":0.4507080000003043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Story-level handlers"],"fullName":"Event Handler System (Integration) Story-level handlers should allow stories to register event handlers","status":"passed","title":"should allow stories to register event handlers","duration":0.3122980000007374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Story-level handlers"],"fullName":"Event Handler System (Integration) Story-level handlers should support complex multi-entity interactions","status":"passed","title":"should support complex multi-entity interactions","duration":0.44934700000158045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Handler composition"],"fullName":"Event Handler System (Integration) Handler composition should allow both entity and story handlers to fire","status":"passed","title":"should allow both entity and story handlers to fire","duration":0.6108510000012757,"failureMessages":[],"meta":{}}],"startTime":1755121069573,"endTime":1755121069577.6108,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/event-handlers.test.ts"},{"assertionResults":[{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit client.query event when quit is executed","status":"passed","title":"should emit client.query event when quit is executed","duration":15.943568000002415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit platform.quit_requested event","status":"passed","title":"should emit platform.quit_requested event","duration":3.9909610000031535,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit if.event.quit_requested event","status":"passed","title":"should emit if.event.quit_requested event","duration":5.830517000009422,"failureMessages":[],"meta":{}}],"startTime":1755121092424,"endTime":1755121092449.8306,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-events.test.ts"},{"assertionResults":[{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should emit client.query event when quit action executes","status":"skipped","title":"should emit client.query event when quit action executes","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should intercept input when query is pending","status":"skipped","title":"should intercept input when query is pending","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle quit cancellation","status":"skipped","title":"should handle quit cancellation","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle invalid query responses","status":"skipped","title":"should handle invalid query responses","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should allow command interruption when configured","status":"skipped","title":"should allow command interruption when configured","failureMessages":[],"meta":{}}],"startTime":1755121001090,"endTime":1755121001090,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-system.test.ts"},{"assertionResults":[{"ancestorTitles":["EventEmitter","on()"],"fullName":"EventEmitter on() should register a handler for an event type","status":"passed","title":"should register a handler for an event type","duration":1.0159920000005513,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","on()"],"fullName":"EventEmitter on() should allow multiple handlers for the same event","status":"passed","title":"should allow multiple handlers for the same event","duration":0.15091100000063307,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","off()"],"fullName":"EventEmitter off() should remove a specific handler","status":"passed","title":"should remove a specific handler","duration":0.11706200000116951,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","off()"],"fullName":"EventEmitter off() should handle removing non-existent handler gracefully","status":"passed","title":"should handle removing non-existent handler gracefully","duration":0.5900230000006559,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should call all registered handlers","status":"passed","title":"should call all registered handlers","duration":0.1894819999979518,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should collect semantic events from handlers","status":"passed","title":"should collect semantic events from handlers","duration":0.780574999997043,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should handle handlers that return void","status":"passed","title":"should handle handlers that return void","duration":0.28195599999889964,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","clear()"],"fullName":"EventEmitter clear() should clear all handlers for a specific event type","status":"passed","title":"should clear all handlers for a specific event type","duration":0.1856740000002901,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","clear()"],"fullName":"EventEmitter clear() should clear all handlers when no event type specified","status":"passed","title":"should clear all handlers when no event type specified","duration":0.28614699999889126,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","listenerCount()"],"fullName":"EventEmitter listenerCount() should return 0 for unregistered events","status":"passed","title":"should return 0 for unregistered events","duration":0.09811300000001211,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","listenerCount()"],"fullName":"EventEmitter listenerCount() should return correct count for registered events","status":"passed","title":"should return correct count for registered events","duration":0.1744250000010652,"failureMessages":[],"meta":{}}],"startTime":1755121065319,"endTime":1755121065323.1743,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/unit/events/event-emitter.test.ts"}]}