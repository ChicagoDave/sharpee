{"numTotalTestSuites":89,"numPassedTestSuites":89,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":181,"numPassedTests":157,"numFailedTests":0,"numPendingTests":24,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1754722721511,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor with all dependencies","status":"passed","title":"should create executor with all dependencies","duration":11.900526999990689,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor using factory function","status":"passed","title":"should create executor using factory function","duration":4.52127900000778,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should execute a valid command","status":"passed","title":"should execute a valid command","duration":5.497512000001734,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should include timing data when configured","status":"passed","title":"should include timing data when configured","duration":5.34932100000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle unknown commands","status":"passed","title":"should handle unknown commands","duration":6.0826839999936055,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle empty input","status":"passed","title":"should handle empty input","duration":4.866396000012173,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle whitespace-only input","status":"passed","title":"should handle whitespace-only input","duration":3.02121900000202,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should pass context to actions","status":"passed","title":"should pass context to actions","duration":3.5419399999955203,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle action execution errors","status":"passed","title":"should handle action execution errors","duration":4.707441000005929,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle sync and async actions","status":"passed","title":"should handle sync and async actions","duration":4.406007999990834,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should parse commands using language provider","status":"passed","title":"should parse commands using language provider","duration":3.1689150000020163,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should normalize input","status":"passed","title":"should normalize input","duration":3.398316999999224,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should include action-generated events","status":"passed","title":"should include action-generated events","duration":1.5092300000105752,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should sequence events properly","status":"passed","title":"should sequence events properly","duration":4.611399999994319,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should add turn metadata to events","status":"passed","title":"should add turn metadata to events","duration":2.8971109999984037,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing action registry","status":"passed","title":"should handle missing action registry","duration":6.538387000007788,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing parser","status":"passed","title":"should handle missing parser","duration":3.0573910000093747,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing language provider","status":"passed","title":"should handle missing language provider","duration":4.378156999999192,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should create error event for failed commands","status":"passed","title":"should create error event for failed commands","duration":3.6552750000118976,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should execute story-defined actions","status":"passed","title":"should execute story-defined actions","duration":2.2548639999877196,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle story action with arguments","status":"passed","title":"should handle story action with arguments","duration":5.001797000004444,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle failing story action","status":"passed","title":"should handle failing story action","duration":2.575510000009672,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should execute standard actions","status":"passed","title":"should execute standard actions","duration":2.7682029999996303,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should handle action aliases","status":"passed","title":"should handle action aliases","duration":1.9905330000037793,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should execute commands quickly","status":"passed","title":"should execute commands quickly","duration":3.0295789999945555,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should handle many sequential commands","status":"passed","title":"should handle many sequential commands","duration":4.308250000001863,"failureMessages":[],"meta":{}}],"startTime":1754722823588,"endTime":1754722823698.3083,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/command-executor.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should not track xyzzy in command history but should emit events","status":"passed","title":"should not track xyzzy in command history but should emit events","duration":17.024516999998013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should track successful commands in history and emit events","status":"passed","title":"should track successful commands in history and emit events","duration":5.504776000001584,"failureMessages":[],"meta":{}}],"startTime":1754722823399,"endTime":1754722823421.505,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/debug-xyzzy.test.ts"},{"assertionResults":[{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate unique sequence numbers","status":"passed","title":"should generate unique sequence numbers","duration":1.1915989999979502,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate monotonically increasing sequences","status":"passed","title":"should generate monotonically increasing sequences","duration":2.045715999993263,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should handle rapid sequence generation","status":"passed","title":"should handle rapid sequence generation","duration":0.3451649999988149,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence a single event","status":"passed","title":"should sequence a single event","duration":0.6424439999973401,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence multiple events","status":"passed","title":"should sequence multiple events","duration":0.8626050000020768,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should add default metadata","status":"passed","title":"should add default metadata","duration":0.15774899999814807,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should preserve optional metadata","status":"passed","title":"should preserve optional metadata","duration":0.17221300000528572,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should handle empty event arrays","status":"passed","title":"should handle empty event arrays","duration":0.08095599999796832,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should sort events by sequence number","status":"passed","title":"should sort events by sequence number","duration":0.2839059999969322,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should not modify original array","status":"passed","title":"should not modify original array","duration":0.41059300000051735,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.1588130000018282,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle single element arrays","status":"passed","title":"should handle single element arrays","duration":0.49504699999670265,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by type","status":"passed","title":"should filter events by type","duration":0.2568450000035227,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by turn","status":"passed","title":"should filter events by turn","duration":0.25146400000085123,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by scope","status":"passed","title":"should filter events by scope","duration":0.23868099999526748,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should handle filtering with no matches","status":"passed","title":"should handle filtering with no matches","duration":0.1379659999947762,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by type","status":"passed","title":"should group events by type","duration":0.3755600000004051,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by turn","status":"passed","title":"should group events by turn","duration":0.5706629999986035,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should handle empty arrays when grouping","status":"passed","title":"should handle empty arrays when grouping","duration":0.1264309999969555,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should get latest event by type","status":"passed","title":"should get latest event by type","duration":0.14079900000069756,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should return undefined for non-existent type","status":"passed","title":"should return undefined for non-existent type","duration":0.05157799999869894,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should count events by type","status":"passed","title":"should count events by type","duration":0.11636100000032457,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should handle empty arrays in utility functions","status":"passed","title":"should handle empty arrays in utility functions","duration":0.06731199999921955,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should get events in sequence range","status":"passed","title":"should get events in sequence range","duration":0.16761299999780022,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle exclusive ranges","status":"passed","title":"should handle exclusive ranges","duration":0.09663899999577552,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle ranges with no events","status":"passed","title":"should handle ranges with no events","duration":0.05570299999817507,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle events with same timestamp but different sequences","status":"passed","title":"should handle events with same timestamp but different sequences","duration":0.10578700000041863,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle very large sequence numbers","status":"passed","title":"should handle very large sequence numbers","duration":0.06790999999793712,"failureMessages":[],"meta":{}}],"startTime":1754722770719,"endTime":1754722770730.1057,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/event-sequencer.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should load language provider and parser dynamically","status":"skipped","title":"should load language provider and parser dynamically","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should handle different parser export patterns","status":"skipped","title":"should handle different parser export patterns","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if language code is not provided","status":"skipped","title":"should throw error if language code is not provided","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser package is not found","status":"skipped","title":"should throw error if parser package is not found","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser class is not found in package","status":"skipped","title":"should throw error if parser class is not found in package","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should register parser with ParserFactory","status":"skipped","title":"should register parser with ParserFactory","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Story integration"],"fullName":"GameEngine Language Management (DEPRECATED) Story integration should use language from story config when setting story","status":"skipped","title":"should use language from story config when setting story","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return undefined when no language is set","status":"skipped","title":"should return undefined when no language is set","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return parser and language provider after setting language","status":"skipped","title":"should return parser and language provider after setting language","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should accept language provider and parser via constructor","status":"passed","title":"should accept language provider and parser via constructor","duration":1.0100000000002183,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have language provider accessible after construction","status":"passed","title":"should have language provider accessible after construction","duration":0.23403000000143948,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have parser accessible after construction","status":"passed","title":"should have parser accessible after construction","duration":0.14510499999960302,"failureMessages":[],"meta":{}}],"startTime":1754722811404,"endTime":1754722811405.2341,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine-language.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should create an engine with standard setup","status":"passed","title":"should create an engine with standard setup","duration":8.589489999998477,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should initialize with default config","status":"passed","title":"should initialize with default config","duration":4.767384999999194,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should accept custom config","status":"passed","title":"should accept custom config","duration":4.615632000000915,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should set story and initialize components","status":"passed","title":"should set story and initialize components","duration":3.5033729999995558,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should properly initialize world with story","status":"passed","title":"should properly initialize world with story","duration":3.5348999999987427,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should handle story initialization errors gracefully","status":"passed","title":"should handle story initialization errors gracefully","duration":4.189494999998715,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start and stop correctly","status":"passed","title":"should start and stop correctly","duration":2.980976999999257,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if already running","status":"passed","title":"should throw if already running","duration":3.5444700000080047,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if executing turn when not running","status":"passed","title":"should throw if executing turn when not running","duration":3.7564859999984037,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start without a story if dependencies are provided","status":"passed","title":"should start without a story if dependencies are provided","duration":4.865618000010727,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should execute a basic turn","status":"passed","title":"should execute a basic turn","duration":10.192564000011771,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should update context after turn","status":"passed","title":"should update context after turn","duration":5.896073999989312,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should emit turn events","status":"passed","title":"should emit turn events","duration":5.023111999995308,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should handle turn execution errors","status":"passed","title":"should handle turn execution errors","duration":3.1477469999954337,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should respect max history limit","status":"passed","title":"should respect max history limit","duration":9.191516999999294,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should process text output","status":"passed","title":"should process text output","duration":5.021662999992259,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should save current state","status":"passed","title":"should save current state","duration":3.109454999997979,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should load saved state","status":"passed","title":"should load saved state","duration":7.796306999996887,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should reject incompatible save versions","status":"passed","title":"should reject incompatible save versions","duration":2.6381709999986924,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should update vocabulary for entities in scope","status":"passed","title":"should update vocabulary for entities in scope","duration":5.3495570000086445,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should mark entities correctly as in/out of scope","status":"passed","title":"should mark entities correctly as in/out of scope","duration":2.1804989999945974,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should emit events during turn execution","status":"passed","title":"should emit events during turn execution","duration":3.1588899999915157,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should call onEvent config callback","status":"passed","title":"should call onEvent config callback","duration":4.718604000008781,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should get recent events","status":"passed","title":"should get recent events","duration":5.313774000009289,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","text service"],"fullName":"GameEngine text service should have text service configured","status":"passed","title":"should have text service configured","duration":2.7287339999893447,"failureMessages":[],"meta":{}}],"startTime":1754722823555,"endTime":1754722823676.7288,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine.test.ts"},{"assertionResults":[{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should complete a full game session","status":"passed","title":"should complete a full game session","duration":21.98048500000732,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle save and restore","status":"passed","title":"should handle save and restore","duration":13.857356000007712,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle game completion","status":"skipped","title":"should handle game completion","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should handle malformed input gracefully","status":"passed","title":"should handle malformed input gracefully","duration":3.2499039999966044,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should recover from action errors","status":"passed","title":"should recover from action errors","duration":4.640961000011885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Performance"],"fullName":"Engine Integration Tests Performance should handle rapid turn execution","status":"passed","title":"should handle rapid turn execution","duration":4.842879999996512,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Event flow"],"fullName":"Engine Integration Tests Event flow should maintain event ordering","status":"passed","title":"should maintain event ordering","duration":3.5829930000036256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Text output integration"],"fullName":"Engine Integration Tests Text output integration should format complex game output","status":"passed","title":"should format complex game output","duration":2.9952889999985928,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Vocabulary integration"],"fullName":"Engine Integration Tests Vocabulary integration should update vocabulary as player moves","status":"passed","title":"should update vocabulary as player moves","duration":4.6880570000066655,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Standard engine setup"],"fullName":"Engine Integration Tests Standard engine setup should create functional standard engine","status":"passed","title":"should create functional standard engine","duration":2.0142940000077942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Complex world navigation"],"fullName":"Engine Integration Tests Complex world navigation should handle multi-room world with objects","status":"passed","title":"should handle multi-room world with objects","duration":3.232203000006848,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game after turn limit","status":"skipped","title":"should complete game after turn limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game on score threshold","status":"skipped","title":"should complete game on score threshold","failureMessages":[],"meta":{}}],"startTime":1754722823392,"endTime":1754722823458.2322,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom verbs","status":"passed","title":"should add custom verbs","duration":9.81168099999195,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom prepositions","status":"passed","title":"should add custom prepositions","duration":3.7940899999957765,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addNoun method (placeholder)","status":"passed","title":"should handle addNoun method (placeholder)","duration":3.3168920000025537,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addAdjective method (placeholder)","status":"passed","title":"should handle addAdjective method (placeholder)","duration":1.1893830000044545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add custom messages","status":"passed","title":"should add custom messages","duration":1.7164130000019213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action help","status":"passed","title":"should add action help","duration":1.8318250000011176,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action patterns","status":"passed","title":"should add action patterns","duration":3.2649039999960223,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should merge patterns with existing actions","status":"passed","title":"should merge patterns with existing actions","duration":2.290987000000314,"failureMessages":[],"meta":{}}],"startTime":1754722804608,"endTime":1754722804635.291,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/parser-extension.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Platform Operations","Platform Event Detection"],"fullName":"GameEngine Platform Operations Platform Event Detection should detect and queue platform events during turn execution","status":"passed","title":"should detect and queue platform events during turn execution","duration":22.140948000000208,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should process save requested event and call save hook","status":"passed","title":"should process save requested event and call save hook","duration":7.253912000000128,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save completed event on success","status":"passed","title":"should emit save completed event on success","duration":6.449077000012039,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when hook throws","status":"passed","title":"should emit save failed event when hook throws","duration":31.586655999999493,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when no save hook registered","status":"passed","title":"should emit save failed event when no save hook registered","duration":3.7360370000096736,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should process restore requested event and call restore hook","status":"passed","title":"should process restore requested event and call restore hook","duration":3.4483449999970617,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should load save data and emit completion event","status":"passed","title":"should load save data and emit completion event","duration":4.74193699999887,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should emit restore failed event when no save data available","status":"passed","title":"should emit restore failed event when no save data available","duration":2.676779000001261,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should process quit requested event and call quit hook","status":"passed","title":"should process quit requested event and call quit hook","duration":4.037211999995634,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should stop engine and emit confirmation when quit confirmed","status":"passed","title":"should stop engine and emit confirmation when quit confirmed","duration":2.1136489999917103,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should emit cancelled event when quit declined","status":"passed","title":"should emit cancelled event when quit declined","duration":3.6040519999951357,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should quit by default when no hook registered","status":"passed","title":"should quit by default when no hook registered","duration":2.1930330000031972,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should process restart requested event and call restart hook","status":"passed","title":"should process restart requested event and call restart hook","duration":5.172779000000446,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should reinitialize story and emit completion when restart confirmed","status":"passed","title":"should reinitialize story and emit completion when restart confirmed","duration":3.9905520000029355,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should emit cancelled event when restart declined","status":"passed","title":"should emit cancelled event when restart declined","duration":3.13703600000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should process multiple platform operations in order","status":"passed","title":"should process multiple platform operations in order","duration":2.0972810000093887,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should continue processing even if one operation fails","status":"passed","title":"should continue processing even if one operation fails","duration":2.454725999996299,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should add completion events to current turn events","status":"passed","title":"should add completion events to current turn events","duration":3.8288179999944987,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should emit events through event source","status":"passed","title":"should emit events through event source","duration":4.7336839999916265,"failureMessages":[],"meta":{}}],"startTime":1754722823533,"endTime":1754722823653.7336,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/platform-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should successfully initialize engine with test story and language provider","status":"passed","title":"should successfully initialize engine with test story and language provider","duration":19.32972899999004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should load language provider directly","status":"passed","title":"should load language provider directly","duration":3.247082000001683,"failureMessages":[],"meta":{}}],"startTime":1754722823391,"endTime":1754722823414.247,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story-testing-verification.test.ts"},{"assertionResults":[{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate valid story config","status":"passed","title":"should validate valid story config","duration":1.6105630000020028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should accept author as array","status":"passed","title":"should accept author as array","duration":0.2712119999996503,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate semantic version","status":"passed","title":"should validate semantic version","duration":0.43653099999937695,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should reject invalid versions","status":"passed","title":"should reject invalid versions","duration":0.5640180000009423,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should require all mandatory fields","status":"passed","title":"should require all mandatory fields","duration":0.35052100000029895,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","Story lifecycle"],"fullName":"Story Story lifecycle should track completion state","status":"passed","title":"should track completion state","duration":0.2727760000016133,"failureMessages":[],"meta":{}}],"startTime":1754722798582,"endTime":1754722798586.2727,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story.test.ts"},{"assertionResults":[{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should create valid game event","status":"passed","title":"should create valid game event","duration":1.6740869999994175,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should support optional metadata","status":"passed","title":"should support optional metadata","duration":0.23849799999879906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should handle empty data","status":"passed","title":"should handle empty data","duration":0.10809200000221608,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should extend GameEvent with sequencing data","status":"passed","title":"should extend GameEvent with sequencing data","duration":0.2792069999995874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support different scopes","status":"passed","title":"should support different scopes","duration":0.19516899999871384,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support optional source","status":"passed","title":"should support optional source","duration":0.10213199999998324,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should create valid turn result","status":"passed","title":"should create valid turn result","duration":0.22275100000115344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include timing data when provided","status":"passed","title":"should include timing data when provided","duration":0.10106100000120932,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include error for failed turns","status":"passed","title":"should include error for failed turns","duration":0.266074999999546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should handle events array","status":"passed","title":"should handle events array","duration":0.6830439999976079,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should create valid game context","status":"passed","title":"should create valid game context","duration":0.7310399999987567,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should support optional metadata fields","status":"passed","title":"should support optional metadata fields","duration":0.20250400000077207,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should maintain turn history","status":"passed","title":"should maintain turn history","duration":0.1846609999993234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should have default values","status":"passed","title":"should have default values","duration":0.9928919999947539,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should support all configuration options","status":"passed","title":"should support all configuration options","duration":0.8845330000040121,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should handle event callback","status":"passed","title":"should handle event callback","duration":0.34651900000608293,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should create valid game state","status":"passed","title":"should create valid game state","duration":0.4045689999984461,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should preserve full context in save state","status":"passed","title":"should preserve full context in save state","duration":0.4104529999967781,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should track execution phases","status":"passed","title":"should track execution phases","duration":0.12615599999844562,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should support optional custom timings","status":"passed","title":"should support optional custom timings","duration":0.07027499999821885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should maintain consistency between types","status":"passed","title":"should maintain consistency between types","duration":0.08339900000282796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should allow arrays of events in turn results","status":"passed","title":"should allow arrays of events in turn results","duration":0.31176199999754317,"failureMessages":[],"meta":{}}],"startTime":1754722770242,"endTime":1754722770252.3118,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Vocabulary Structure Test"],"fullName":"Vocabulary Structure Test should check verb structure from language provider","status":"passed","title":"should check verb structure from language provider","duration":2.56007099999988,"failureMessages":[],"meta":{}}],"startTime":1754722804603,"endTime":1754722804605.56,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/verb-structure.test.ts"},{"assertionResults":[{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track successful commands in history","status":"passed","title":"should track successful commands in history","duration":15.365959000002476,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track failed commands","status":"skipped","title":"should not track failed commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track multiple commands in order","status":"skipped","title":"should track multiple commands in order","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track complex commands with objects and prepositions","status":"skipped","title":"should track complex commands with objects and prepositions","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track non-repeatable commands","status":"skipped","title":"should not track non-repeatable commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should respect maxEntries limit","status":"skipped","title":"should respect maxEntries limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN command by repeating last command","status":"passed","title":"should handle AGAIN command by repeating last command","duration":6.342946999997366,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN with no history","status":"skipped","title":"should handle AGAIN with no history","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History with Capabilities Not Registered"],"fullName":"Command History Integration Command History with Capabilities Not Registered should gracefully handle missing command history capability","status":"skipped","title":"should gracefully handle missing command history capability","failureMessages":[],"meta":{}}],"startTime":1754722823464,"endTime":1754722823486.343,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/command-history.test.ts"},{"assertionResults":[{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit client.query event when quit is executed","status":"passed","title":"should emit client.query event when quit is executed","duration":18.26557000000321,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit platform.quit_requested event","status":"passed","title":"should emit platform.quit_requested event","duration":3.425873000000138,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit if.event.quit_requested event","status":"passed","title":"should emit if.event.quit_requested event","duration":5.143565000005765,"failureMessages":[],"meta":{}}],"startTime":1754722823404,"endTime":1754722823431.1436,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-events.test.ts"},{"assertionResults":[{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should emit client.query event when quit action executes","status":"skipped","title":"should emit client.query event when quit action executes","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should intercept input when query is pending","status":"skipped","title":"should intercept input when query is pending","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle quit cancellation","status":"skipped","title":"should handle quit cancellation","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle invalid query responses","status":"skipped","title":"should handle invalid query responses","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should allow command interruption when configured","status":"skipped","title":"should allow command interruption when configured","failureMessages":[],"meta":{}}],"startTime":1754722721511,"endTime":1754722721511,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-system.test.ts"}]}