{"numTotalTestSuites":101,"numPassedTestSuites":101,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":197,"numPassedTests":173,"numFailedTests":0,"numPendingTests":24,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755574669132,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor with all dependencies","status":"passed","title":"should create executor with all dependencies","duration":14.336071999990963,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","initialization"],"fullName":"CommandExecutor initialization should create executor using factory function","status":"passed","title":"should create executor using factory function","duration":5.046564999996917,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should execute a valid command","status":"passed","title":"should execute a valid command","duration":9.265280999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should include timing data when configured","status":"passed","title":"should include timing data when configured","duration":4.651907000006759,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle unknown commands","status":"passed","title":"should handle unknown commands","duration":4.567003999996814,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle empty input","status":"passed","title":"should handle empty input","duration":3.7378420000022743,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle whitespace-only input","status":"passed","title":"should handle whitespace-only input","duration":1.7804650000034599,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should pass context to actions","status":"passed","title":"should pass context to actions","duration":4.205159999997704,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle action execution errors","status":"passed","title":"should handle action execution errors","duration":4.9014119999919785,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command execution"],"fullName":"CommandExecutor command execution should handle sync and async actions","status":"passed","title":"should handle sync and async actions","duration":4.416203999993741,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should parse commands using language provider","status":"passed","title":"should parse commands using language provider","duration":3.8338260000018636,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","command parsing"],"fullName":"CommandExecutor command parsing should normalize input","status":"passed","title":"should normalize input","duration":3.9003280000033556,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should include action-generated events","status":"passed","title":"should include action-generated events","duration":4.259057999996003,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should sequence events properly","status":"passed","title":"should sequence events properly","duration":3.9806119999993825,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","event generation"],"fullName":"CommandExecutor event generation should add turn metadata to events","status":"passed","title":"should add turn metadata to events","duration":3.52397499998915,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing action registry","status":"passed","title":"should handle missing action registry","duration":5.978606999997282,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing parser","status":"passed","title":"should handle missing parser","duration":3.243289999998524,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should handle missing language provider","status":"passed","title":"should handle missing language provider","duration":5.108899999991991,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","error handling"],"fullName":"CommandExecutor error handling should create error event for failed commands","status":"passed","title":"should create error event for failed commands","duration":2.428037999998196,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should execute story-defined actions","status":"passed","title":"should execute story-defined actions","duration":1.7061739999917336,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle story action with arguments","status":"passed","title":"should handle story action with arguments","duration":1.4828940000006696,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with story actions"],"fullName":"CommandExecutor integration with story actions should handle failing story action","status":"passed","title":"should handle failing story action","duration":2.9047200000059092,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should execute standard actions","status":"passed","title":"should execute standard actions","duration":1.2882769999996526,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","integration with standard actions"],"fullName":"CommandExecutor integration with standard actions should handle action aliases","status":"passed","title":"should handle action aliases","duration":2.1855439999926602,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should execute commands quickly","status":"passed","title":"should execute commands quickly","duration":4.969655000008061,"failureMessages":[],"meta":{}},{"ancestorTitles":["CommandExecutor","performance"],"fullName":"CommandExecutor performance should handle many sequential commands","status":"passed","title":"should handle many sequential commands","duration":2.150385999993887,"failureMessages":[],"meta":{}}],"startTime":1755574756410,"endTime":1755574756521.1504,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/command-executor.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should not track xyzzy in command history but should emit events","status":"passed","title":"should not track xyzzy in command history but should emit events","duration":20.676235000006272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug XYZZY Test"],"fullName":"Debug XYZZY Test should track successful commands in history and emit events","status":"passed","title":"should track successful commands in history and emit events","duration":9.44247500000347,"failureMessages":[],"meta":{}}],"startTime":1755574756300,"endTime":1755574756329.4424,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/debug-xyzzy.test.ts"},{"assertionResults":[{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate unique sequence numbers","status":"passed","title":"should generate unique sequence numbers","duration":1.145180999999866,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should generate monotonically increasing sequences","status":"passed","title":"should generate monotonically increasing sequences","duration":2.1078980000020238,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","sequence generation"],"fullName":"EventSequencer sequence generation should handle rapid sequence generation","status":"passed","title":"should handle rapid sequence generation","duration":0.9498279999970691,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence a single event","status":"passed","title":"should sequence a single event","duration":0.5706369999970775,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should sequence multiple events","status":"passed","title":"should sequence multiple events","duration":0.8155130000013742,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should add default metadata","status":"passed","title":"should add default metadata","duration":0.18188500000542263,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should preserve optional metadata","status":"passed","title":"should preserve optional metadata","duration":0.17761199999949895,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","event sequencing"],"fullName":"EventSequencer event sequencing should handle empty event arrays","status":"passed","title":"should handle empty event arrays","duration":0.07925700000487268,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should sort events by sequence number","status":"passed","title":"should sort events by sequence number","duration":0.29536499999812804,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should not modify original array","status":"passed","title":"should not modify original array","duration":0.3738510000039241,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.1594069999991916,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","sorting"],"fullName":"EventSequencer EventSequenceUtils sorting should handle single element arrays","status":"passed","title":"should handle single element arrays","duration":0.10363900000083959,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by type","status":"passed","title":"should filter events by type","duration":0.2663840000022901,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by turn","status":"passed","title":"should filter events by turn","duration":0.2421780000004219,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should filter events by scope","status":"passed","title":"should filter events by scope","duration":0.17811300000175834,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","filtering"],"fullName":"EventSequencer EventSequenceUtils filtering should handle filtering with no matches","status":"passed","title":"should handle filtering with no matches","duration":0.16206000000238419,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by type","status":"passed","title":"should group events by type","duration":0.2936760000011418,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should group events by turn","status":"passed","title":"should group events by turn","duration":0.3989759999967646,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","grouping"],"fullName":"EventSequencer EventSequenceUtils grouping should handle empty arrays when grouping","status":"passed","title":"should handle empty arrays when grouping","duration":0.34618699999555247,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should get latest event by type","status":"passed","title":"should get latest event by type","duration":0.19430400000419468,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should return undefined for non-existent type","status":"passed","title":"should return undefined for non-existent type","duration":0.05830700000660727,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should count events by type","status":"passed","title":"should count events by type","duration":0.1483559999978752,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","utility functions"],"fullName":"EventSequencer EventSequenceUtils utility functions should handle empty arrays in utility functions","status":"passed","title":"should handle empty arrays in utility functions","duration":0.07583200000226498,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should get events in sequence range","status":"passed","title":"should get events in sequence range","duration":0.17623900000035064,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle exclusive ranges","status":"passed","title":"should handle exclusive ranges","duration":0.10168300000077579,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","EventSequenceUtils","event range queries"],"fullName":"EventSequencer EventSequenceUtils event range queries should handle ranges with no events","status":"passed","title":"should handle ranges with no events","duration":0.07060600000113482,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle events with same timestamp but different sequences","status":"passed","title":"should handle events with same timestamp but different sequences","duration":0.11926999999559484,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventSequencer","edge cases"],"fullName":"EventSequencer edge cases should handle very large sequence numbers","status":"passed","title":"should handle very large sequence numbers","duration":0.06523199999355711,"failureMessages":[],"meta":{}}],"startTime":1755574708362,"endTime":1755574708372.1763,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/event-sequencer.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should load language provider and parser dynamically","status":"skipped","title":"should load language provider and parser dynamically","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should handle different parser export patterns","status":"skipped","title":"should handle different parser export patterns","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if language code is not provided","status":"skipped","title":"should throw error if language code is not provided","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser package is not found","status":"skipped","title":"should throw error if parser package is not found","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should throw error if parser class is not found in package","status":"skipped","title":"should throw error if parser class is not found in package","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","setLanguage()"],"fullName":"GameEngine Language Management (DEPRECATED) setLanguage() should register parser with ParserFactory","status":"skipped","title":"should register parser with ParserFactory","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Story integration"],"fullName":"GameEngine Language Management (DEPRECATED) Story integration should use language from story config when setting story","status":"skipped","title":"should use language from story config when setting story","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return undefined when no language is set","status":"skipped","title":"should return undefined when no language is set","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Language Management (DEPRECATED)","Getters"],"fullName":"GameEngine Language Management (DEPRECATED) Getters should return parser and language provider after setting language","status":"skipped","title":"should return parser and language provider after setting language","failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should accept language provider and parser via constructor","status":"passed","title":"should accept language provider and parser via constructor","duration":0.857267999999749,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have language provider accessible after construction","status":"passed","title":"should have language provider accessible after construction","duration":0.22204600000077335,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Static Language Configuration"],"fullName":"GameEngine Static Language Configuration should have parser accessible after construction","status":"passed","title":"should have parser accessible after construction","duration":0.09324600000036298,"failureMessages":[],"meta":{}}],"startTime":1755574750690,"endTime":1755574750691.2222,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine-language.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should create an engine with standard setup","status":"passed","title":"should create an engine with standard setup","duration":7.9708039999968605,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should initialize with default config","status":"passed","title":"should initialize with default config","duration":5.545658999995794,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","initialization"],"fullName":"GameEngine initialization should accept custom config","status":"passed","title":"should accept custom config","duration":5.481088999993517,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should set story and initialize components","status":"passed","title":"should set story and initialize components","duration":6.900454000002355,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should properly initialize world with story","status":"passed","title":"should properly initialize world with story","duration":7.042587999996613,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","story management"],"fullName":"GameEngine story management should handle story initialization errors gracefully","status":"passed","title":"should handle story initialization errors gracefully","duration":5.045884999999544,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start and stop correctly","status":"passed","title":"should start and stop correctly","duration":4.496641999998246,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if already running","status":"passed","title":"should throw if already running","duration":4.413597000006121,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should throw if executing turn when not running","status":"passed","title":"should throw if executing turn when not running","duration":4.79173900000751,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","engine lifecycle"],"fullName":"GameEngine engine lifecycle should start without a story if dependencies are provided","status":"passed","title":"should start without a story if dependencies are provided","duration":4.6948929999925895,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should execute a basic turn","status":"passed","title":"should execute a basic turn","duration":12.046463999999105,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should update context after turn","status":"passed","title":"should update context after turn","duration":3.850774000005913,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should emit turn events","status":"passed","title":"should emit turn events","duration":7.555205999989994,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should handle turn execution errors","status":"passed","title":"should handle turn execution errors","duration":6.266019000002416,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should respect max history limit","status":"passed","title":"should respect max history limit","duration":18.22501199999533,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","turn execution"],"fullName":"GameEngine turn execution should process text output","status":"passed","title":"should process text output","duration":2.685133000006317,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should save current state","status":"passed","title":"should save current state","duration":2.660394999998971,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should load saved state","status":"passed","title":"should load saved state","duration":7.990097000001697,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","game state management"],"fullName":"GameEngine game state management should reject incompatible save versions","status":"passed","title":"should reject incompatible save versions","duration":2.5204220000014175,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should update vocabulary for entities in scope","status":"passed","title":"should update vocabulary for entities in scope","duration":5.987270999990869,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","vocabulary management"],"fullName":"GameEngine vocabulary management should mark entities correctly as in/out of scope","status":"passed","title":"should mark entities correctly as in/out of scope","duration":5.1302080000023125,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should emit events during turn execution","status":"passed","title":"should emit events during turn execution","duration":6.703587999989395,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should call onEvent config callback","status":"passed","title":"should call onEvent config callback","duration":4.280947999999626,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","event handling"],"fullName":"GameEngine event handling should get recent events","status":"passed","title":"should get recent events","duration":6.341960000005201,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine","text service"],"fullName":"GameEngine text service should have text service configured","status":"passed","title":"should have text service configured","duration":1.8744799999985844,"failureMessages":[],"meta":{}}],"startTime":1755574756251,"endTime":1755574756402.8745,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/game-engine.test.ts"},{"assertionResults":[{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should complete a full game session","status":"passed","title":"should complete a full game session","duration":25.107057000001078,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle save and restore","status":"passed","title":"should handle save and restore","duration":13.033756999997422,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Full game flow"],"fullName":"Engine Integration Tests Full game flow should handle game completion","status":"skipped","title":"should handle game completion","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should handle malformed input gracefully","status":"passed","title":"should handle malformed input gracefully","duration":7.820642999999109,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Error scenarios"],"fullName":"Engine Integration Tests Error scenarios should recover from action errors","status":"passed","title":"should recover from action errors","duration":3.9645670000027167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Performance"],"fullName":"Engine Integration Tests Performance should handle rapid turn execution","status":"passed","title":"should handle rapid turn execution","duration":8.390042999992147,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Event flow"],"fullName":"Engine Integration Tests Event flow should maintain event ordering","status":"passed","title":"should maintain event ordering","duration":4.9384419999987585,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Text output integration"],"fullName":"Engine Integration Tests Text output integration should format complex game output","status":"passed","title":"should format complex game output","duration":3.738471999997273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Vocabulary integration"],"fullName":"Engine Integration Tests Vocabulary integration should update vocabulary as player moves","status":"passed","title":"should update vocabulary as player moves","duration":7.943140999996103,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Standard engine setup"],"fullName":"Engine Integration Tests Standard engine setup should create functional standard engine","status":"passed","title":"should create functional standard engine","duration":5.441890999994939,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Complex world navigation"],"fullName":"Engine Integration Tests Complex world navigation should handle multi-room world with objects","status":"passed","title":"should handle multi-room world with objects","duration":4.076342999993358,"failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game after turn limit","status":"skipped","title":"should complete game after turn limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Engine Integration Tests","Turn-based completion"],"fullName":"Engine Integration Tests Turn-based completion should complete game on score threshold","status":"skipped","title":"should complete game on score threshold","failureMessages":[],"meta":{}}],"startTime":1755574756246,"endTime":1755574756333.0764,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom verbs","status":"passed","title":"should add custom verbs","duration":7.306156999999075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should add custom prepositions","status":"passed","title":"should add custom prepositions","duration":3.3425850000057835,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addNoun method (placeholder)","status":"passed","title":"should handle addNoun method (placeholder)","duration":2.262454000010621,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Parser extensions"],"fullName":"Parser Extension Methods Parser extensions should handle addAdjective method (placeholder)","status":"passed","title":"should handle addAdjective method (placeholder)","duration":2.2799059999961173,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add custom messages","status":"passed","title":"should add custom messages","duration":2.0213170000060927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action help","status":"passed","title":"should add action help","duration":1.5565979999955744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should add action patterns","status":"passed","title":"should add action patterns","duration":2.0638049999979557,"failureMessages":[],"meta":{}},{"ancestorTitles":["Parser Extension Methods","Language Provider extensions"],"fullName":"Parser Extension Methods Language Provider extensions should merge patterns with existing actions","status":"passed","title":"should merge patterns with existing actions","duration":1.5286379999888595,"failureMessages":[],"meta":{}}],"startTime":1755574739349,"endTime":1755574739371.5286,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/parser-extension.test.ts"},{"assertionResults":[{"ancestorTitles":["GameEngine Platform Operations","Platform Event Detection"],"fullName":"GameEngine Platform Operations Platform Event Detection should detect and queue platform events during turn execution","status":"passed","title":"should detect and queue platform events during turn execution","duration":21.953252999999677,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should process save requested event and call save hook","status":"passed","title":"should process save requested event and call save hook","duration":9.382605999999214,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save completed event on success","status":"passed","title":"should emit save completed event on success","duration":6.700007999999798,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when hook throws","status":"passed","title":"should emit save failed event when hook throws","duration":37.661701999997604,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Save Operations"],"fullName":"GameEngine Platform Operations Save Operations should emit save failed event when no save hook registered","status":"passed","title":"should emit save failed event when no save hook registered","duration":8.733663000006345,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should process restore requested event and call restore hook","status":"passed","title":"should process restore requested event and call restore hook","duration":4.85350899999321,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should load save data and emit completion event","status":"passed","title":"should load save data and emit completion event","duration":2.707146000000648,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restore Operations"],"fullName":"GameEngine Platform Operations Restore Operations should emit restore failed event when no save data available","status":"passed","title":"should emit restore failed event when no save data available","duration":3.864876000006916,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should process quit requested event and call quit hook","status":"passed","title":"should process quit requested event and call quit hook","duration":4.149704000010388,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should stop engine and emit confirmation when quit confirmed","status":"passed","title":"should stop engine and emit confirmation when quit confirmed","duration":3.1324559999920893,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should emit cancelled event when quit declined","status":"passed","title":"should emit cancelled event when quit declined","duration":2.4971240000013495,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Quit Operations"],"fullName":"GameEngine Platform Operations Quit Operations should quit by default when no hook registered","status":"passed","title":"should quit by default when no hook registered","duration":4.869751000005635,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should process restart requested event and call restart hook","status":"passed","title":"should process restart requested event and call restart hook","duration":3.6665540000103647,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should reinitialize story and emit completion when restart confirmed","status":"passed","title":"should reinitialize story and emit completion when restart confirmed","duration":17.836613999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Restart Operations"],"fullName":"GameEngine Platform Operations Restart Operations should emit cancelled event when restart declined","status":"passed","title":"should emit cancelled event when restart declined","duration":8.905062999998336,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should process multiple platform operations in order","status":"passed","title":"should process multiple platform operations in order","duration":6.192966000002343,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Multiple Platform Operations"],"fullName":"GameEngine Platform Operations Multiple Platform Operations should continue processing even if one operation fails","status":"passed","title":"should continue processing even if one operation fails","duration":3.4523499999922933,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should add completion events to current turn events","status":"passed","title":"should add completion events to current turn events","duration":2.6117749999975786,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameEngine Platform Operations","Event Emission"],"fullName":"GameEngine Platform Operations Event Emission should emit events through event source","status":"passed","title":"should emit events through event source","duration":3.9575889999978244,"failureMessages":[],"meta":{}}],"startTime":1755574756291,"endTime":1755574756449.9575,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/platform-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should successfully initialize engine with test story and language provider","status":"passed","title":"should successfully initialize engine with test story and language provider","duration":15.8325649999897,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story-Based Testing Verification"],"fullName":"Story-Based Testing Verification should load language provider directly","status":"passed","title":"should load language provider directly","duration":5.271891999989748,"failureMessages":[],"meta":{}}],"startTime":1755574756258,"endTime":1755574756279.272,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story-testing-verification.test.ts"},{"assertionResults":[{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate valid story config","status":"passed","title":"should validate valid story config","duration":2.529655999998795,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should accept author as array","status":"passed","title":"should accept author as array","duration":0.4029399999999441,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should validate semantic version","status":"passed","title":"should validate semantic version","duration":1.096585999999661,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should reject invalid versions","status":"passed","title":"should reject invalid versions","duration":0.7637259999992239,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","StoryConfig validation"],"fullName":"Story StoryConfig validation should require all mandatory fields","status":"passed","title":"should require all mandatory fields","duration":0.7778030000008584,"failureMessages":[],"meta":{}},{"ancestorTitles":["Story","Story lifecycle"],"fullName":"Story Story lifecycle should track completion state","status":"passed","title":"should track completion state","duration":0.3690839999999298,"failureMessages":[],"meta":{}}],"startTime":1755574743833,"endTime":1755574743839.3691,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/story.test.ts"},{"assertionResults":[{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should create valid game event","status":"passed","title":"should create valid game event","duration":1.578259000001708,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should support optional metadata","status":"passed","title":"should support optional metadata","duration":0.22497699999803444,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameEvent"],"fullName":"Types GameEvent should handle empty data","status":"passed","title":"should handle empty data","duration":0.1186219999945024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should extend GameEvent with sequencing data","status":"passed","title":"should extend GameEvent with sequencing data","duration":0.2562319999997271,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support different scopes","status":"passed","title":"should support different scopes","duration":0.19123799999943003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","SequencedEvent"],"fullName":"Types SequencedEvent should support optional source","status":"passed","title":"should support optional source","duration":0.10516099999949802,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should create valid turn result","status":"passed","title":"should create valid turn result","duration":0.843672000002698,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include timing data when provided","status":"passed","title":"should include timing data when provided","duration":0.14948899999581045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should include error for failed turns","status":"passed","title":"should include error for failed turns","duration":0.19601600000169128,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TurnResult"],"fullName":"Types TurnResult should handle events array","status":"passed","title":"should handle events array","duration":0.6873339999947348,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should create valid game context","status":"passed","title":"should create valid game context","duration":0.5889679999963846,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should support optional metadata fields","status":"passed","title":"should support optional metadata fields","duration":0.1338430000032531,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameContext"],"fullName":"Types GameContext should maintain turn history","status":"passed","title":"should maintain turn history","duration":0.1632679999966058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should have default values","status":"passed","title":"should have default values","duration":0.10327600000164239,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should support all configuration options","status":"passed","title":"should support all configuration options","duration":0.6284539999978733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","EngineConfig"],"fullName":"Types EngineConfig should handle event callback","status":"passed","title":"should handle event callback","duration":0.1586299999980838,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should create valid game state","status":"passed","title":"should create valid game state","duration":0.37146900000516325,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","GameState"],"fullName":"Types GameState should preserve full context in save state","status":"passed","title":"should preserve full context in save state","duration":0.3685849999965285,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should track execution phases","status":"passed","title":"should track execution phases","duration":0.14733500000147615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","TimingData"],"fullName":"Types TimingData should support optional custom timings","status":"passed","title":"should support optional custom timings","duration":0.07263699999748496,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should maintain consistency between types","status":"passed","title":"should maintain consistency between types","duration":0.10056700000131968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Types","Type relationships"],"fullName":"Types Type relationships should allow arrays of events in turn results","status":"passed","title":"should allow arrays of events in turn results","duration":0.6434049999952549,"failureMessages":[],"meta":{}}],"startTime":1755574707986,"endTime":1755574707993.6433,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Vocabulary Structure Test"],"fullName":"Vocabulary Structure Test should check verb structure from language provider","status":"passed","title":"should check verb structure from language provider","duration":1.901198999999906,"failureMessages":[],"meta":{}}],"startTime":1755574746141,"endTime":1755574746142.9011,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/verb-structure.test.ts"},{"assertionResults":[{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track successful commands in history","status":"passed","title":"should track successful commands in history","duration":23.35883100000501,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track failed commands","status":"skipped","title":"should not track failed commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track multiple commands in order","status":"skipped","title":"should track multiple commands in order","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should track complex commands with objects and prepositions","status":"skipped","title":"should track complex commands with objects and prepositions","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should not track non-repeatable commands","status":"skipped","title":"should not track non-repeatable commands","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should respect maxEntries limit","status":"skipped","title":"should respect maxEntries limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN command by repeating last command","status":"passed","title":"should handle AGAIN command by repeating last command","duration":9.616674000004423,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History Tracking"],"fullName":"Command History Integration Command History Tracking should handle AGAIN with no history","status":"skipped","title":"should handle AGAIN with no history","failureMessages":[],"meta":{}},{"ancestorTitles":["Command History Integration","Command History with Capabilities Not Registered"],"fullName":"Command History Integration Command History with Capabilities Not Registered should gracefully handle missing command history capability","status":"skipped","title":"should gracefully handle missing command history capability","failureMessages":[],"meta":{}}],"startTime":1755574756333,"endTime":1755574756365.6167,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/command-history.test.ts"},{"assertionResults":[{"ancestorTitles":["Event Handler System (Integration)","Entity-level handlers"],"fullName":"Event Handler System (Integration) Entity-level handlers should allow entities to define event handlers","status":"passed","title":"should allow entities to define event handlers","duration":2.2943450000020675,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Entity-level handlers"],"fullName":"Event Handler System (Integration) Entity-level handlers should handle multiple entities with different handlers","status":"passed","title":"should handle multiple entities with different handlers","duration":0.4825280000004568,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Story-level handlers"],"fullName":"Event Handler System (Integration) Story-level handlers should allow stories to register event handlers","status":"passed","title":"should allow stories to register event handlers","duration":0.2638440000009723,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Story-level handlers"],"fullName":"Event Handler System (Integration) Story-level handlers should support complex multi-entity interactions","status":"passed","title":"should support complex multi-entity interactions","duration":0.3702870000015537,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event Handler System (Integration)","Handler composition"],"fullName":"Event Handler System (Integration) Handler composition should allow both entity and story handlers to fire","status":"passed","title":"should allow both entity and story handlers to fire","duration":0.5814729999983683,"failureMessages":[],"meta":{}}],"startTime":1755574734148,"endTime":1755574734151.5815,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/event-handlers.test.ts"},{"assertionResults":[{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit client.query event when quit is executed","status":"passed","title":"should emit client.query event when quit is executed","duration":19.099350999997114,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit platform.quit_requested event","status":"passed","title":"should emit platform.quit_requested event","duration":6.764094999991357,"failureMessages":[],"meta":{}},{"ancestorTitles":["Query Event Emission"],"fullName":"Query Event Emission should emit if.event.quit_requested event","status":"passed","title":"should emit if.event.quit_requested event","duration":9.294599999993807,"failureMessages":[],"meta":{}}],"startTime":1755574756262,"endTime":1755574756297.2947,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-events.test.ts"},{"assertionResults":[{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should emit client.query event when quit action executes","status":"skipped","title":"should emit client.query event when quit action executes","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should intercept input when query is pending","status":"skipped","title":"should intercept input when query is pending","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle quit cancellation","status":"skipped","title":"should handle quit cancellation","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should handle invalid query responses","status":"skipped","title":"should handle invalid query responses","failureMessages":[],"meta":{}},{"ancestorTitles":["Query System Integration - MOVED TO PLATFORM LAYER"],"fullName":"Query System Integration - MOVED TO PLATFORM LAYER should allow command interruption when configured","status":"skipped","title":"should allow command interruption when configured","failureMessages":[],"meta":{}}],"startTime":1755574669132,"endTime":1755574669132,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/integration/query-system.test.ts"},{"assertionResults":[{"ancestorTitles":["EventEmitter","on()"],"fullName":"EventEmitter on() should register a handler for an event type","status":"passed","title":"should register a handler for an event type","duration":1.0789829999994254,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","on()"],"fullName":"EventEmitter on() should allow multiple handlers for the same event","status":"passed","title":"should allow multiple handlers for the same event","duration":0.16440399999919464,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","off()"],"fullName":"EventEmitter off() should remove a specific handler","status":"passed","title":"should remove a specific handler","duration":0.12631099999998696,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","off()"],"fullName":"EventEmitter off() should handle removing non-existent handler gracefully","status":"passed","title":"should handle removing non-existent handler gracefully","duration":0.577965000000404,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should call all registered handlers","status":"passed","title":"should call all registered handlers","duration":0.21308499999940977,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should collect semantic events from handlers","status":"passed","title":"should collect semantic events from handlers","duration":0.6616719999983616,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","emit()"],"fullName":"EventEmitter emit() should handle handlers that return void","status":"passed","title":"should handle handlers that return void","duration":0.16829100000177277,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","clear()"],"fullName":"EventEmitter clear() should clear all handlers for a specific event type","status":"passed","title":"should clear all handlers for a specific event type","duration":0.14307400000325288,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","clear()"],"fullName":"EventEmitter clear() should clear all handlers when no event type specified","status":"passed","title":"should clear all handlers when no event type specified","duration":0.2072970000008354,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","listenerCount()"],"fullName":"EventEmitter listenerCount() should return 0 for unregistered events","status":"passed","title":"should return 0 for unregistered events","duration":0.08459099999890896,"failureMessages":[],"meta":{}},{"ancestorTitles":["EventEmitter","listenerCount()"],"fullName":"EventEmitter listenerCount() should return correct count for registered events","status":"passed","title":"should return correct count for registered events","duration":0.062363000000914326,"failureMessages":[],"meta":{}}],"startTime":1755574729434,"endTime":1755574729438.2073,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/engine/tests/unit/events/event-emitter.test.ts"}]}