{"numTotalTestSuites":64,"numPassedTestSuites":64,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":120,"numPassedTests":120,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1754722074257,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Test Setup"],"fullName":"Test Setup should have tests configured","status":"passed","title":"should have tests configured","duration":1.2142350000003717,"failureMessages":[],"meta":{}}],"startTime":1754722080749,"endTime":1754722080750.2144,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/setup.test.ts"},{"assertionResults":[{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create a basic event with required fields","status":"passed","title":"should create a basic event with required fields","duration":3.0444189999998343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include entity information","status":"passed","title":"should include entity information","duration":0.3425010000000839,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include metadata","status":"passed","title":"should include metadata","duration":0.30679500000042026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle empty payload","status":"passed","title":"should handle empty payload","duration":0.24371499999961088,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate unique IDs","status":"passed","title":"should generate unique IDs","duration":0.3081019999999626,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate increasing timestamps","status":"passed","title":"should generate increasing timestamps","duration":11.222547999999733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle complex payloads","status":"passed","title":"should handle complex payloads","duration":0.32986299999993207,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set narrate flag from metadata","status":"passed","title":"should set narrate flag from metadata","duration":0.2555050000000847,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set tags from metadata","status":"passed","title":"should set tags from metadata","duration":0.5831769999995231,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle all entity types","status":"passed","title":"should handle all entity types","duration":0.3810809999995399,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should support legacy data property","status":"passed","title":"should support legacy data property","duration":0.33462800000052084,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create events suitable for the semantic event source","status":"passed","title":"should create events suitable for the semantic event source","duration":0.26637599999958184,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Event ID Format"],"fullName":"Event System Helpers Event ID Format should follow expected ID pattern","status":"passed","title":"should follow expected ID pattern","duration":1.199430000000575,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard narrative events","status":"passed","title":"should create standard narrative events","duration":5.407114999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard error events","status":"passed","title":"should create standard error events","duration":3.5931999999993423,"failureMessages":[],"meta":{}}],"startTime":1754722080614,"endTime":1754722080642.5933,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/event-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Platform Events","Event Types"],"fullName":"Platform Events Event Types should have all required event types","status":"passed","title":"should have all required event types","duration":1.371132000000216,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform events","status":"passed","title":"should identify platform events","duration":0.2945079999999507,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform request events","status":"passed","title":"should identify platform request events","duration":0.19259400000009919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform completion events","status":"passed","title":"should identify platform completion events","duration":0.19448499999998603,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save requested event with context","status":"passed","title":"should create save requested event with context","duration":0.438666000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save completed event","status":"passed","title":"should create save completed event","duration":0.18902799999978015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save failed event with error","status":"passed","title":"should create save failed event with error","duration":0.11076300000058836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore requested event with context","status":"passed","title":"should create restore requested event with context","duration":0.16528999999991356,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore completed event","status":"passed","title":"should create restore completed event","duration":0.2701310000002195,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore failed event","status":"passed","title":"should create restore failed event","duration":0.1914969999997993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit requested event with context","status":"passed","title":"should create quit requested event with context","duration":0.14072099999975762,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit confirmed event","status":"passed","title":"should create quit confirmed event","duration":0.09624299999995856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit cancelled event","status":"passed","title":"should create quit cancelled event","duration":0.07665999999971973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart requested event with context","status":"passed","title":"should create restart requested event with context","duration":0.10779900000034104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart completed event","status":"passed","title":"should create restart completed event","duration":0.07510000000002037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart cancelled event","status":"passed","title":"should create restart cancelled event","duration":0.0576840000003358,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should create platform event with custom data","status":"passed","title":"should create platform event with custom data","duration":0.23434900000029302,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should generate unique event IDs","status":"passed","title":"should generate unique event IDs","duration":0.36714500000016415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should include timestamp","status":"passed","title":"should include timestamp","duration":0.15203699999983655,"failureMessages":[],"meta":{}}],"startTime":1754722080626,"endTime":1754722080631.152,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/platform-events.test.ts"},{"assertionResults":[{"ancestorTitles":["SemanticEventSource","Event Storage"],"fullName":"SemanticEventSource Event Storage should store and retrieve events","status":"passed","title":"should store and retrieve events","duration":2.8835280000002967,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Storage"],"fullName":"SemanticEventSource Event Storage should clear all events","status":"passed","title":"should clear all events","duration":0.44500500000049215,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should filter events by type","status":"passed","title":"should filter events by type","duration":0.40606000000025233,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should filter events by entity","status":"passed","title":"should filter events by entity","duration":0.6944910000001983,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should filter events by tag","status":"passed","title":"should filter events by tag","duration":0.48140999999941414,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should support custom filters","status":"passed","title":"should support custom filters","duration":0.6372099999998682,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Emission"],"fullName":"SemanticEventSource Event Emission should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":0.3337600000004386,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Emission"],"fullName":"SemanticEventSource Event Emission should support EventEmitter interface","status":"passed","title":"should support EventEmitter interface","duration":0.6569300000001022,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Emission"],"fullName":"SemanticEventSource Event Emission should handle emitter unsubscribe","status":"passed","title":"should handle emitter unsubscribe","duration":0.4607270000005883,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Processing"],"fullName":"SemanticEventSource Event Processing should track unprocessed events","status":"passed","title":"should track unprocessed events","duration":0.40803800000048795,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Processing"],"fullName":"SemanticEventSource Event Processing should get events since a specific event","status":"passed","title":"should get events since a specific event","duration":0.45673900000019785,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Entity Relationships"],"fullName":"SemanticEventSource Entity Relationships should find events by any entity role","status":"passed","title":"should find events by any entity role","duration":1.1749149999996007,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Error Handling"],"fullName":"SemanticEventSource Error Handling should handle errors in event emitter listeners","status":"passed","title":"should handle errors in event emitter listeners","duration":3.603262000000541,"failureMessages":[],"meta":{}}],"startTime":1754722081197,"endTime":1754722081210.6033,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/semantic-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":2.1731399999998757,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should support multiple subscribers","status":"passed","title":"should support multiple subscribers","duration":0.2815390000005209,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should return working unsubscribe function","status":"passed","title":"should return working unsubscribe function","duration":0.18455100000028324,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Error Handling"],"fullName":"SimpleEventSource Error Handling should handle errors in subscribers gracefully","status":"passed","title":"should handle errors in subscribers gracefully","duration":3.1450660000000425,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should track subscriber count","status":"passed","title":"should track subscriber count","duration":0.39433699999972305,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should clear all subscribers","status":"passed","title":"should clear all subscribers","duration":0.22975399999995716,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Factory Function"],"fullName":"SimpleEventSource Factory Function should create event source via factory","status":"passed","title":"should create event source via factory","duration":0.45489200000065466,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle unsubscribe called multiple times","status":"passed","title":"should handle unsubscribe called multiple times","duration":0.11460499999975582,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle subscriber that modifies handler list during emit","status":"passed","title":"should handle subscriber that modifies handler list during emit","duration":0.5668759999998656,"failureMessages":[],"meta":{}}],"startTime":1754722081198,"endTime":1754722081206.567,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/simple-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should define correct debug event structure","status":"passed","title":"should define correct debug event structure","duration":2.9769229999992604,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should support all subsystem types","status":"passed","title":"should support all subsystem types","duration":0.44548199999917415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should define debug context with optional emit","status":"passed","title":"should define debug context with optional emit","duration":0.4969249999994645,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should support debug callback","status":"passed","title":"should support debug callback","duration":0.937155999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should handle disabled context","status":"passed","title":"should handle disabled context","duration":1.3298409999997602,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define parser debug event types","status":"passed","title":"should define parser debug event types","duration":0.3633749999999054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define validator debug event types","status":"passed","title":"should define validator debug event types","duration":0.20832899999913934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define executor debug event types","status":"passed","title":"should define executor debug event types","duration":0.350481999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define world model debug event types","status":"passed","title":"should define world model debug event types","duration":0.34912900000017544,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define text service debug event types","status":"passed","title":"should define text service debug event types","duration":0.17505900000014663,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support parser debug flow","status":"passed","title":"should support parser debug flow","duration":0.4600410000002739,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support collecting debug events from multiple subsystems","status":"passed","title":"should support collecting debug events from multiple subsystems","duration":0.5779069999998683,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should generate debug event IDs","status":"passed","title":"should generate debug event IDs","duration":0.5639659999997093,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should enforce subsystem types","status":"passed","title":"should enforce subsystem types","duration":0.9559420000005048,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should allow any data type","status":"passed","title":"should allow any data type","duration":0.4937870000003386,"failureMessages":[],"meta":{}}],"startTime":1754722081047,"endTime":1754722081059.494,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/debug/types.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleRuleSystem","Rule Management"],"fullName":"SimpleRuleSystem Rule Management should add and retrieve rules","status":"passed","title":"should add and retrieve rules","duration":2.729515999999421,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Management"],"fullName":"SimpleRuleSystem Rule Management should remove rules","status":"passed","title":"should remove rules","duration":0.4590379999999641,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Management"],"fullName":"SimpleRuleSystem Rule Management should handle removing non-existent rules","status":"passed","title":"should handle removing non-existent rules","duration":0.629214999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Matching"],"fullName":"SimpleRuleSystem Event Matching should match rules by exact event type","status":"passed","title":"should match rules by exact event type","duration":0.930899999999383,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Matching"],"fullName":"SimpleRuleSystem Event Matching should handle wildcard rules (*)","status":"passed","title":"should handle wildcard rules (*)","duration":0.6030489999993733,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Matching"],"fullName":"SimpleRuleSystem Event Matching should handle category wildcards (category:*)","status":"passed","title":"should handle category wildcards (category:*)","duration":0.5292310000004363,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Conditions"],"fullName":"SimpleRuleSystem Rule Conditions should evaluate conditions before running actions","status":"passed","title":"should evaluate conditions before running actions","duration":0.3325860000004468,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Conditions"],"fullName":"SimpleRuleSystem Rule Conditions should skip rules with false conditions","status":"passed","title":"should skip rules with false conditions","duration":0.23770100000001548,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Priority"],"fullName":"SimpleRuleSystem Rule Priority should execute rules in priority order (highest first)","status":"passed","title":"should execute rules in priority order (highest first)","duration":0.35809400000016467,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Prevention"],"fullName":"SimpleRuleSystem Event Prevention should stop processing when a rule prevents the event","status":"passed","title":"should stop processing when a rule prevents the event","duration":0.39772699999957695,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Prevention"],"fullName":"SimpleRuleSystem Event Prevention should use the first prevention message","status":"passed","title":"should use the first prevention message","duration":0.13001100000019505,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should collect events from multiple rules","status":"passed","title":"should collect events from multiple rules","duration":0.23683100000016566,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should create narrative events for messages","status":"passed","title":"should create narrative events for messages","duration":0.3837760000005801,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should apply entity changes","status":"passed","title":"should apply entity changes","duration":0.15084300000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should handle multiple entity changes","status":"passed","title":"should handle multiple entity changes","duration":0.11507400000027701,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Complex Scenarios"],"fullName":"SimpleRuleSystem Complex Scenarios should handle heavy item prevention","status":"passed","title":"should handle heavy item prevention","duration":0.2035729999997784,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Complex Scenarios"],"fullName":"SimpleRuleSystem Complex Scenarios should handle darkness rules","status":"passed","title":"should handle darkness rules","duration":0.18226199999935488,"failureMessages":[],"meta":{}}],"startTime":1754722080846,"endTime":1754722080855.2036,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/rules/simple-rule-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should process events through rules and generate new events","status":"passed","title":"should process events through rules and generate new events","duration":3.8658949999999095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle rule chains where one event triggers another","status":"passed","title":"should handle rule chains where one event triggers another","duration":1.2158709999994244,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle complex rule interactions with priorities","status":"passed","title":"should handle complex rule interactions with priorities","duration":0.7076159999996889,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should accumulate events from rules in the event source","status":"passed","title":"should accumulate events from rules in the event source","duration":0.9899439999999231,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should allow querying events generated by rules","status":"passed","title":"should allow querying events generated by rules","duration":0.9109100000005128,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should handle narrative flow through events and rules","status":"passed","title":"should handle narrative flow through events and rules","duration":0.48153000000002066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.22204000000056112,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should continue processing when rules throw errors","status":"passed","title":"should continue processing when rules throw errors","duration":3.6651099999999133,"failureMessages":[],"meta":{}}],"startTime":1754722081773,"endTime":1754722081785.665,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/integration/event-rule-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create success results","status":"passed","title":"should create success results","duration":1.5192019999994955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create failure results","status":"passed","title":"should create failure results","duration":0.2941419999997379,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should handle any value types","status":"passed","title":"should handle any value types","duration":0.4992000000002008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify success results","status":"passed","title":"should identify success results","duration":0.18248299999959272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify failure results","status":"passed","title":"should identify failure results","duration":0.1853559999999561,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should narrow types correctly","status":"passed","title":"should narrow types correctly","duration":0.11728399999992689,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should transform success values","status":"passed","title":"should transform success values","duration":0.1936470000000554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should pass through failures","status":"passed","title":"should pass through failures","duration":0.08431500000006054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should handle type transformations","status":"passed","title":"should handle type transformations","duration":0.32748999999967054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should transform error values","status":"passed","title":"should transform error values","duration":0.3460610000001907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should pass through successes","status":"passed","title":"should pass through successes","duration":0.2030139999997118,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should chain successful results","status":"passed","title":"should chain successful results","duration":0.15836300000046322,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should propagate failures","status":"passed","title":"should propagate failures","duration":0.08238799999980984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should handle chained failures","status":"passed","title":"should handle chained failures","duration":0.0998040000004039,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should allow complex chains","status":"passed","title":"should allow complex chains","duration":0.14370700000017678,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should return value for success","status":"passed","title":"should return value for success","duration":0.12950799999998708,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw error for failure","status":"passed","title":"should throw error for failure","duration":0.255844999999681,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw non-Error failures","status":"passed","title":"should throw non-Error failures","duration":0.5850789999994959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return value for success","status":"passed","title":"should return value for success","duration":0.11228500000015629,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return default for failure","status":"passed","title":"should return default for failure","duration":0.10229399999934685,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should handle different types","status":"passed","title":"should handle different types","duration":0.08631700000023557,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for parsing operations","status":"passed","title":"should work for parsing operations","duration":0.18432000000029802,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for validation chains","status":"passed","title":"should work for validation chains","duration":0.20389000000068336,"failureMessages":[],"meta":{}}],"startTime":1754722080430,"endTime":1754722080437.2039,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/types/result.test.ts"}]}