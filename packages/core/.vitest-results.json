{"numTotalTestSuites":64,"numPassedTestSuites":64,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":120,"numPassedTests":120,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755052505131,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Test Setup"],"fullName":"Test Setup should have tests configured","status":"passed","title":"should have tests configured","duration":0.81919199999993,"failureMessages":[],"meta":{}}],"startTime":1755052510837,"endTime":1755052510837.819,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/setup.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should define correct debug event structure","status":"passed","title":"should define correct debug event structure","duration":1.634950000000572,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should support all subsystem types","status":"passed","title":"should support all subsystem types","duration":0.2502519999998185,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should define debug context with optional emit","status":"passed","title":"should define debug context with optional emit","duration":0.20858399999997346,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should support debug callback","status":"passed","title":"should support debug callback","duration":0.6381799999999203,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should handle disabled context","status":"passed","title":"should handle disabled context","duration":0.7112669999996797,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define parser debug event types","status":"passed","title":"should define parser debug event types","duration":0.17363699999987148,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define validator debug event types","status":"passed","title":"should define validator debug event types","duration":0.085613000000194,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define executor debug event types","status":"passed","title":"should define executor debug event types","duration":0.19499200000063865,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define world model debug event types","status":"passed","title":"should define world model debug event types","duration":0.2416929999999411,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define text service debug event types","status":"passed","title":"should define text service debug event types","duration":0.14355200000045443,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support parser debug flow","status":"passed","title":"should support parser debug flow","duration":0.3071960000006584,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support collecting debug events from multiple subsystems","status":"passed","title":"should support collecting debug events from multiple subsystems","duration":0.32166700000016135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should generate debug event IDs","status":"passed","title":"should generate debug event IDs","duration":0.7766430000001492,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should enforce subsystem types","status":"passed","title":"should enforce subsystem types","duration":0.2369989999997415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should allow any data type","status":"passed","title":"should allow any data type","duration":0.20533699999941746,"failureMessages":[],"meta":{}}],"startTime":1755052510774,"endTime":1755052510780.237,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/debug/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create a basic event with required fields","status":"passed","title":"should create a basic event with required fields","duration":2.1672719999996843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include entity information","status":"passed","title":"should include entity information","duration":0.1928120000002309,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include metadata","status":"passed","title":"should include metadata","duration":0.2299910000001546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle empty payload","status":"passed","title":"should handle empty payload","duration":0.14352899999994406,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate unique IDs","status":"passed","title":"should generate unique IDs","duration":0.29705100000046514,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate increasing timestamps","status":"passed","title":"should generate increasing timestamps","duration":9.733295999999427,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle complex payloads","status":"passed","title":"should handle complex payloads","duration":0.1474980000002688,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set narrate flag from metadata","status":"passed","title":"should set narrate flag from metadata","duration":0.07861899999988964,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set tags from metadata","status":"passed","title":"should set tags from metadata","duration":0.24585799999931623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle all entity types","status":"passed","title":"should handle all entity types","duration":0.1194709999999759,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should support legacy data property","status":"passed","title":"should support legacy data property","duration":0.19876000000022032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create events suitable for the semantic event source","status":"passed","title":"should create events suitable for the semantic event source","duration":0.15047099999992497,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Event ID Format"],"fullName":"Event System Helpers Event ID Format should follow expected ID pattern","status":"passed","title":"should follow expected ID pattern","duration":0.7554020000006858,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard narrative events","status":"passed","title":"should create standard narrative events","duration":6.116071999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard error events","status":"passed","title":"should create standard error events","duration":1.8127860000004148,"failureMessages":[],"meta":{}}],"startTime":1755052510571,"endTime":1755052510593.8127,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/event-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Platform Events","Event Types"],"fullName":"Platform Events Event Types should have all required event types","status":"passed","title":"should have all required event types","duration":1.46478500000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform events","status":"passed","title":"should identify platform events","duration":0.27874599999995553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform request events","status":"passed","title":"should identify platform request events","duration":0.15417499999966822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform completion events","status":"passed","title":"should identify platform completion events","duration":0.20637000000078842,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save requested event with context","status":"passed","title":"should create save requested event with context","duration":0.4382470000000467,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save completed event","status":"passed","title":"should create save completed event","duration":0.1572839999998905,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save failed event with error","status":"passed","title":"should create save failed event with error","duration":0.09950599999956466,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore requested event with context","status":"passed","title":"should create restore requested event with context","duration":0.1474689999995462,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore completed event","status":"passed","title":"should create restore completed event","duration":0.20283000000017637,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore failed event","status":"passed","title":"should create restore failed event","duration":0.12136099999952421,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit requested event with context","status":"passed","title":"should create quit requested event with context","duration":0.15278200000011566,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit confirmed event","status":"passed","title":"should create quit confirmed event","duration":0.08697200000005978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit cancelled event","status":"passed","title":"should create quit cancelled event","duration":0.06829099999958999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart requested event with context","status":"passed","title":"should create restart requested event with context","duration":0.1091710000000603,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart completed event","status":"passed","title":"should create restart completed event","duration":0.0843300000005911,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart cancelled event","status":"passed","title":"should create restart cancelled event","duration":0.06364800000028481,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should create platform event with custom data","status":"passed","title":"should create platform event with custom data","duration":0.3026660000004995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should generate unique event IDs","status":"passed","title":"should generate unique event IDs","duration":0.2741470000000845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should include timestamp","status":"passed","title":"should include timestamp","duration":0.1371690000005401,"failureMessages":[],"meta":{}}],"startTime":1755052510571,"endTime":1755052510576.2742,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/platform-events.test.ts"},{"assertionResults":[{"ancestorTitles":["SemanticEventSource","Event Storage"],"fullName":"SemanticEventSource Event Storage should store and retrieve events","status":"passed","title":"should store and retrieve events","duration":1.947269000000233,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Storage"],"fullName":"SemanticEventSource Event Storage should clear all events","status":"passed","title":"should clear all events","duration":0.2978720000000976,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should filter events by type","status":"passed","title":"should filter events by type","duration":0.29964399999971647,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should filter events by entity","status":"passed","title":"should filter events by entity","duration":0.41179000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should filter events by tag","status":"passed","title":"should filter events by tag","duration":0.24874499999987165,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Queries"],"fullName":"SemanticEventSource Event Queries should support custom filters","status":"passed","title":"should support custom filters","duration":0.31868800000029296,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Emission"],"fullName":"SemanticEventSource Event Emission should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":0.15406399999938003,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Emission"],"fullName":"SemanticEventSource Event Emission should support EventEmitter interface","status":"passed","title":"should support EventEmitter interface","duration":0.6338729999997668,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Emission"],"fullName":"SemanticEventSource Event Emission should handle emitter unsubscribe","status":"passed","title":"should handle emitter unsubscribe","duration":0.6686370000006718,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Processing"],"fullName":"SemanticEventSource Event Processing should track unprocessed events","status":"passed","title":"should track unprocessed events","duration":0.4657840000008946,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Event Processing"],"fullName":"SemanticEventSource Event Processing should get events since a specific event","status":"passed","title":"should get events since a specific event","duration":0.6524890000000596,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Entity Relationships"],"fullName":"SemanticEventSource Entity Relationships should find events by any entity role","status":"passed","title":"should find events by any entity role","duration":0.7755709999992177,"failureMessages":[],"meta":{}},{"ancestorTitles":["SemanticEventSource","Error Handling"],"fullName":"SemanticEventSource Error Handling should handle errors in event emitter listeners","status":"passed","title":"should handle errors in event emitter listeners","duration":2.553703999999925,"failureMessages":[],"meta":{}}],"startTime":1755052510979,"endTime":1755052510989.5537,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/semantic-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":2.9325580000004265,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should support multiple subscribers","status":"passed","title":"should support multiple subscribers","duration":0.2778630000002522,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should return working unsubscribe function","status":"passed","title":"should return working unsubscribe function","duration":0.17593699999997625,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Error Handling"],"fullName":"SimpleEventSource Error Handling should handle errors in subscribers gracefully","status":"passed","title":"should handle errors in subscribers gracefully","duration":2.1938960000006773,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should track subscriber count","status":"passed","title":"should track subscriber count","duration":0.3398170000000391,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should clear all subscribers","status":"passed","title":"should clear all subscribers","duration":0.1931109999995897,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Factory Function"],"fullName":"SimpleEventSource Factory Function should create event source via factory","status":"passed","title":"should create event source via factory","duration":0.39271999999982654,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle unsubscribe called multiple times","status":"passed","title":"should handle unsubscribe called multiple times","duration":0.0964060000005702,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle subscriber that modifies handler list during emit","status":"passed","title":"should handle subscriber that modifies handler list during emit","duration":0.3975989999999001,"failureMessages":[],"meta":{}}],"startTime":1755052510943,"endTime":1755052510950.3977,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/simple-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should process events through rules and generate new events","status":"passed","title":"should process events through rules and generate new events","duration":2.1199420000002647,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle rule chains where one event triggers another","status":"passed","title":"should handle rule chains where one event triggers another","duration":0.853505000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle complex rule interactions with priorities","status":"passed","title":"should handle complex rule interactions with priorities","duration":0.3245740000002115,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should accumulate events from rules in the event source","status":"passed","title":"should accumulate events from rules in the event source","duration":0.4143160000003263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should allow querying events generated by rules","status":"passed","title":"should allow querying events generated by rules","duration":0.4851250000001528,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should handle narrative flow through events and rules","status":"passed","title":"should handle narrative flow through events and rules","duration":0.4024020000006203,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.1596319999998741,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should continue processing when rules throw errors","status":"passed","title":"should continue processing when rules throw errors","duration":1.660558999999921,"failureMessages":[],"meta":{}}],"startTime":1755052511776,"endTime":1755052511782.6606,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/integration/event-rule-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleRuleSystem","Rule Management"],"fullName":"SimpleRuleSystem Rule Management should add and retrieve rules","status":"passed","title":"should add and retrieve rules","duration":1.9434970000002068,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Management"],"fullName":"SimpleRuleSystem Rule Management should remove rules","status":"passed","title":"should remove rules","duration":0.5164450000002034,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Management"],"fullName":"SimpleRuleSystem Rule Management should handle removing non-existent rules","status":"passed","title":"should handle removing non-existent rules","duration":0.7149919999992562,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Matching"],"fullName":"SimpleRuleSystem Event Matching should match rules by exact event type","status":"passed","title":"should match rules by exact event type","duration":0.9621130000004996,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Matching"],"fullName":"SimpleRuleSystem Event Matching should handle wildcard rules (*)","status":"passed","title":"should handle wildcard rules (*)","duration":0.3917490000003454,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Matching"],"fullName":"SimpleRuleSystem Event Matching should handle category wildcards (category:*)","status":"passed","title":"should handle category wildcards (category:*)","duration":0.8086429999993925,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Conditions"],"fullName":"SimpleRuleSystem Rule Conditions should evaluate conditions before running actions","status":"passed","title":"should evaluate conditions before running actions","duration":0.4665020000002187,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Conditions"],"fullName":"SimpleRuleSystem Rule Conditions should skip rules with false conditions","status":"passed","title":"should skip rules with false conditions","duration":0.3349789999992936,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Rule Priority"],"fullName":"SimpleRuleSystem Rule Priority should execute rules in priority order (highest first)","status":"passed","title":"should execute rules in priority order (highest first)","duration":0.37097799999992276,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Prevention"],"fullName":"SimpleRuleSystem Event Prevention should stop processing when a rule prevents the event","status":"passed","title":"should stop processing when a rule prevents the event","duration":0.4079460000002655,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Event Prevention"],"fullName":"SimpleRuleSystem Event Prevention should use the first prevention message","status":"passed","title":"should use the first prevention message","duration":0.180170999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should collect events from multiple rules","status":"passed","title":"should collect events from multiple rules","duration":0.2903580000001966,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should create narrative events for messages","status":"passed","title":"should create narrative events for messages","duration":0.5037969999993948,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should apply entity changes","status":"passed","title":"should apply entity changes","duration":0.22318999999970401,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Result Aggregation"],"fullName":"SimpleRuleSystem Result Aggregation should handle multiple entity changes","status":"passed","title":"should handle multiple entity changes","duration":0.1282099999998536,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Complex Scenarios"],"fullName":"SimpleRuleSystem Complex Scenarios should handle heavy item prevention","status":"passed","title":"should handle heavy item prevention","duration":0.31847000000016124,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleRuleSystem","Complex Scenarios"],"fullName":"SimpleRuleSystem Complex Scenarios should handle darkness rules","status":"passed","title":"should handle darkness rules","duration":0.2504140000000916,"failureMessages":[],"meta":{}}],"startTime":1755052510744,"endTime":1755052510753.3184,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/rules/simple-rule-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create success results","status":"passed","title":"should create success results","duration":1.4644900000002963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create failure results","status":"passed","title":"should create failure results","duration":0.3720819999998639,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should handle any value types","status":"passed","title":"should handle any value types","duration":0.8109810000005382,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify success results","status":"passed","title":"should identify success results","duration":0.32657299999937095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify failure results","status":"passed","title":"should identify failure results","duration":0.2608430000000226,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should narrow types correctly","status":"passed","title":"should narrow types correctly","duration":0.2016830000002301,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should transform success values","status":"passed","title":"should transform success values","duration":0.14692600000034872,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should pass through failures","status":"passed","title":"should pass through failures","duration":0.11721699999998236,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should handle type transformations","status":"passed","title":"should handle type transformations","duration":0.22333699999944656,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should transform error values","status":"passed","title":"should transform error values","duration":0.29453599999942526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should pass through successes","status":"passed","title":"should pass through successes","duration":0.12552800000048592,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should chain successful results","status":"passed","title":"should chain successful results","duration":0.1342160000003787,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should propagate failures","status":"passed","title":"should propagate failures","duration":0.07189199999993434,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should handle chained failures","status":"passed","title":"should handle chained failures","duration":0.10786599999937607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should allow complex chains","status":"passed","title":"should allow complex chains","duration":0.11582100000032369,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should return value for success","status":"passed","title":"should return value for success","duration":0.12969499999962864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw error for failure","status":"passed","title":"should throw error for failure","duration":0.5232949999999619,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw non-Error failures","status":"passed","title":"should throw non-Error failures","duration":0.5876370000005409,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return value for success","status":"passed","title":"should return value for success","duration":0.10489700000016455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return default for failure","status":"passed","title":"should return default for failure","duration":0.09147199999915756,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should handle different types","status":"passed","title":"should handle different types","duration":0.09875999999985652,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for parsing operations","status":"passed","title":"should work for parsing operations","duration":0.22627899999952206,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for validation chains","status":"passed","title":"should work for validation chains","duration":0.206079999999929,"failureMessages":[],"meta":{}}],"startTime":1755052510417,"endTime":1755052510425.2263,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/types/result.test.ts"}]}