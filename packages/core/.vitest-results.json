{"numTotalTestSuites":64,"numPassedTestSuites":64,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":120,"numPassedTests":120,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755484785655,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Test Setup"],"fullName":"Test Setup should have tests configured","status":"passed","title":"should have tests configured","duration":0.8612169999996695,"failureMessages":[],"meta":{}}],"startTime":1755484791929,"endTime":1755484791929.8613,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/setup.test.ts"},{"assertionResults":[{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create a basic event with required fields","status":"passed","title":"should create a basic event with required fields","duration":2.1770550000001094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include entity information","status":"passed","title":"should include entity information","duration":0.35631000000012136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include metadata","status":"passed","title":"should include metadata","duration":0.2764769999994314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle empty payload","status":"passed","title":"should handle empty payload","duration":0.23660900000049878,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate unique IDs","status":"passed","title":"should generate unique IDs","duration":0.3772100000005594,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate increasing timestamps","status":"passed","title":"should generate increasing timestamps","duration":11.287334999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle complex payloads","status":"passed","title":"should handle complex payloads","duration":0.2435990000003585,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set narrate flag from metadata","status":"passed","title":"should set narrate flag from metadata","duration":0.1258239999997386,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set tags from metadata","status":"passed","title":"should set tags from metadata","duration":0.3855539999995017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle all entity types","status":"passed","title":"should handle all entity types","duration":0.229432000000088,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should support legacy data property","status":"passed","title":"should support legacy data property","duration":0.8179239999999481,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create events suitable for the semantic event source","status":"passed","title":"should create events suitable for the semantic event source","duration":0.42487400000027264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Event ID Format"],"fullName":"Event System Helpers Event ID Format should follow expected ID pattern","status":"passed","title":"should follow expected ID pattern","duration":1.574717000000419,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard narrative events","status":"passed","title":"should create standard narrative events","duration":11.265287000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard error events","status":"passed","title":"should create standard error events","duration":2.877303000000211,"failureMessages":[],"meta":{}}],"startTime":1755484791055,"endTime":1755484791088.8772,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/event-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Platform Events","Event Types"],"fullName":"Platform Events Event Types should have all required event types","status":"passed","title":"should have all required event types","duration":1.4757190000000264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform events","status":"passed","title":"should identify platform events","duration":0.6084719999998924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform request events","status":"passed","title":"should identify platform request events","duration":0.7111799999993309,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform completion events","status":"passed","title":"should identify platform completion events","duration":0.6843529999996463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save requested event with context","status":"passed","title":"should create save requested event with context","duration":0.9785400000000664,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save completed event","status":"passed","title":"should create save completed event","duration":0.4234180000003107,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save failed event with error","status":"passed","title":"should create save failed event with error","duration":0.381626000000324,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore requested event with context","status":"passed","title":"should create restore requested event with context","duration":0.3795979999995325,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore completed event","status":"passed","title":"should create restore completed event","duration":0.36189399999966554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore failed event","status":"passed","title":"should create restore failed event","duration":0.277074999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit requested event with context","status":"passed","title":"should create quit requested event with context","duration":0.2640380000002551,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit confirmed event","status":"passed","title":"should create quit confirmed event","duration":0.23741999999947438,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit cancelled event","status":"passed","title":"should create quit cancelled event","duration":0.1694680000000517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart requested event with context","status":"passed","title":"should create restart requested event with context","duration":0.2586909999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart completed event","status":"passed","title":"should create restart completed event","duration":0.17159799999990355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart cancelled event","status":"passed","title":"should create restart cancelled event","duration":0.14072500000020227,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should create platform event with custom data","status":"passed","title":"should create platform event with custom data","duration":0.35895000000073196,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should generate unique event IDs","status":"passed","title":"should generate unique event IDs","duration":0.29807400000026973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should include timestamp","status":"passed","title":"should include timestamp","duration":0.1668679999993401,"failureMessages":[],"meta":{}}],"startTime":1755484791667,"endTime":1755484791677.1667,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/platform-events.test.ts"},{"assertionResults":[{"ancestorTitles":["ISemanticEventSource","Event Storage"],"fullName":"ISemanticEventSource Event Storage should store and retrieve events","status":"passed","title":"should store and retrieve events","duration":3.877195000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Storage"],"fullName":"ISemanticEventSource Event Storage should clear all events","status":"passed","title":"should clear all events","duration":0.5916480000005322,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by type","status":"passed","title":"should filter events by type","duration":0.5821200000000317,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by entity","status":"passed","title":"should filter events by entity","duration":1.2688369999996212,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by tag","status":"passed","title":"should filter events by tag","duration":1.5322439999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should support custom filters","status":"passed","title":"should support custom filters","duration":0.8885899999995672,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":0.34825199999977485,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should support EventEmitter interface","status":"passed","title":"should support EventEmitter interface","duration":0.65599900000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should handle emitter unsubscribe","status":"passed","title":"should handle emitter unsubscribe","duration":0.7373410000000149,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Processing"],"fullName":"ISemanticEventSource Event Processing should track unprocessed events","status":"passed","title":"should track unprocessed events","duration":0.49206200000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Processing"],"fullName":"ISemanticEventSource Event Processing should get events since a specific event","status":"passed","title":"should get events since a specific event","duration":0.6239969999996902,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Entity Relationships"],"fullName":"ISemanticEventSource Entity Relationships should find events by any entity role","status":"passed","title":"should find events by any entity role","duration":0.3643480000000636,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Error Handling"],"fullName":"ISemanticEventSource Error Handling should handle errors in event emitter listeners","status":"passed","title":"should handle errors in event emitter listeners","duration":4.037685999999667,"failureMessages":[],"meta":{}}],"startTime":1755484791637,"endTime":1755484791654.0376,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/semantic-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":3.3299120000001494,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should support multiple subscribers","status":"passed","title":"should support multiple subscribers","duration":0.9170079999994414,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should return working unsubscribe function","status":"passed","title":"should return working unsubscribe function","duration":0.5135799999998198,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Error Handling"],"fullName":"SimpleEventSource Error Handling should handle errors in subscribers gracefully","status":"passed","title":"should handle errors in subscribers gracefully","duration":4.637611000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should track subscriber count","status":"passed","title":"should track subscriber count","duration":0.45785999999952764,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should clear all subscribers","status":"passed","title":"should clear all subscribers","duration":0.2873219999992216,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Factory Function"],"fullName":"SimpleEventSource Factory Function should create event source via factory","status":"passed","title":"should create event source via factory","duration":0.5361839999995937,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle unsubscribe called multiple times","status":"passed","title":"should handle unsubscribe called multiple times","duration":0.19750900000053662,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle subscriber that modifies handler list during emit","status":"passed","title":"should handle subscriber that modifies handler list during emit","duration":0.6589930000000095,"failureMessages":[],"meta":{}}],"startTime":1755484791636,"endTime":1755484791648.659,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/simple-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should define correct debug event structure","status":"passed","title":"should define correct debug event structure","duration":1.4908199999999852,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should support all subsystem types","status":"passed","title":"should support all subsystem types","duration":0.2526869999992414,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should define debug context with optional emit","status":"passed","title":"should define debug context with optional emit","duration":0.19147100000009232,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should support debug callback","status":"passed","title":"should support debug callback","duration":0.6740769999996701,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should handle disabled context","status":"passed","title":"should handle disabled context","duration":0.7467659999992975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define parser debug event types","status":"passed","title":"should define parser debug event types","duration":0.1837550000000192,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define validator debug event types","status":"passed","title":"should define validator debug event types","duration":0.1042859999997745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define executor debug event types","status":"passed","title":"should define executor debug event types","duration":0.1589990000002217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define world model debug event types","status":"passed","title":"should define world model debug event types","duration":0.20192499999939173,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define text service debug event types","status":"passed","title":"should define text service debug event types","duration":0.11977699999988545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support parser debug flow","status":"passed","title":"should support parser debug flow","duration":0.2967719999996916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support collecting debug events from multiple subsystems","status":"passed","title":"should support collecting debug events from multiple subsystems","duration":0.24263599999994767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should generate debug event IDs","status":"passed","title":"should generate debug event IDs","duration":0.6374089999999342,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should enforce subsystem types","status":"passed","title":"should enforce subsystem types","duration":0.24264399999992747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should allow any data type","status":"passed","title":"should allow any data type","duration":0.20592300000043906,"failureMessages":[],"meta":{}}],"startTime":1755484791167,"endTime":1755484791174.2058,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/debug/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should process events through rules and generate new events","status":"passed","title":"should process events through rules and generate new events","duration":4.47739300000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle rule chains where one event triggers another","status":"passed","title":"should handle rule chains where one event triggers another","duration":1.3711230000008072,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle complex rule interactions with priorities","status":"passed","title":"should handle complex rule interactions with priorities","duration":0.8056010000000242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should accumulate events from rules in the event source","status":"passed","title":"should accumulate events from rules in the event source","duration":1.4011639999998806,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should allow querying events generated by rules","status":"passed","title":"should allow querying events generated by rules","duration":0.9925069999999323,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should handle narrative flow through events and rules","status":"passed","title":"should handle narrative flow through events and rules","duration":0.9685890000000654,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.39209200000004785,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should continue processing when rules throw errors","status":"passed","title":"should continue processing when rules throw errors","duration":4.497659999999996,"failureMessages":[],"meta":{}}],"startTime":1755484792335,"endTime":1755484792350.4976,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/integration/event-rule-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should add and retrieve rules","status":"passed","title":"should add and retrieve rules","duration":2.1314039999997476,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should remove rules","status":"passed","title":"should remove rules","duration":0.45317100000011123,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should handle removing non-existent rules","status":"passed","title":"should handle removing non-existent rules","duration":0.6558020000002216,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should match rules by exact event type","status":"passed","title":"should match rules by exact event type","duration":1.025579000000107,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should handle wildcard rules (*)","status":"passed","title":"should handle wildcard rules (*)","duration":0.5977339999999458,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should handle category wildcards (category:*)","status":"passed","title":"should handle category wildcards (category:*)","duration":0.6244589999996606,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Conditions"],"fullName":"ISimpleRuleSystem Rule Conditions should evaluate conditions before running actions","status":"passed","title":"should evaluate conditions before running actions","duration":0.6989620000003924,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Conditions"],"fullName":"ISimpleRuleSystem Rule Conditions should skip rules with false conditions","status":"passed","title":"should skip rules with false conditions","duration":0.41592899999977817,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Priority"],"fullName":"ISimpleRuleSystem Rule Priority should execute rules in priority order (highest first)","status":"passed","title":"should execute rules in priority order (highest first)","duration":0.4013549999999668,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Prevention"],"fullName":"ISimpleRuleSystem Event Prevention should stop processing when a rule prevents the event","status":"passed","title":"should stop processing when a rule prevents the event","duration":0.39022300000033283,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Prevention"],"fullName":"ISimpleRuleSystem Event Prevention should use the first prevention message","status":"passed","title":"should use the first prevention message","duration":0.1666220000006433,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should collect events from multiple rules","status":"passed","title":"should collect events from multiple rules","duration":0.4177820000004431,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should create narrative events for messages","status":"passed","title":"should create narrative events for messages","duration":1.0323749999997744,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should apply entity changes","status":"passed","title":"should apply entity changes","duration":0.34890900000027614,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should handle multiple entity changes","status":"passed","title":"should handle multiple entity changes","duration":0.1663010000002032,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Complex Scenarios"],"fullName":"ISimpleRuleSystem Complex Scenarios should handle heavy item prevention","status":"passed","title":"should handle heavy item prevention","duration":0.4888710000004721,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Complex Scenarios"],"fullName":"ISimpleRuleSystem Complex Scenarios should handle darkness rules","status":"passed","title":"should handle darkness rules","duration":0.35030599999936385,"failureMessages":[],"meta":{}}],"startTime":1755484791409,"endTime":1755484791421.3503,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/rules/simple-rule-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create success results","status":"passed","title":"should create success results","duration":2.2672990000000937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create failure results","status":"passed","title":"should create failure results","duration":0.36176400000022113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should handle any value types","status":"passed","title":"should handle any value types","duration":0.6029319999997824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify success results","status":"passed","title":"should identify success results","duration":0.2047069999998712,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify failure results","status":"passed","title":"should identify failure results","duration":0.19963999999981752,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should narrow types correctly","status":"passed","title":"should narrow types correctly","duration":0.14046399999915593,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should transform success values","status":"passed","title":"should transform success values","duration":0.2148830000005546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should pass through failures","status":"passed","title":"should pass through failures","duration":0.11807700000008481,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should handle type transformations","status":"passed","title":"should handle type transformations","duration":0.30399800000031973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should transform error values","status":"passed","title":"should transform error values","duration":0.459234999999353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should pass through successes","status":"passed","title":"should pass through successes","duration":0.2346320000006017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should chain successful results","status":"passed","title":"should chain successful results","duration":0.1442929999993794,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should propagate failures","status":"passed","title":"should propagate failures","duration":0.12081599999964965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should handle chained failures","status":"passed","title":"should handle chained failures","duration":0.09247899999991205,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should allow complex chains","status":"passed","title":"should allow complex chains","duration":0.28988899999967543,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should return value for success","status":"passed","title":"should return value for success","duration":0.13079199999992852,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw error for failure","status":"passed","title":"should throw error for failure","duration":0.23131399999965652,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw non-Error failures","status":"passed","title":"should throw non-Error failures","duration":0.5697489999993195,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return value for success","status":"passed","title":"should return value for success","duration":0.10930900000039401,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return default for failure","status":"passed","title":"should return default for failure","duration":0.12126099999932194,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should handle different types","status":"passed","title":"should handle different types","duration":0.09287900000072113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for parsing operations","status":"passed","title":"should work for parsing operations","duration":0.37362299999949755,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for validation chains","status":"passed","title":"should work for validation chains","duration":0.24881600000026083,"failureMessages":[],"meta":{}}],"startTime":1755484790780,"endTime":1755484790788.3735,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/types/result.test.ts"}]}