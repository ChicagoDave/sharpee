{"numTotalTestSuites":64,"numPassedTestSuites":64,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":120,"numPassedTests":120,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755567209062,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Test Setup"],"fullName":"Test Setup should have tests configured","status":"passed","title":"should have tests configured","duration":2.1536589999996067,"failureMessages":[],"meta":{}}],"startTime":1755567215893,"endTime":1755567215895.1536,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/setup.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should define correct debug event structure","status":"passed","title":"should define correct debug event structure","duration":1.5088370000003124,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should support all subsystem types","status":"passed","title":"should support all subsystem types","duration":0.27577500000006694,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should define debug context with optional emit","status":"passed","title":"should define debug context with optional emit","duration":0.32092499999998836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should support debug callback","status":"passed","title":"should support debug callback","duration":1.1694589999997334,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should handle disabled context","status":"passed","title":"should handle disabled context","duration":0.8707349999995131,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define parser debug event types","status":"passed","title":"should define parser debug event types","duration":0.1734919999998965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define validator debug event types","status":"passed","title":"should define validator debug event types","duration":0.08891500000027008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define executor debug event types","status":"passed","title":"should define executor debug event types","duration":0.13574900000003254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define world model debug event types","status":"passed","title":"should define world model debug event types","duration":0.22751900000002934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define text service debug event types","status":"passed","title":"should define text service debug event types","duration":0.11537499999940337,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support parser debug flow","status":"passed","title":"should support parser debug flow","duration":0.25532099999963975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support collecting debug events from multiple subsystems","status":"passed","title":"should support collecting debug events from multiple subsystems","duration":0.22635499999978492,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should generate debug event IDs","status":"passed","title":"should generate debug event IDs","duration":0.29434200000014243,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should enforce subsystem types","status":"passed","title":"should enforce subsystem types","duration":0.1391059999996287,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should allow any data type","status":"passed","title":"should allow any data type","duration":0.12968200000068464,"failureMessages":[],"meta":{}}],"startTime":1755567215397,"endTime":1755567215404.1296,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/debug/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create a basic event with required fields","status":"passed","title":"should create a basic event with required fields","duration":2.570850000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include entity information","status":"passed","title":"should include entity information","duration":0.2225559999997131,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include metadata","status":"passed","title":"should include metadata","duration":0.23095099999954982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle empty payload","status":"passed","title":"should handle empty payload","duration":0.17326700000012352,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate unique IDs","status":"passed","title":"should generate unique IDs","duration":0.3962579999997615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate increasing timestamps","status":"passed","title":"should generate increasing timestamps","duration":11.233290999999554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle complex payloads","status":"passed","title":"should handle complex payloads","duration":0.33385399999951915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set narrate flag from metadata","status":"passed","title":"should set narrate flag from metadata","duration":0.23100999999951455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set tags from metadata","status":"passed","title":"should set tags from metadata","duration":0.707564999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle all entity types","status":"passed","title":"should handle all entity types","duration":0.20577199999934237,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should support legacy data property","status":"passed","title":"should support legacy data property","duration":0.21569600000020728,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create events suitable for the semantic event source","status":"passed","title":"should create events suitable for the semantic event source","duration":0.18827799999962735,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Event ID Format"],"fullName":"Event System Helpers Event ID Format should follow expected ID pattern","status":"passed","title":"should follow expected ID pattern","duration":0.6973440000001574,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard narrative events","status":"passed","title":"should create standard narrative events","duration":288.76793199999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard error events","status":"passed","title":"should create standard error events","duration":1.0621830000000045,"failureMessages":[],"meta":{}}],"startTime":1755567215054,"endTime":1755567215362.0623,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/event-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Platform Events","Event Types"],"fullName":"Platform Events Event Types should have all required event types","status":"passed","title":"should have all required event types","duration":1.6141010000001188,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform events","status":"passed","title":"should identify platform events","duration":0.2221159999999145,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform request events","status":"passed","title":"should identify platform request events","duration":0.15553899999940768,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform completion events","status":"passed","title":"should identify platform completion events","duration":0.2235980000004929,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save requested event with context","status":"passed","title":"should create save requested event with context","duration":0.42358599999988655,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save completed event","status":"passed","title":"should create save completed event","duration":0.16602200000033918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save failed event with error","status":"passed","title":"should create save failed event with error","duration":0.10309099999994942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore requested event with context","status":"passed","title":"should create restore requested event with context","duration":0.14998500000001513,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore completed event","status":"passed","title":"should create restore completed event","duration":0.21000100000037492,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore failed event","status":"passed","title":"should create restore failed event","duration":0.11962099999982456,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit requested event with context","status":"passed","title":"should create quit requested event with context","duration":0.12319099999967875,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit confirmed event","status":"passed","title":"should create quit confirmed event","duration":0.07721499999934167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit cancelled event","status":"passed","title":"should create quit cancelled event","duration":0.07501300000058109,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart requested event with context","status":"passed","title":"should create restart requested event with context","duration":0.15264299999944342,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart completed event","status":"passed","title":"should create restart completed event","duration":0.13862299999982497,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart cancelled event","status":"passed","title":"should create restart cancelled event","duration":0.07525299999997515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should create platform event with custom data","status":"passed","title":"should create platform event with custom data","duration":0.2797280000004321,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should generate unique event IDs","status":"passed","title":"should generate unique event IDs","duration":0.34647900000072696,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should include timestamp","status":"passed","title":"should include timestamp","duration":0.28413000000000466,"failureMessages":[],"meta":{}}],"startTime":1755567215046,"endTime":1755567215052.2842,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/platform-events.test.ts"},{"assertionResults":[{"ancestorTitles":["ISemanticEventSource","Event Storage"],"fullName":"ISemanticEventSource Event Storage should store and retrieve events","status":"passed","title":"should store and retrieve events","duration":4.949556999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Storage"],"fullName":"ISemanticEventSource Event Storage should clear all events","status":"passed","title":"should clear all events","duration":0.6174140000002808,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by type","status":"passed","title":"should filter events by type","duration":0.7084679999998116,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by entity","status":"passed","title":"should filter events by entity","duration":0.9419660000003205,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by tag","status":"passed","title":"should filter events by tag","duration":0.48269100000015897,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should support custom filters","status":"passed","title":"should support custom filters","duration":0.556297000000086,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":0.33025500000076136,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should support EventEmitter interface","status":"passed","title":"should support EventEmitter interface","duration":0.4484790000005887,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should handle emitter unsubscribe","status":"passed","title":"should handle emitter unsubscribe","duration":0.4927449999995588,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Processing"],"fullName":"ISemanticEventSource Event Processing should track unprocessed events","status":"passed","title":"should track unprocessed events","duration":0.4939270000004399,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Processing"],"fullName":"ISemanticEventSource Event Processing should get events since a specific event","status":"passed","title":"should get events since a specific event","duration":0.5915720000002693,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Entity Relationships"],"fullName":"ISemanticEventSource Entity Relationships should find events by any entity role","status":"passed","title":"should find events by any entity role","duration":1.7726259999999456,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Error Handling"],"fullName":"ISemanticEventSource Error Handling should handle errors in event emitter listeners","status":"passed","title":"should handle errors in event emitter listeners","duration":8.105155999999624,"failureMessages":[],"meta":{}}],"startTime":1755567215924,"endTime":1755567215945.1052,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/semantic-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":5.244079000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should support multiple subscribers","status":"passed","title":"should support multiple subscribers","duration":1.359189000000697,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should return working unsubscribe function","status":"passed","title":"should return working unsubscribe function","duration":0.8902570000000196,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Error Handling"],"fullName":"SimpleEventSource Error Handling should handle errors in subscribers gracefully","status":"passed","title":"should handle errors in subscribers gracefully","duration":4.991221999999652,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should track subscriber count","status":"passed","title":"should track subscriber count","duration":0.69858000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should clear all subscribers","status":"passed","title":"should clear all subscribers","duration":0.4307330000001457,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Factory Function"],"fullName":"SimpleEventSource Factory Function should create event source via factory","status":"passed","title":"should create event source via factory","duration":1.3332699999991746,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle unsubscribe called multiple times","status":"passed","title":"should handle unsubscribe called multiple times","duration":0.911443999999392,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle subscriber that modifies handler list during emit","status":"passed","title":"should handle subscriber that modifies handler list during emit","duration":2.2540949999993245,"failureMessages":[],"meta":{}}],"startTime":1755567215923,"endTime":1755567215943.2542,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/simple-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should add and retrieve rules","status":"passed","title":"should add and retrieve rules","duration":2.0296390000003157,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should remove rules","status":"passed","title":"should remove rules","duration":0.4175519999998869,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should handle removing non-existent rules","status":"passed","title":"should handle removing non-existent rules","duration":0.5299960000002102,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should match rules by exact event type","status":"passed","title":"should match rules by exact event type","duration":0.6218830000007074,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should handle wildcard rules (*)","status":"passed","title":"should handle wildcard rules (*)","duration":0.22611899999992602,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should handle category wildcards (category:*)","status":"passed","title":"should handle category wildcards (category:*)","duration":0.29729200000019773,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Conditions"],"fullName":"ISimpleRuleSystem Rule Conditions should evaluate conditions before running actions","status":"passed","title":"should evaluate conditions before running actions","duration":0.30354000000079395,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Conditions"],"fullName":"ISimpleRuleSystem Rule Conditions should skip rules with false conditions","status":"passed","title":"should skip rules with false conditions","duration":0.21172800000022107,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Priority"],"fullName":"ISimpleRuleSystem Rule Priority should execute rules in priority order (highest first)","status":"passed","title":"should execute rules in priority order (highest first)","duration":0.27300300000024436,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Prevention"],"fullName":"ISimpleRuleSystem Event Prevention should stop processing when a rule prevents the event","status":"passed","title":"should stop processing when a rule prevents the event","duration":0.30389000000013766,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Prevention"],"fullName":"ISimpleRuleSystem Event Prevention should use the first prevention message","status":"passed","title":"should use the first prevention message","duration":0.1652139999996507,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should collect events from multiple rules","status":"passed","title":"should collect events from multiple rules","duration":0.24565500000062457,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should create narrative events for messages","status":"passed","title":"should create narrative events for messages","duration":0.4673079999993206,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should apply entity changes","status":"passed","title":"should apply entity changes","duration":0.1561759999995047,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should handle multiple entity changes","status":"passed","title":"should handle multiple entity changes","duration":0.16855600000053528,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Complex Scenarios"],"fullName":"ISimpleRuleSystem Complex Scenarios should handle heavy item prevention","status":"passed","title":"should handle heavy item prevention","duration":0.21287299999949028,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Complex Scenarios"],"fullName":"ISimpleRuleSystem Complex Scenarios should handle darkness rules","status":"passed","title":"should handle darkness rules","duration":0.19859899999937625,"failureMessages":[],"meta":{}}],"startTime":1755567216072,"endTime":1755567216079.213,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/rules/simple-rule-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create success results","status":"passed","title":"should create success results","duration":1.9084640000000945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create failure results","status":"passed","title":"should create failure results","duration":0.44121499999982916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should handle any value types","status":"passed","title":"should handle any value types","duration":0.6367769999997108,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify success results","status":"passed","title":"should identify success results","duration":0.2808549999999741,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify failure results","status":"passed","title":"should identify failure results","duration":0.2904229999994641,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should narrow types correctly","status":"passed","title":"should narrow types correctly","duration":0.172074000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should transform success values","status":"passed","title":"should transform success values","duration":0.2275900000004185,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should pass through failures","status":"passed","title":"should pass through failures","duration":0.09068899999965652,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should handle type transformations","status":"passed","title":"should handle type transformations","duration":0.2810989999998128,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should transform error values","status":"passed","title":"should transform error values","duration":0.390306999999666,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should pass through successes","status":"passed","title":"should pass through successes","duration":0.296252000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should chain successful results","status":"passed","title":"should chain successful results","duration":0.1650920000001861,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should propagate failures","status":"passed","title":"should propagate failures","duration":0.1412449999997989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should handle chained failures","status":"passed","title":"should handle chained failures","duration":0.11936599999989994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should allow complex chains","status":"passed","title":"should allow complex chains","duration":0.20733199999995122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should return value for success","status":"passed","title":"should return value for success","duration":0.2230490000001737,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw error for failure","status":"passed","title":"should throw error for failure","duration":0.635099000000082,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw non-Error failures","status":"passed","title":"should throw non-Error failures","duration":1.737224999999853,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return value for success","status":"passed","title":"should return value for success","duration":0.22349600000052305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return default for failure","status":"passed","title":"should return default for failure","duration":0.11120000000028085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should handle different types","status":"passed","title":"should handle different types","duration":0.08887799999956769,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for parsing operations","status":"passed","title":"should work for parsing operations","duration":0.5137139999997089,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for validation chains","status":"passed","title":"should work for validation chains","duration":0.31542000000081316,"failureMessages":[],"meta":{}}],"startTime":1755567214869,"endTime":1755567214880.3154,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/types/result.test.ts"},{"assertionResults":[{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should process events through rules and generate new events","status":"passed","title":"should process events through rules and generate new events","duration":2.241433999999572,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle rule chains where one event triggers another","status":"passed","title":"should handle rule chains where one event triggers another","duration":1.0231729999995878,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle complex rule interactions with priorities","status":"passed","title":"should handle complex rule interactions with priorities","duration":0.3597800000006828,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should accumulate events from rules in the event source","status":"passed","title":"should accumulate events from rules in the event source","duration":0.48097100000086357,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should allow querying events generated by rules","status":"passed","title":"should allow querying events generated by rules","duration":0.5293480000000272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should handle narrative flow through events and rules","status":"passed","title":"should handle narrative flow through events and rules","duration":0.45650300000124844,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.15990599999895494,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should continue processing when rules throw errors","status":"passed","title":"should continue processing when rules throw errors","duration":1.875847999999678,"failureMessages":[],"meta":{}}],"startTime":1755567217493,"endTime":1755567217500.8757,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/integration/event-rule-integration.test.ts"}]}