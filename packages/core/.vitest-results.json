{"numTotalTestSuites":64,"numPassedTestSuites":64,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":120,"numPassedTests":120,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1756182821209,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Test Setup"],"fullName":"Test Setup should have tests configured","status":"passed","title":"should have tests configured","duration":2.9571219999997993,"failureMessages":[],"meta":{}}],"startTime":1756182828127,"endTime":1756182828129.957,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/setup.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should define correct debug event structure","status":"passed","title":"should define correct debug event structure","duration":3.5123769999991055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEvent Structure"],"fullName":"Debug Types DebugEvent Structure should support all subsystem types","status":"passed","title":"should support all subsystem types","duration":0.28479300000071817,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should define debug context with optional emit","status":"passed","title":"should define debug context with optional emit","duration":0.2467209999995248,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should support debug callback","status":"passed","title":"should support debug callback","duration":0.7180540000008477,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugContext"],"fullName":"Debug Types DebugContext should handle disabled context","status":"passed","title":"should handle disabled context","duration":1.581002000000808,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define parser debug event types","status":"passed","title":"should define parser debug event types","duration":0.20170800000050804,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define validator debug event types","status":"passed","title":"should define validator debug event types","duration":0.1030030000001716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define executor debug event types","status":"passed","title":"should define executor debug event types","duration":0.22828500000105123,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define world model debug event types","status":"passed","title":"should define world model debug event types","duration":0.25443799999993644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","DebugEventTypes Constants"],"fullName":"Debug Types DebugEventTypes Constants should define text service debug event types","status":"passed","title":"should define text service debug event types","duration":0.10715799999888986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support parser debug flow","status":"passed","title":"should support parser debug flow","duration":0.3116439999994327,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should support collecting debug events from multiple subsystems","status":"passed","title":"should support collecting debug events from multiple subsystems","duration":0.23162699999920733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Debug Event Usage Patterns"],"fullName":"Debug Types Debug Event Usage Patterns should generate debug event IDs","status":"passed","title":"should generate debug event IDs","duration":0.32143700000051467,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should enforce subsystem types","status":"passed","title":"should enforce subsystem types","duration":0.15033199999925273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Types","Type Safety"],"fullName":"Debug Types Type Safety should allow any data type","status":"passed","title":"should allow any data type","duration":0.14091999999982363,"failureMessages":[],"meta":{}}],"startTime":1756182830969,"endTime":1756182830978.3215,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/debug/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create a basic event with required fields","status":"passed","title":"should create a basic event with required fields","duration":1.9254170000003796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include entity information","status":"passed","title":"should include entity information","duration":0.16500900000028196,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should include metadata","status":"passed","title":"should include metadata","duration":0.16124500000114494,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle empty payload","status":"passed","title":"should handle empty payload","duration":0.22322200000053272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate unique IDs","status":"passed","title":"should generate unique IDs","duration":0.28849600000103237,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should generate increasing timestamps","status":"passed","title":"should generate increasing timestamps","duration":10.909417000000758,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle complex payloads","status":"passed","title":"should handle complex payloads","duration":0.32589499999994587,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set narrate flag from metadata","status":"passed","title":"should set narrate flag from metadata","duration":0.33720099999845843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should set tags from metadata","status":"passed","title":"should set tags from metadata","duration":0.3695689999985916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should handle all entity types","status":"passed","title":"should handle all entity types","duration":0.14928099999997357,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should support legacy data property","status":"passed","title":"should support legacy data property","duration":0.1738949999999022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","createEvent"],"fullName":"Event System Helpers createEvent should create events suitable for the semantic event source","status":"passed","title":"should create events suitable for the semantic event source","duration":0.26959399999941525,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Event ID Format"],"fullName":"Event System Helpers Event ID Format should follow expected ID pattern","status":"passed","title":"should follow expected ID pattern","duration":1.320521000001463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard narrative events","status":"passed","title":"should create standard narrative events","duration":41.01340599999821,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event System Helpers","Integration with StandardEventTypes"],"fullName":"Event System Helpers Integration with StandardEventTypes should create standard error events","status":"passed","title":"should create standard error events","duration":5.005481999998665,"failureMessages":[],"meta":{}}],"startTime":1756182831029,"endTime":1756182831092.0054,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/event-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Platform Events","Event Types"],"fullName":"Platform Events Event Types should have all required event types","status":"passed","title":"should have all required event types","duration":2.4041120000001683,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform events","status":"passed","title":"should identify platform events","duration":0.3241909999997006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform request events","status":"passed","title":"should identify platform request events","duration":0.30107700000007753,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Type Guards"],"fullName":"Platform Events Type Guards should identify platform completion events","status":"passed","title":"should identify platform completion events","duration":0.4751300000007177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save requested event with context","status":"passed","title":"should create save requested event with context","duration":0.9810180000004038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save completed event","status":"passed","title":"should create save completed event","duration":0.433684000001449,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Save Events"],"fullName":"Platform Events Save Events should create save failed event with error","status":"passed","title":"should create save failed event with error","duration":0.1373589999984688,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore requested event with context","status":"passed","title":"should create restore requested event with context","duration":0.4162990000004356,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore completed event","status":"passed","title":"should create restore completed event","duration":0.9953690000002098,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restore Events"],"fullName":"Platform Events Restore Events should create restore failed event","status":"passed","title":"should create restore failed event","duration":0.8723989999998594,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit requested event with context","status":"passed","title":"should create quit requested event with context","duration":0.45062400000097114,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit confirmed event","status":"passed","title":"should create quit confirmed event","duration":0.1294980000002397,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Quit Events"],"fullName":"Platform Events Quit Events should create quit cancelled event","status":"passed","title":"should create quit cancelled event","duration":0.07474600000023202,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart requested event with context","status":"passed","title":"should create restart requested event with context","duration":0.29858799999965413,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart completed event","status":"passed","title":"should create restart completed event","duration":1.4250240000001213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Restart Events"],"fullName":"Platform Events Restart Events should create restart cancelled event","status":"passed","title":"should create restart cancelled event","duration":0.44076899999890884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should create platform event with custom data","status":"passed","title":"should create platform event with custom data","duration":0.8540849999990314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should generate unique event IDs","status":"passed","title":"should generate unique event IDs","duration":0.6873300000006566,"failureMessages":[],"meta":{}},{"ancestorTitles":["Platform Events","Generic Platform Event Creation"],"fullName":"Platform Events Generic Platform Event Creation should include timestamp","status":"passed","title":"should include timestamp","duration":0.24191699999937555,"failureMessages":[],"meta":{}}],"startTime":1756182830834,"endTime":1756182830848.242,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/platform-events.test.ts"},{"assertionResults":[{"ancestorTitles":["ISemanticEventSource","Event Storage"],"fullName":"ISemanticEventSource Event Storage should store and retrieve events","status":"passed","title":"should store and retrieve events","duration":3.223171999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Storage"],"fullName":"ISemanticEventSource Event Storage should clear all events","status":"passed","title":"should clear all events","duration":0.6752679999990505,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by type","status":"passed","title":"should filter events by type","duration":0.5179320000006555,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by entity","status":"passed","title":"should filter events by entity","duration":0.8342670000001817,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should filter events by tag","status":"passed","title":"should filter events by tag","duration":1.9370149999995192,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Queries"],"fullName":"ISemanticEventSource Event Queries should support custom filters","status":"passed","title":"should support custom filters","duration":1.2729749999998603,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":2.039807999999539,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should support EventEmitter interface","status":"passed","title":"should support EventEmitter interface","duration":1.238945999999487,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Emission"],"fullName":"ISemanticEventSource Event Emission should handle emitter unsubscribe","status":"passed","title":"should handle emitter unsubscribe","duration":0.9116610000000946,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Processing"],"fullName":"ISemanticEventSource Event Processing should track unprocessed events","status":"passed","title":"should track unprocessed events","duration":0.5918500000007043,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Event Processing"],"fullName":"ISemanticEventSource Event Processing should get events since a specific event","status":"passed","title":"should get events since a specific event","duration":1.5548070000004373,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Entity Relationships"],"fullName":"ISemanticEventSource Entity Relationships should find events by any entity role","status":"passed","title":"should find events by any entity role","duration":0.6454830000002403,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISemanticEventSource","Error Handling"],"fullName":"ISemanticEventSource Error Handling should handle errors in event emitter listeners","status":"passed","title":"should handle errors in event emitter listeners","duration":3.3551790000001347,"failureMessages":[],"meta":{}}],"startTime":1756182831886,"endTime":1756182831906.3552,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/semantic-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should emit events to subscribers","status":"passed","title":"should emit events to subscribers","duration":3.739070999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should support multiple subscribers","status":"passed","title":"should support multiple subscribers","duration":0.5013859999999113,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Basic Functionality"],"fullName":"SimpleEventSource Basic Functionality should return working unsubscribe function","status":"passed","title":"should return working unsubscribe function","duration":0.3822629999995115,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Error Handling"],"fullName":"SimpleEventSource Error Handling should handle errors in subscribers gracefully","status":"passed","title":"should handle errors in subscribers gracefully","duration":7.3552530000015395,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should track subscriber count","status":"passed","title":"should track subscriber count","duration":0.8198920000013459,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Subscriber Management"],"fullName":"SimpleEventSource Subscriber Management should clear all subscribers","status":"passed","title":"should clear all subscribers","duration":0.872892999999749,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Factory Function"],"fullName":"SimpleEventSource Factory Function should create event source via factory","status":"passed","title":"should create event source via factory","duration":1.9486639999995532,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle unsubscribe called multiple times","status":"passed","title":"should handle unsubscribe called multiple times","duration":0.2885600000008708,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleEventSource","Edge Cases"],"fullName":"SimpleEventSource Edge Cases should handle subscriber that modifies handler list during emit","status":"passed","title":"should handle subscriber that modifies handler list during emit","duration":0.9362070000006497,"failureMessages":[],"meta":{}}],"startTime":1756182832057,"endTime":1756182832074.9363,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/events/simple-event-source.test.ts"},{"assertionResults":[{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should process events through rules and generate new events","status":"passed","title":"should process events through rules and generate new events","duration":4.59257499999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle rule chains where one event triggers another","status":"passed","title":"should handle rule chains where one event triggers another","duration":1.5413579999985814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Flow Through Rules"],"fullName":"Event and Rule Integration Event Flow Through Rules should handle complex rule interactions with priorities","status":"passed","title":"should handle complex rule interactions with priorities","duration":0.6688689999991766,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should accumulate events from rules in the event source","status":"passed","title":"should accumulate events from rules in the event source","duration":1.0794239999995625,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should allow querying events generated by rules","status":"passed","title":"should allow querying events generated by rules","duration":0.9255809999995108,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Event Source and Rule System Working Together"],"fullName":"Event and Rule Integration Event Source and Rule System Working Together should handle narrative flow through events and rules","status":"passed","title":"should handle narrative flow through events and rules","duration":1.2300539999996545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should handle missing entities gracefully","status":"passed","title":"should handle missing entities gracefully","duration":0.49288500000147906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Event and Rule Integration","Error Handling in Integration"],"fullName":"Event and Rule Integration Error Handling in Integration should continue processing when rules throw errors","status":"passed","title":"should continue processing when rules throw errors","duration":5.477356999999756,"failureMessages":[],"meta":{}}],"startTime":1756182833194,"endTime":1756182833211.4773,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/integration/event-rule-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should add and retrieve rules","status":"passed","title":"should add and retrieve rules","duration":2.1757920000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should remove rules","status":"passed","title":"should remove rules","duration":0.47785300000032294,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Management"],"fullName":"ISimpleRuleSystem Rule Management should handle removing non-existent rules","status":"passed","title":"should handle removing non-existent rules","duration":1.2876969999997527,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should match rules by exact event type","status":"passed","title":"should match rules by exact event type","duration":1.133652999998958,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should handle wildcard rules (*)","status":"passed","title":"should handle wildcard rules (*)","duration":0.8397590000004129,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Matching"],"fullName":"ISimpleRuleSystem Event Matching should handle category wildcards (category:*)","status":"passed","title":"should handle category wildcards (category:*)","duration":0.8868579999998474,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Conditions"],"fullName":"ISimpleRuleSystem Rule Conditions should evaluate conditions before running actions","status":"passed","title":"should evaluate conditions before running actions","duration":0.724116999999751,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Conditions"],"fullName":"ISimpleRuleSystem Rule Conditions should skip rules with false conditions","status":"passed","title":"should skip rules with false conditions","duration":0.5434819999991305,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Rule Priority"],"fullName":"ISimpleRuleSystem Rule Priority should execute rules in priority order (highest first)","status":"passed","title":"should execute rules in priority order (highest first)","duration":0.6610060000002704,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Prevention"],"fullName":"ISimpleRuleSystem Event Prevention should stop processing when a rule prevents the event","status":"passed","title":"should stop processing when a rule prevents the event","duration":0.6213819999993575,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Event Prevention"],"fullName":"ISimpleRuleSystem Event Prevention should use the first prevention message","status":"passed","title":"should use the first prevention message","duration":0.19797099999959755,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should collect events from multiple rules","status":"passed","title":"should collect events from multiple rules","duration":0.3007770000003802,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should create narrative events for messages","status":"passed","title":"should create narrative events for messages","duration":0.5509779999993043,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should apply entity changes","status":"passed","title":"should apply entity changes","duration":0.22437800000079733,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Result Aggregation"],"fullName":"ISimpleRuleSystem Result Aggregation should handle multiple entity changes","status":"passed","title":"should handle multiple entity changes","duration":0.15910599999915576,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Complex Scenarios"],"fullName":"ISimpleRuleSystem Complex Scenarios should handle heavy item prevention","status":"passed","title":"should handle heavy item prevention","duration":0.23782500000015716,"failureMessages":[],"meta":{}},{"ancestorTitles":["ISimpleRuleSystem","Complex Scenarios"],"fullName":"ISimpleRuleSystem Complex Scenarios should handle darkness rules","status":"passed","title":"should handle darkness rules","duration":0.20485999999982596,"failureMessages":[],"meta":{}}],"startTime":1756182831536,"endTime":1756182831548.2378,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/rules/simple-rule-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create success results","status":"passed","title":"should create success results","duration":2.3476709999995364,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should create failure results","status":"passed","title":"should create failure results","duration":0.296358000001419,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Creation"],"fullName":"Result Creation should handle any value types","status":"passed","title":"should handle any value types","duration":0.6460630000001402,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify success results","status":"passed","title":"should identify success results","duration":0.3834360000000743,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should identify failure results","status":"passed","title":"should identify failure results","duration":0.40378099999907135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Type Guards"],"fullName":"Result Type Guards should narrow types correctly","status":"passed","title":"should narrow types correctly","duration":0.3953750000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should transform success values","status":"passed","title":"should transform success values","duration":0.2756050000007235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should pass through failures","status":"passed","title":"should pass through failures","duration":0.15381100000013248,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","map"],"fullName":"Result Transformations map should handle type transformations","status":"passed","title":"should handle type transformations","duration":0.5707449999990786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should transform error values","status":"passed","title":"should transform error values","duration":0.5522179999989021,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","mapError"],"fullName":"Result Transformations mapError should pass through successes","status":"passed","title":"should pass through successes","duration":1.186294999999518,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should chain successful results","status":"passed","title":"should chain successful results","duration":1.2172749999990629,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should propagate failures","status":"passed","title":"should propagate failures","duration":0.24750800000037998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should handle chained failures","status":"passed","title":"should handle chained failures","duration":0.18032700000003388,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Transformations","flatMap"],"fullName":"Result Transformations flatMap should allow complex chains","status":"passed","title":"should allow complex chains","duration":0.22441600000092876,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should return value for success","status":"passed","title":"should return value for success","duration":0.24794199999996636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw error for failure","status":"passed","title":"should throw error for failure","duration":0.39198100000066916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrap"],"fullName":"Result Unwrapping unwrap should throw non-Error failures","status":"passed","title":"should throw non-Error failures","duration":0.9478520000011486,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return value for success","status":"passed","title":"should return value for success","duration":0.31216000000131316,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should return default for failure","status":"passed","title":"should return default for failure","duration":0.25851999999940745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Unwrapping","unwrapOr"],"fullName":"Result Unwrapping unwrapOr should handle different types","status":"passed","title":"should handle different types","duration":0.2985129999997298,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for parsing operations","status":"passed","title":"should work for parsing operations","duration":0.5337190000009286,"failureMessages":[],"meta":{}},{"ancestorTitles":["Result","Real-world usage patterns"],"fullName":"Result Real-world usage patterns should work for validation chains","status":"passed","title":"should work for validation chains","duration":0.5573999999996886,"failureMessages":[],"meta":{}}],"startTime":1756182829767,"endTime":1756182829782.5574,"status":"passed","message":"","name":"/mnt/c/repotemp/sharpee/packages/core/tests/types/result.test.ts"}]}